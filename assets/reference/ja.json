{
  "h1": "リファレンス",
  "reference-search": "リファレンスを検索",
  "reference-description1": "お探しのものが見つからない場合は、以下を確認することをお勧めします。",
  "reference-description3": "また、リファレンスのオフライン版をダウンロードすることもできます。",
  "reference-contribute2": "お知らせください。",
  "reference-error1": "エラーまたはタイポを見つけましたか？",
  "reference-error3": "編集してください。",
  "reference-error5": "そしてプルリクエストを出してください！",
  "reference-deprecated1" : "推奨されません:",
  "reference-deprecated2" : "は推奨されません。将来のバージョンのp5にて削除されます。",
  "reference-p5sound-requires": "この関数を使うためには p5.sound ライブラリのインクルードが必要です。あなたの index.htmlファイルのhead内に下記を追加してください:",
  "reference-example": "例",
  "reference-description": "説明",
  "reference-extends": "継承",
  "reference-parameters": "パラメータ",
  "reference-syntax": "構文",
  "reference-returns": "戻り値",
  "Environment": "環境",
  "Color": "色",
  "Color Conversion": "色変換",
  "Creating & Reading": "作成と読み取り",
  "Setting": "設定",
  "Shape": "形状",
  "2D Primitives": "2D プリミティブ",
  "Attributes": "属性",
  "Curves": "曲線",
  "Vertex": "頂点",
  "Constants": "定数",
  "Structure": "構造",
  "DOM": "DOM",
  "Rendering": "レンダリング",
  "Foundation": "基礎",
  "Transform": "変形",
  "Data": "データ",
  "LocalStorage": "ローカルストレージ",
  "Dictionary": "辞書",
  "Events": "イベント",
  "Acceleration": "加速度",
  "Keyboard": "キーボード",
  "Mouse": "マウス",
  "Touch": "タッチ",
  "Image": "画像",
  "Loading & Displaying": "読み込みと表示",
  "Pixels": "ピクセル",
  "IO": "入出力",
  "Input": "入力",
  "Output": "出力",
  "Table": "表",
  "Math": "数学",
  "Calculation": "計算",
  "Vector": "ベクトル",
  "Noise": "ノイズ",
  "Random": "ランダム",
  "Trigonometry": "三角関数",
  "Typography": "タイポグラフィ",
  "Array Functions": "配列関数",
  "Conversion": "変換",
  "String Functions": "文字列関数",
  "Time & Date": "時間と日付",
  "3D Primitives": "3D プリミティブ",
  "3D": "3D",
  "Interaction": "インタラクション",
  "Lights": "ライト",
  "3D Models": "3D モデル",
  "Material": "マテリアル",
  "Camera": "カメラ",
  "p5": {
    "description": [
      "これはp5インスタンスコンストラクタです。",
      "p5インスタンスには、p5スケッチに関連するすべてのプロパティとメソッドが含まれています。入力されたスケッチクロージャを受け取り、生成されたp5キャンバスをノードにアタッチするためのオプションのノードパラメータを取ることもできます。スケッチクロージャは、新しく作成されたp5インスタンスを唯一の引数として受け取り、スケッチの実行に必要なpreload()、setup()、および/またはdraw()プロパティを設定することもできます。",
      "p5スケッチは、「グローバル」モードまたは「インスタンス」モードで実行できます。「グローバル」 - すべてのプロパティとメソッドがウィンドウにアタッチされます「インスタンス」 - すべてのプロパティとメソッドがこのp5オブジェクトにバインドされます"
    ],
    "returns": "p5: p5インスタンス",
    "params": {
      "sketch": "Function: 与えられたp5インスタンスにオプションでpreload()、setup()、および/またはdraw()プロパティを設定できるクロージャ",
      "node": "HTMLElement:(オプション)キャンバスをアタッチする要素"
    },
    "describe": {
      "description": [
        "キャンバスにスクリーンリーダー対応の説明を作成します。最初のパラメータは、キャンバスの説明を示す文字列である必要があります。2つ目のパラメータはオプションです。指定された場合、説明の表示方法が決まります。",
        "<code class=\"language-javascript\">describe(text, LABEL)</code>は、キャンバスに隣接するdiv内にある<a href=\"https://en.wikipedia.org/wiki/Museum_label\" target=\"_blank\">墓石または展示ラベル/キャプション</a>として、すべてのユーザーに説明を表示します。CSSで好みのスタイルに変更できます。",
        "<code class=\"language-javascript\">describe(text, FALLBACK)</code>は、<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Hit_regions_and_accessibility\" target=\"_blank\">キャンバス要素内のサブDOM</a>で、スクリーンリーダーユーザー専用に説明を利用可能にします。2つ目のパラメータが指定されていない場合、デフォルトで説明はスクリーンリーダーユーザーにのみ利用可能です。"
      ],
      "params": {
        "text": "String: キャンバスの説明",
        "display": "Constant: (オプション)LABEL または FALLBACK のいずれか"
      }
    },
    "describeElement": {
      "description": [
        "この関数は、キャンバス内の要素（一緒に意味を作り出す形状または形状のグループ）に対してスクリーンリーダー対応の説明を作成します。最初のパラメータは要素の名前である必要があります。2つ目のパラメータは、要素の説明を示す文字列である必要があります。3つ目のパラメータはオプションです。指定された場合、要素の説明の表示方法が決まります。",
        "<code class=\"language-javascript\">describeElement(name, text, LABEL)</code>は、キャンバスに隣接するdiv内にある<a href=\"https://en.wikipedia.org/wiki/Museum_label\" target=\"_blank\">墓石または展示ラベル/キャプション</a>として、すべてのユーザーに要素の説明を表示します。CSSで好みのスタイルに変更できます。",
        "<code class=\"language-javascript\">describeElement(name, text, FALLBACK)</code>は、<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Hit_regions_and_accessibility\" target=\"_blank\">キャンバス要素内のサブDOM</a>で、スクリーンリーダーユーザー専用に要素の説明を利用可能にします。2つ目のパラメータが指定されていない場合、デフォルトで要素の説明はスクリーンリーダーユーザーにのみ利用可能です。"
      ],
      "params": {
        "name": "String: 要素の名前",
        "text": "String: 要素の説明",
        "display": "Constant: (オプション)LABEL または FALLBACK のいずれか"
      }
    },
    "textOutput": {
      "description": [
        "<code class=\"language-javascript\">textOutput()</code>は、キャンバス上に存在する形状を説明するスクリーンリーダー対応の出力を作成します。キャンバスの一般的な説明には、キャンバスのサイズ、キャンバスの色、キャンバス内の要素の数（例:「あなたの出力は、400x400ピクセルのラベンダーブルーのキャンバスで、以下の4つの形状が含まれています:」）が含まれます。この説明の後に、各形状の色、位置、面積が説明された形状のリストが続きます（例:「キャンバスの1％を覆う左上のオレンジ色の楕円」）。各要素を選択すると、詳細が表示されます。要素のテーブルも提供されます。このテーブルでは、形状、色、位置、座標、面積が説明されています（例:「オレンジ色の楕円 位置=左上 面積=2」）。",
        "<code class=\"language-javascript\">textOutput()</code>および<code class=\"language-javascript\">textOutput(FALLBACK)</code>は、<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Hit_regions_and_accessibility\" target=\"_blank\">キャンバス要素内のサブDOM</a>でスクリーンリーダーにアクセス可能な出力を利用可能にします。<code class=\"language-javascript\">textOutput(LABEL)</code>は、キャンバスに隣接する出力が含まれる追加のdivを作成し、これはコーディング時にキャンバスのサブDOM外に出力を表示したい非スクリーンリーダーユーザーにとって便利です。ただし、LABELを使用すると、スクリーンリーダーユーザーにとって不要な冗長性が生じます。スケッチの開発プロセスの一部としてのみLABELを使用し、公開またはスクリーンリーダーユーザーと共有する前に削除することをお勧めします。"
      ],
      "params": {
        "display": "Constant: (オプション)FALLBACK または LABEL のいずれか"
      }
    },
    "gridOutput": {
      "description": [
        "<code class=\"language-javascript\">gridOutput()</code>は、キャンバスの内容を、各形状の空間的な位置に基づいたグリッド（htmlテーブル）の形でレイアウトします。テーブル出力の前に、キャンバスの簡単な説明が利用可能です。この説明には、背景の色、キャンバスのサイズ、オブジェクトの数、オブジェクトの種類（例:「ラベンダーブルーのキャンバスは200x200で、3つの楕円と1つの長方形が含まれています」）が含まれます。グリッドは空間的にコンテンツを記述し、各要素はその位置に応じてテーブルのセルに配置されます。各セル内の要素には、その要素の色と形状のタイプが利用可能です（例:「オレンジ色の楕円」）。これらの説明は個別に選択して詳細を取得できます。形状、色、位置、面積が説明された要素のリスト（例:「オレンジ色の楕円 位置=左上 面積=1％」）も利用可能です。",
        "<code class=\"language-javascript\">gridOutput()</code>および<code class=\"language-javascript\">gridOutput(FALLBACK)</code>は、<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Hit_regions_and_accessibility\" target=\"_blank\">キャンバス要素内のサブDOM</a>でスクリーンリーダーにアクセス可能な出力を利用可能にします。<code class=\"language-javascript\">gridOutput(LABEL)</code>は、キャンバスに隣接する出力が含まれる追加のdivを作成し、これはコーディング時にキャンバスのサブDOM外に出力を表示したい非スクリーンリーダーユーザーにとって便利です。ただし、LABELを使用すると、スクリーンリーダーユーザーにとって不要な冗長性が生じます。スケッチの開発プロセスの一部としてのみLABELを使用し、公開またはスクリーンリーダーユーザーと共有する前に削除することをお勧めします。"
      ],
      "params": {
        "display": "Constant: (オプション)FALLBACK または LABEL のいずれか"
      }
    },
    "alpha": {
      "description": [
        "色またはピクセル配列からアルファ値を抽出します。"
      ],
      "returns": "Number: アルファ値",
      "params": {
        "color": "p5.Color|Number[]|String: <a href=\"#/p5.Color\">p5.Color</a> オブジェクト、カラーコンポーネント、または CSS カラー"
      }
    },
    "blue": {
      "description": [
        "色またはピクセル配列から青の値を抽出します。"
      ],
      "returns": "Number: 青の値",
      "params": {
        "color": "p5.Color|Number[]|String: <a href=\"#/p5.Color\">p5.Color</a> オブジェクト、カラーコンポーネント、または CSS カラー"
      }
    },
    "brightness": {
      "description": [
        "色またはピクセル配列からHSB明るさ値を抽出します。"
      ],
      "returns": "Number: 明るさの値",
      "params": {
        "color": "p5.Color|Number[]|String: <a href=\"#/p5.Color\">p5.Color</a> オブジェクト、カラーコンポーネント、または CSS カラー"
      }
    },
    "color": {
      "description": [
        "色データ型の変数に格納するための色を作成します。パラメータは、現在の <a href=\"#/p5/colorMode\">colorMode()</a> に応じて RGB または HSB の値として解釈されます。デフォルトモードは 0 から 255 の RGB 値であり、したがって、関数コール color(255, 204, 0) は鮮やかな黄色の色を返します。",
        "<a href=\"#/p5/color\">color()</a> に 1 つの値のみが提供される場合、グレースケールの値として解釈されることに注意してください。2 つ目の値を追加すると、それがアルファ透明度に使用されます。3 つの値が指定されると、それらは RGB または HSB の値として解釈されます。4 つ目の値を追加すると、アルファ透明度が適用されます。",
        "単一の文字列引数が提供される場合、RGB、RGBA、および 16 進数 CSS カラー文字列およびすべての名前付きカラー文字列がサポートされます。この場合、2 番目の引数としてのアルファ数値値はサポートされず、RGBA 形式を使用する必要があります。"
      ],
      "returns": "p5.Color: 結果の色",
      "params": {
        "gray": "Number: 白と黒の間の値を指定する数値。",
        "alpha": "Number: (オプション)現在のカラーレンジに対するアルファ値（デフォルトは 0-255）",
        "v1": "Number: 現在のカラーレンジに対する赤または色相値",
        "v2": "Number: 現在のカラーレンジに対する緑または彩度値",
        "v3": "Number: 現在のカラーレンジに対する青または明るさの値",
        "value": "String: カラー文字列",
        "values": "Number[]: 色の赤、緑、青、およびアルファ成分を含む配列",
        "color": "p5.Color"
      }
    },
    "green": {
      "description": [
        "色またはピクセル配列から緑の値を抽出します。"
      ],
      "returns": "Number: 緑の値",
      "params": {
        "color": "p5.Color|Number[]|String: <a href=\"#/p5.Color\">p5.Color</a> オブジェクト、カラーコンポーネント、または CSS カラー"
      }
    },
    "hue": {
      "description": [
        "色またはピクセル配列から色相値を抽出します。",
        "色相は HSB と HSL の両方に存在します。この関数は、HSB カラーオブジェクトが与えられた場合（またはカラーモードが HSB の場合にピクセル配列が与えられた場合）、HSB 正規化された色相を返しますが、それ以外の場合は HSL 正規化された色相をデフォルトで返します。 （最大色相設定がそれぞれのシステムで異なる場合のみ、値が異なります。）"
      ],
      "returns": "Number: 色相",
      "params": {
        "color": "p5.Color|Number[]|String: <a href=\"#/p5.Color\">p5.Color</a> オブジェクト、カラーコンポーネント、または CSS カラー"
      }
    },
    "lerpColor": {
      "description": [
        "2つの色をブレンドして、それらの間にある第3の色を見つけます。amt パラメータは、2つの値の間で補間する量で、0.0 は最初の色に等しく、0.1 は最初の色に非常に近く、0.5 はちょうど中間です。0 未満の量は 0 として扱われます。同様に、1を超える量は1でキャップされます。<a href=\"#/p5/lerp\">lerp()</a> の動作とは異なりますが、範囲外の数値が奇妙で予期しない色を生成しないようにするために必要です。",
        "色の補間方法は、現在のカラーモードに依存します。"
      ],
      "returns": "p5.Color: 補間された色",
      "params": {
        "c1": "p5.Color: この色から補間",
        "c2": "p5.Color: この色へ補間",
        "amt": "Number: 0 から 1 の間の数値"
      }
    },
    "lightness": {
      "description": [
        "色またはピクセル配列から HSL 輝度値を抽出します。"
      ],
      "returns": "Number: 輝度",
      "params": {
        "color": "p5.Color|Number[]|String: <a href=\"#/p5.Color\">p5.Color</a> オブジェクト、カラーコンポーネント、または CSS カラー"
      }
    },
    "red": {
      "description": [
        "色またはピクセル配列から赤の値を抽出します。"
      ],
      "returns": "Number: 赤の値",
      "params": {
        "color": "p5.Color|Number[]|String: <a href=\"#/p5.Color\">p5.Color</a> オブジェクト、カラーコンポーネント、または CSS カラー"
      }
    },
    "saturation": {
      "description": [
        "色またはピクセル配列から彩度の値を抽出します。",
        "彩度は、HSB と HSL で異なるスケールで表されます。この関数は、HSB カラーオブジェクトを指定した場合（またはカラーモードが HSB の場合にピクセル配列を指定した場合）には、HSB 彩度を返しますが、それ以外の場合は HSL 彩度がデフォルトになります。"
      ],
      "returns": "Number: 彩度の値",
      "params": {
        "color": "p5.Color|Number[]|String: <a href=\"#/p5.Color\">p5.Color</a> オブジェクト、カラーコンポーネント、または CSS カラー"
      }
    },
    "background": {
      "description": [
        "<a href=\"#/p5/background\">background()</a> 関数は、p5.js キャンバスの背景に使用される色を設定します。デフォルトの背景は透明です。この関数は通常、<a href=\"#/p5/draw\">draw()</a> 内で各フレームの開始時にディスプレイウィンドウをクリアするために使用されますが、<a href=\"#/p5/setup\">setup()</a> 内で最初のフレームの背景を設定するために使用されることもありますし、背景を一度だけ設定する必要がある場合にも使用できます。",
        "色は、現在の <a href=\"#/p5/colorMode\">colorMode</a> に応じて、RGB、HSB、または HSL カラーで指定されます。(デフォルトのカラースペースは RGB で、各値の範囲は 0 から 255 です)。デフォルトでは、アルファの範囲も 0 から 255 です。",
        "単一の文字列引数が提供された場合、RGB、RGBA、および 16 進数の CSS カラー文字列およびすべての名前付きカラー文字列がサポートされます。この場合、2 番目の引数としてのアルファ数値はサポートされず、RGBA 形式を使用する必要があります。",
        "背景色を設定するために、<a href=\"#/p5.Color\">p5.Color</a> オブジェクトも提供できます。",
        "背景画像として設定するために、<a href=\"#/p5.Image\">p5.Image</a> も提供できます。"
      ],
      "params": {
        "color": "p5.Color: <a href=\"#/p5/color\">color()</a> 関数で作成された任意の値",
        "colorstring": "String: カラー文字列、対応する形式は次のとおりです: 整数 rgb() または rgba()、パーセンテージ rgb() または rgba()、3 桁の 16 進数、6 桁の 16 進数",
        "a": "Number: (オプション) 現在のカラー範囲に対する背景の不透明度 (デフォルトは 0-255)",
        "gray": "Number: 白と黒の間の値を指定",
        "v1": "Number: 現在のカラーモードに応じた赤または色相の値",
        "v2": "Number: 現在のカラーモードに応じた緑または彩度の値",
        "v3": "Number: 現在のカラーモードに応じた青または明るさの値",
        "values": "Number[]: 色の赤、緑、青、およびアルファ成分を含む配列",
        "image": "p5.Image: 背景として設定する <a href=\"#/p5/loadImage\">loadImage()</a> または <a href=\"#/p5/createImage\">createImage()</a> で作成された画像（スケッチウィンドウと同じサイズである必要があります）"
      }
    },
    "clear": {
      "description": [
        "バッファ内のピクセルをクリアします。この関数はキャンバスのみをクリアします。<a href=\"#/p5/createVideo\">createVideo()</a> や <a href=\"#/p5/createDiv\">createDiv()</a> などの createX() メソッドで作成されたオブジェクトはクリアされません。メインのグラフィックスコンテキストとは異なり、<a href=\"#/p5/createGraphics\">createGraphics()</a> で作成された追加のグラフィックス領域のピクセルは完全または部分的に透明にできます。この関数はすべてをクリアして、すべてのピクセルを 100% 透明にします。",
        "注: WebGL モードでは、この関数に正規化された RGBA カラー値を渡して、画面を特定の色にクリアできます。色に加えて、デプスバッファもクリアされます。WebGL レンダラーを使用していない場合、これらのカラー値は効果がありません。"
      ],
      "params": {
        "r": "Number: 正規化された赤の値。",
        "g": "Number: 正規化された緑の値。",
        "b": "Number: 正規化された青の値。",
        "a": "Number: 正規化されたアルファの値。"
      }
    },
    "colorMode": {
      "description": [
        "<a href=\"#/p5/colorMode\">colorMode()</a> は、p5.jsが色データを解釈する方法を変更します。デフォルトでは、<a href=\"#/p5/fill\">fill()</a>、<a href=\"#/p5/stroke\">stroke()</a>、<a href=\"#/p5/background\">background()</a>、および <a href=\"#/p5/color\">color()</a> のパラメータは、RGBカラーモデルを使用して0から255の間の値で定義されます。これは、colorMode(RGB, 255) を設定することと同等です。colorMode(HSB) を設定すると、代わりにHSBシステムを使用できます。デフォルトでは、これは colorMode(HSB, 360, 100, 100, 1) です。HSLも使用できます。",
        "注: 既存のカラーオブジェクトは、それらが作成されたモードを記憶しているため、外観に影響を与えることなく、好きなようにモードを変更できます。"
      ],
      "params": {
        "mode": "Constant: RGB、HSB、またはHSLのいずれか。それぞれ、赤/緑/青と色相/彩度/明度（または輝度）に対応します。",
        "max": "Number: (オプション) すべての値の範囲",
        "max1": "Number: 現在のカラーモードに応じて、赤または色相の範囲",
        "max2": "Number: 現在のカラーモードに応じて、緑または彩度の範囲",
        "max3": "Number: 現在のカラーモードに応じて、青または明度/輝度の範囲",
        "maxA": "Number: (オプション) アルファの範囲"
      }
    },
    "fill": {
      "description": [
        "図形に塗りつぶし色を設定します。例えば、fill(204, 102, 0) を実行すると、その後に描画される全ての図形はオレンジ色で塗りつぶされます。この色は、現在の <a href=\"#/p5/colorMode\">colorMode()</a> によってRGBまたはHSBのいずれかで指定されます。 (デフォルトのカラースペースはRGBで、各値の範囲は0から255です) アルファの範囲もデフォルトでは0から255です。",
        "単一の文字列引数が提供された場合、RGB、RGBA、Hex CSS カラーストリングおよびすべての名前付きカラーストリングがサポートされます。この場合、2番目の引数としてのアルファ数値はサポートされず、RGBA形式を使用する必要があります。",
        "塗りつぶし色を設定するために、<a href=\"#/p5.Color\">p5.Color</a> オブジェクトも提供できます。"
      ],
      "params": {
        "v1": "Number: 現在のカラーレンジに対する赤または色相の値",
        "v2": "Number: 現在のカラーレンジに対する緑または彩度の値",
        "v3": "Number: 現在のカラーレンジに対する青または明度の値",
        "alpha": "Number (オプション)",
        "value": "String: カラー文字列",
        "gray": "Number: グレーの値",
        "values": "Number[]: 赤、緑、青、およびアルファ成分を含む配列",
        "color": "p5.Color: 塗りつぶし色"
      }
    },
    "noFill": {
      "description": [
        "ジオメトリの塗りつぶしを無効にします。 <a href=\"#/p5/noStroke\">noStroke()</a> と <a href=\"#/p5/noFill\">noFill()</a> の両方が呼び出されると、画面には何も描画されません。"
      ]
    },
    "noStroke": {
      "description": [
        "ストローク（輪郭）の描画を無効にします。<a href=\"#/p5/noStroke\">noStroke()</a> と <a href=\"#/p5/noFill\">noFill()</a> の両方が呼び出されると、画面には何も描画されません。"
      ]
    },
    "stroke": {
      "description": [
        "線や図形の境界線を描画する際に使用される色を設定します。この色は、現在の <a href=\"#/p5/colorMode\">colorMode()</a> に応じて RGB または HSB 色で指定されます（デフォルトの色空間は RGB で、各値の範囲は 0 から 255 です）。デフォルトのアルファ範囲も 0 から 255 です。",
        "単一の文字列引数が与えられた場合、RGB、RGBA、Hex CSS カラー文字列およびすべての名前付きカラー文字列がサポートされます。この場合、2 番目の引数としてアルファ数値はサポートされず、RGBA 形式を使用する必要があります。",
        "<a href=\"#/p5.Color\">p5.Color</a> オブジェクトも、ストロークカラーを設定するために提供できます。"
      ],
      "params": {
        "v1": "Number: 現在のカラーレンジに対する赤または色相の値",
        "v2": "Number: 現在のカラーレンジに対する緑または彩度の値",
        "v3": "Number: 現在のカラーレンジに対する青または明度の値",
        "alpha": "Number (オプション)",
        "value": "String: カラー文字列",
        "gray": "Number: グレーの値",
        "values": "Number[]: 色の赤、緑、青、アルファ成分を含む配列",
        "color": "p5.Color: ストロークカラー"
      }
    },
    "erase": {
      "description": [
        "<a href=\"#/p5/erase\">erase()</a> に続くすべての描画は、キャンバスから減算されます。消去された領域は、キャンバスの下にあるウェブページが表示されます。<a href=\"#/p5/noErase\">noErase()</a> で消去をキャンセルできます。",
        "<a href=\"#/p5/erase\">erase()</a> と <a href=\"#/p5/noErase\">noErase()</a> の間にある <a href=\"#/p5/image\">image()</a> と <a href=\"#/p5/background\">background()</a> での描画は、キャンバスを消去せず、通常どおりに動作します。"
      ],
      "params": {
        "strengthFill": "Number: (オプション) 形状の塗りつぶしの消去強度の数値（0-255）。引数がない場合、デフォルトで 255 になり、最大強度になります。",
        "strengthStroke": "Number: (オプション) 形状のストロークの消去強度の数値（0-255）。引数がない場合、デフォルトで 255 になり、最大強度になります。"
      }
    },
    "noErase": {
      "description": [
        "<a href=\"#/p5/erase\">erase()</a> で開始された消去を終了します。<a href=\"#/p5/fill\">fill()</a>、<a href=\"#/p5/stroke\">stroke()</a>、および <a href=\"#/p5/blendMode\">blendMode()</a> の設定は、<a href=\"#/p5/erase\">erase()</a> を呼び出す前の状態に戻ります。"
      ]
    },
    "arc": {
      "description": [
        "画面に円弧を描画します。x、y、w、h、start、stop のみで呼び出されると、円弧は開いた扇形として描画され、塗りつぶされます。mode パラメータが提供された場合、円弧は開いた半円（OPEN）、閉じた半円（CHORD）、または閉じた扇形（PIE）として塗りつぶされます。原点は <a href=\"#/p5/ellipseMode\">ellipseMode()</a> 関数で変更できます。",
        "円弧は、start が楕円上でどこにあるかから、stop が楕円上でどこにあるかまで、常に時計回りに描画されます。start または stop に TWO_PI を加算または減算しても、それらが楕円上でどこにあるかは変わりません。start と stop が同じ場所にある場合、完全な楕円が描画されます。y 軸が下向きに増加するため、角度は正の x 方向（\"3 時\"）から時計回りに測定されることに注意してください。"
      ],
      "params": {
        "x": "Number: 円弧の楕円の x 座標",
        "y": "Number: 円弧の楕円の y 座標",
        "w": "Number: デフォルトでの円弧の楕円の幅",
        "h": "Number: デフォルトでの円弧の楕円の高さ",
        "start": "Number: 円弧を開始する角度（ラジアンで指定）",
        "stop": "Number: 円弧を終了する角度（ラジアンで指定）",
        "mode": "Constant: (オプション)円弧の描画方法を決定するオプションパラメータ。CHORD、PIE、または OPEN のいずれか",
        "detail": "Integer: (オプション)WebGL モード専用のオプションパラメータ。これは、円弧の周囲を構成する頂点の数を指定するためのものです。デフォルト値は 25 です。50 を超える詳細にはストロークを描画しません。"
      }
    },
    "ellipse": {
      "description": [
        "画面に楕円（オーバル）を描画します。デフォルトでは、最初の2つのパラメーターは楕円の中心の位置を設定し、3番目と4番目のパラメーターは形状の幅と高さを設定します。高さが指定されていない場合、幅の値が幅と高さの両方に使用されます。負の高さまたは幅が指定された場合、絶対値が使用されます。",
        "幅と高さが等しい楕円は円です。原点は <a href=\"#/p5/ellipseMode\">ellipseMode()</a> 関数で変更できます。"
      ],
      "params": {
        "x": "Number: 楕円の中心の x 座標。",
        "y": "Number: 楕円の中心の y 座標。",
        "w": "Number: 楕円の幅。",
        "h": "Number: (オプション)楕円の高さ。",
        "detail": "Integer: (オプション)WEBGL モード専用のオプションパラメータ。これは、楕円の周囲を構成する頂点の数を指定するためのものです。デフォルト値は 25 です。50 を超える詳細にはストロークを描画しません。"
      }
    },
    "circle": {
      "description": [
        "画面に円を描画します。円は単純な閉じた図形です。中心と呼ばれる特定の点から与えられた距離にある平面上のすべての点の集合です。この関数は、楕円の幅と高さが同じ場合の<a href=\"#/p5/ellipse\">ellipse()</a>関数の特殊なケースです。楕円の高さと幅は、円の直径に対応します。デフォルトでは、最初の2つのパラメーターは円の中心の位置を設定し、3番目のパラメーターは円の直径を設定します。"
      ],
      "params": {
        "x": "Number: 円の中心の x 座標。",
        "y": "Number: 円の中心の y 座標。",
        "d": "Number: 円の直径。"
      }
    },
    "line": {
      "description": [
        "画面に線（2点間の直接の経路）を描画します。4つのパラメーターで呼び出されると、デフォルトの幅1ピクセルの2Dの線を描画します。この幅は、<a href=\"#/p5/strokeWeight\"> strokeWeight()</a>関数を使用して変更できます。線は塗りつぶしができないため、<a href=\"#/p5/fill\">fill()</a>関数は線の色に影響しません。線の色を変更するには、<a href=\"#/p5/stroke\">stroke()</a>関数を使用してください。"
      ],
      "params": {
        "x1": "Number: 最初の点のx座標",
        "y1": "Number: 最初の点のy座標",
        "x2": "Number: 2番目の点のx座標",
        "y2": "Number: 2番目の点のy座標",
        "z1": "Number: 最初の点のz座標",
        "z2": "Number: 2番目の点のz座標"
      }
    },
    "point": {
      "description": [
        "1ピクセルの次元での空間内の座標である点を描画します。最初のパラメーターは点の水平方向の値であり、2番目のパラメーターは点の垂直方向の値です。点の色は<a href=\"#/p5/stroke\">stroke()</a>関数で変更されます。点のサイズは、<a href=\"#/p5/strokeWeight\">strokeWeight()</a>関数で変更できます。"
      ],
      "params": {
        "x": "Number: x座標",
        "y": "Number: y座標",
        "z": "Number: (オプション)z座標（WebGLモード用）",
        "coordinate_vector": "p5.Vector: 座標ベクトル"
      }
    },
    "quad": {
      "description": [
        "キャンバスに四角形を描画します。四角形は、四辺多角形です。長方形に似ていますが、その辺の間の角度は90度に制約されていません。最初のパラメータのペア（x1、y1）が最初の頂点を設定し、その後のペアは定義された形状を時計回りまたは反時計回りに進むべきです。z引数は、quad()がWEBGLモードで使用されている場合にのみ機能します。"
      ],
      "params": {
        "x1": "Number: 最初の点のx座標",
        "y1": "Number: 最初の点のy座標",
        "x2": "Number: 2番目の点のx座標",
        "y2": "Number: 2番目の点のy座標",
        "x3": "Number: 3番目の点のx座標",
        "y3": "Number: 3番目の点のy座標",
        "x4": "Number: 4番目の点のx座標",
        "y4": "Number: 4番目の点のy座標",
        "detailX": "Integer: (オプション)x方向のセグメントの数",
        "detailY": "Integer: (オプション)y方向のセグメントの数",
        "z1": "Number: 最初の点のz座標",
        "z2": "Number: 2番目の点のz座標",
        "z3": "Number: 3番目の点のz座標",
        "z4": "Number: 4番目の点のz座標"
      }
    },
    "rect": {
      "description": [
        "キャンバスに長方形を描画します。長方形は、すべての角度が90度の四辺閉形状です。デフォルトでは、最初の2つのパラメータは左上隅の位置を設定し、3番目は幅を設定し、4番目は高さを設定します。これらのパラメータの解釈方法は、<a href=\"#/p5/rectMode\">rectMode()</a>関数で変更できます。",
        "指定された場合、5番目、6番目、7番目、8番目のパラメータは、それぞれ左上、右上、右下、左下の角の半径を決定します。省略された角の半径パラメータは、パラメータリスト内の前に指定された半径値に設定されます。"
      ],
      "params": {
        "x": "Number: 長方形のx座標。",
        "y": "Number: 長方形のy座標。",
        "w": "Number: 長方形の幅。",
        "h": "Number: (オプション) 長方形の高さ。",
        "tl": "Number: (オプション) 左上の角の半径。",
        "tr": "Number: (オプション) 右上の角の半径。",
        "br": "Number: (オプション) 右下の角の半径。",
        "bl": "Number: (オプション) 左下の角の半径。",
        "detailX": "Integer: (オプション) x方向のセグメント数（WebGLモード用）",
        "detailY": "Integer: (オプション) y方向のセグメント数（WebGLモード用）"
      }
    },
    "square": {
      "description": [
        "画面に正方形を描画します。正方形は4つの角度が90度で、4つの辺が等しい4辺形です。この関数は、幅と高さが同じで、パラメータが「s」で辺の長さが設定されているrect()関数の特殊な場合です。デフォルトでは、最初の2つのパラメータは左上の角の位置を設定し、3つ目のパラメータは正方形の辺の長さを設定します。これらのパラメータの解釈方法は、rectMode()関数で変更できます。",
        "4番目から7番目のパラメータが指定された場合、それぞれ左上、右上、右下、左下の角の半径が決定されます。省略されたコーナー半径パラメータは、パラメータリストで前に指定された半径値に設定されます。"
      ],
      "params": {
        "x": "Number: 正方形のx座標。",
        "y": "Number: 正方形のy座標。",
        "s": "Number: 正方形の辺の長さ。",
        "tl": "Number: (オプション) 左上の角の半径。",
        "tr": "Number: (オプション) 右上の角の半径。",
        "br": "Number: (オプション) 右下の角の半径。",
        "bl": "Number: (オプション) 左下の角の半径。"
      }
    },
    "triangle": {
      "description": [
        "三角形をキャンバスに描画します。三角形は3つの点を結びつけて作られる平面です。最初の2つの引数は最初の点を指定し、その次の2つの引数は2番目の点を指定し、最後の2つの引数は3番目の点を指定します。"
      ],
      "params": {
        "x1": "Number: 最初の点のx座標。",
        "y1": "Number: 最初の点のy座標。",
        "x2": "Number: 2番目の点のx座標。",
        "y2": "Number: 2番目の点のy座標。",
        "x3": "Number: 3番目の点のx座標。",
        "y3": "Number: 3番目の点のy座標。"
      }
    },
    "ellipseMode": {
      "description": [
        "楕円を描画するときの基準点を変更することができます。具体的には、<a href=\"#/p5/ellipse\">ellipse()</a>、<a href=\"#/p5/circle\">circle()</a>、<a href=\"#/p5/arc\">arc()</a> のパラメータの解釈方法を変更します。",
        "デフォルトのモードは <code>CENTER</code> で、最初の2つのパラメータは中心点のx座標とy座標として解釈され、3つ目と4つ目のパラメータは幅と高さとして解釈されます。",
        "<code>ellipseMode(RADIUS)</code> では、最初の2つのパラメータも中心点のx座標とy座標として解釈されますが、3つ目と4つ目のパラメータは、幅と高さの半分をそれぞれ指定します。",
        "<code>ellipseMode(CORNER)</code> では、最初の2つのパラメータは楕円の左上隅として解釈され、3つ目と4つ目のパラメータは幅と高さとして解釈されます。",
        "<code>ellipseMode(CORNERS)</code> では、最初の2つのパラメータは楕円の境界ボックスの1つの隅の位置として解釈され、3つ目と4つ目のパラメータは対角線上の相対的な位置として解釈されます。",
        "このメソッドのパラメータは、事前に定義された定数であるため、大文字で書く必要があります。JavaScriptは大文字小文字を区別するためです。"
      ],
      "params": {
        "mode": "Constant: CENTER、RADIUS、CORNER、またはCORNERS"
      }
    },
    "noSmooth": {
      "description": [
        "すべてのジオメトリをジャギー（エイリアス）のあるエッジで描画します。",
        "2Dモードでは、デフォルトで<a href=\"#/p5/smooth\">smooth()</a>が有効になっているため、ジオメトリ、イメージ、フォントのスムージングを無効にするには<a href=\"#/p5/noSmooth\">noSmooth()</a>を呼び出す必要があります。",
        "3Dモードでは、デフォルトで<a href=\"#/p5/noSmooth\">noSmooth()</a>が有効になっているため、ジオメトリのスムーズ（アンチエイリアス）エッジを使用するには<a href=\"#/p5/smooth\">smooth()</a>を呼び出す必要があります。"
      ]
    },
    "rectMode": {
      "description": [
        "rect()で描画される矩形の描画開始位置を変更します。",
        "デフォルトのモードは<code>CORNER</code>で、最初の2つのパラメータは形状の左上隅を表し、3番目と4番目のパラメータは幅と高さです。",
        "<code>rectMode(CORNERS)</code>は、最初の2つのパラメータを1つの隅の位置とし、3番目と4番目のパラメータを対角線上の反対側の位置として解釈します。注意:矩形は座標の間に描画されるため、最初の隅が左上隅である必要はありません。",
        "<code>rectMode(CENTER)</code>は、最初の2つのパラメータを形状の中心点とし、3番目と4番目のパラメータを幅と高さとして解釈します。",
        "<code>rectMode(RADIUS)</code>も最初の2つのパラメータを形状の中心点として使用しますが、3番目と4番目のパラメータをそれぞれ形状の幅と高さの半分として指定します。",
        "このメソッドのパラメータはすべて大文字で書かれている必要があります。これは、定数がすべて大文字で定義されているためであり、JavaScriptは大文字と小文字を区別する言語であるためです。"
      ],
      "params": {
        "mode": "Constant: CORNER、CORNERS、CENTER、RADIUSのいずれか"
      }
    },
    "smooth": {
      "description": [
        "スムーズ（アンチエイリアス）のエッジを使用してすべてのジオメトリを描画します。 <a href=\"#/p5/smooth\">smooth()</a>は、リサイズされたイメージの品質も向上させます。",
        "2Dモードでは、<a href=\"#/p5/smooth\">smooth()</a>がデフォルトで有効になっていることに注意してください。 <a href=\"#/p5/noSmooth\">noSmooth()</a>を使用して、ジオメトリ、イメージ、フォントのスムージングを無効にすることができます。",
        "3Dモードでは、<a href=\"#/p5/noSmooth\">noSmooth()</a>がデフォルトで有効になっているため、ジオメトリにスムーズ（アンチエイリアス）エッジを使用するには<a href=\"#/p5/smooth\">smooth()</a>を呼び出す必要があります。"
      ]
    },
    "strokeCap": {
      "description": [
        "線の終端部の描画スタイルを設定します。これらの終端部は、丸められたもの、角ばったもの、または延長されたもののいずれかで、それぞれのパラメータで指定されます:<code>ROUND</code>、<code>SQUARE</code>、または<code>PROJECT</code>。デフォルトのスタイルは<code>ROUND</code>です。",
        "このメソッドのパラメータはすべて大文字で書かれている必要があります。これは、定数がすべて大文字で定義されているためであり、JavaScriptは大文字と小文字を区別する言語であるためです。"
      ],
      "params": {
        "cap": "Constant: ROUND、SQUARE、またはPROJECTのいずれか"
      }
    },
    "strokeJoin": {
      "description": [
        "線分を接続するジョイントのスタイルを設定します。これらのジョイントは、それぞれのパラメータで指定される、マイター、ベベル、またはラウンドになっています:<code>MITER</code>、<code>BEVEL</code>、または<code>ROUND</code>。2Dモードではデフォルトのジョイントは<code>MITER</code>で、WebGLモードでは<code>ROUND</code>です。",
        "このメソッドのパラメータはすべて大文字で書かれている必要があります。これは、定数がすべて大文字で定義されているためであり、JavaScriptは大文字と小文字を区別する言語であるためです。"
      ],
      "params": {
        "join": "Constant: MITER、BEVEL、またはROUNDのいずれか"
      }
    },
    "strokeWeight": {
      "description": [
        "線、点、および形状の周囲の境界に使用されるストロークの幅を設定します。すべての幅はピクセル単位で設定されます。",
        "以前に適用された変換やスケーリングに影響を受けることに注意してください。"
      ],
      "params": {
        "weight": "Number: ストロークの幅（ピクセル単位）"
      }
    },
    "bezier": {
      "description": [
        "画面上にキュビックベジェ曲線を描画します。これらの曲線は、アンカーポイントとコントロールポイントの系列で定義されます。最初の2つのパラメータは最初のアンカーポイントを指定し、最後の2つのパラメータは他のアンカーポイントを指定します。これらのアンカーポイントは曲線の最初と最後のポイントになります。中間のパラメータは曲線の形状を定義する2つのコントロールポイントを指定します。大まかに言うと、コントロールポイントは曲線を自分の方向に「引っ張ります」。",
        "ベジェ曲線は、フランスの自動車技師ピエール・ベジエによって開発され、ゆるやかに傾斜した曲線を定義するためにコンピュータグラフィックスで一般的に使用されます。 <a href=\"#/p5/curve\">curve()</a>も参照してください。"
      ],
      "params": {
        "x1": "Number: 最初のアンカーポイントのx座標",
        "y1": "Number: 最初のアンカーポイントのy座標",
        "x2": "Number: 最初のコントロールポイントのx座標",
        "y2": "Number: 最初のコントロールポイントのy座標",
        "x3": "Number: 2番目のコントロールポイントのx座標",
        "y3": "Number: 2番目のコントロールポイントのy座標",
        "x4": "Number: 2番目のアンカーポイントのx座標",
        "y4": "Number: 2番目のアンカーポイントのy座標",
        "z1": "Number: 最初のアンカーポイントのz座標",
        "z2": "Number: 最初のコントロールポイントのz座標",
        "z3": "Number: 2番目のコントロールポイントのz座標",
        "z4": "Number: 2番目のアンカーポイントのz座標"
      }
    },
    "bezierDetail": {
      "description": [
        "ベジェ曲線の表示に使用される解像度を設定します。デフォルト値は20です。",
        "なお、この関数はWEBGLレンダラーを使用する場合にのみ有用であり、デフォルトのキャンバスレンダラーはこの情報を使用しません。"
      ],
      "params": {
        "detail": "Number: 曲線の解像度"
      }
    },
    "bezierPoint": {
      "description": [
        "ベジェ曲線の制御点とアンカーポイントのx座標またはy座標の値が与えられた場合、この関数はベジェ曲線のt位置でのx座標またはy座標を評価します。パラメータaとdは曲線上の最初と最後の点のxまたはy座標であり、bとcは制御点の座標です。最後のパラメータtは、0から1の値で示される結果の点の位置です。これをx座標で1回、y座標で1回実行することで、ベジェ曲線のt位置での位置を取得できます。"
      ],
      "returns": "Number: t位置でのベジェ曲線の値",
      "params": {
        "a": "Number: 曲線上の最初の点の座標",
        "b": "Number: 最初の制御点の座標",
        "c": "Number: 2番目の制御点の座標",
        "d": "Number: 曲線上の最後の点の座標",
        "t": "Number: 0から1までの値"
      }
    },
    "bezierTangent": {
      "description": [
        "ベジェ曲線のパラメータ a, b, c, d における位置 t における接線を評価します。パラメータ a と d は曲線の最初と最後の点で、b と c は制御点です。t の最終的な値は 0 から 1 まで変化します。"
      ],
      "returns": "Number: 位置 t における接線の値",
      "params": {
        "a": "Number: 曲線の最初の点の座標",
        "b": "Number: 最初の制御点の座標",
        "c": "Number: 2番目の制御点の座標",
        "d": "Number: 曲線の最後の点の座標",
        "t": "Number: 0 から 1 の値"
      }
    },
    "curve": {
      "description": [
        "2点間を曲線で結ぶ。曲線は、中間の4つのパラメーターで指定された2点の間に描画される。最初の2つのパラメーターはコントロールポイントであり、曲線が描かれない場合でも、曲線がこの点から来たように見える。最後の2つのパラメーターも同様に、他のコントロールポイントを指定する。  \n長い曲線は、<a href=\"#/p5/curve\">curve()</a>関数を連結して使用するか、<a href=\"#/p5/curveVertex\">curveVertex()</a>を使用して作成できる。追加の<a href=\"#/p5/curveTightness\">curveTightness()</a>関数を使用すると、曲線のビジュアル品質を制御できる。<a href=\"#/p5/curve\">curve()</a>関数はCatmull-Romスプラインの実装である。"
      ],
      "params": {
        "x1": "Number: 最初のコントロールポイントのx座標",
        "y1": "Number: 最初のコントロールポイントのy座標",
        "x2": "Number: 最初の点のx座標",
        "y2": "Number: 最初の点のy座標",
        "x3": "Number: 2番目の点のx座標",
        "y3": "Number: 2番目の点のy座標",
        "x4": "Number: 最後のコントロールポイントのx座標",
        "y4": "Number: 最後のコントロールポイントのy座標",
        "z1": "Number: 最初のコントロールポイントのz座標",
        "z2": "Number: 最初の点のz座標",
        "z3": "Number: 2番目の点のz座標",
        "z4": "Number: 最後のコントロールポイントのz座標"
      }
    },
    "curveDetail": {
      "description": [
        "曲線の表示解像度を設定します。デフォルト値は20で、最小値は3です。",
        "この関数は、WEBGLレンダラーを使用している場合にのみ有用であり、デフォルトのキャンバスレンダラーはこの情報を使用しません。"
      ],
      "params": {
        "resolution": "Number: 曲線の解像度"
      }
    },
    "curveTightness": {
      "description": [
        "曲線描画に使用される<a href=\"#/p5/curve\">curve()</a>や<a href=\"#/p5/curveVertex\">curveVertex()</a>の形状の品質を変更します。tightnessパラメータは、曲線を頂点ポイントに合わせる方法を決定します。値0.0はtightnessのデフォルト値であり、Catmull-Rom splineで曲線が定義されます。値1.0はすべてのポイントを直線でつなぎます。-5.0から5.0の範囲内の値は曲線を変形させますが、それでも認識可能な形状を保ち、値が増大すると曲線はさらに変形します。"
      ],
      "params": {
        "amount": "Number: 元の頂点からの変形量"
      }
    },
    "curvePoint": {
      "description": [
        "パラメータtが0から1の間で変化し、aとdは曲線のコントロールポイントであり、bとcは曲線の始点と終点です。これはx座標で1回、y座標で2回行われ、tにおける曲線の位置を取得できます。"
      ],
      "returns": "Number: <a href=\"#/p5/curve\">曲線</a>上の位置tの値",
      "params": {
        "a": "Number: 曲線の最初の制御点の座標",
        "b": "Number: 最初の点の座標",
        "c": "Number: 2番目の点の座標",
        "d": "Number: 曲線の2番目の制御点の座標",
        "t": "Number: 0から1の値"
      }
    },
    "curveTangent": {
      "description": [
        "パラメータtが0から1の間で変化し、aとdは曲線上の点であり、bとcはコントロールポイントです。"
      ],
      "returns": "Number: 位置tにおける曲線の接線",
      "params": {
        "a": "Number: 最初のコントロールポイントの座標",
        "b": "Number: 曲線上の最初の点の座標",
        "c": "Number: 曲線上の2番目の点の座標",
        "d": "Number: 2番目のコントロールポイントの座標",
        "t": "Number: 0から1の値"
      }
    },
    "beginContour": {
      "description": [
        "<a href=\"#/p5/beginContour\">beginContour()</a>関数と<a href=\"#/p5/endContour\">endContour()</a>関数を使用して、文字の中心などの形状内の負の形状を作成します。 <a href=\"#/p5/beginContour\">beginContour()</a>関数は、形状の頂点を記録し始め、<a href=\"#/p5/endContour\">endContour()</a>関数は記録を停止します。負の形状を定義する頂点は、外部形状とは逆方向に「巻き」ます。最初に、外部の頂点を時計回りの順序で描き、内部の形状に対しては反時計回りの順序で描きます。",
        "これらの関数は、<a href=\"#/p5/beginShape\">beginShape()</a>/<a href=\"#/p5/endShape\">endShape()</a>のペア内でのみ使用でき、<a href=\"#/p5/translate\">translate()</a>、<a href=\"#/p5/rotate\">rotate()</a>、<a href=\"#/p5/scale\">scale()</a>などの変換は、<a href=\"#/p5/beginContour\">beginContour()</a>/<a href=\"#/p5/endContour\">endContour()</a>のペア内では機能しません。また、<a href=\"#/p5/ellipse\">ellipse()</a>や<a href=\"#/p5/rect\">rect()</a>などの他の形状を使用することもできません。"
      ]
    },
    "beginShape": {
      "description": [
        "<a href=\"#/p5/beginShape\">beginShape()</a>関数と<a href=\"#/p5/endShape\">endShape()</a>関数を使用することで、より複雑な形状を作成できます。<a href=\"#/p5/beginShape\">beginShape()</a>は、形状の頂点を記録するために使用され、<a href=\"#/p5/endShape\">endShape()</a>は記録を停止します。 kindパラメータの値によって、提供された頂点からどのタイプの形状を作成するかを指定できます。 モードが指定されていない場合、形状は任意の不規則なポリゴンである可能性があります。",
        "<a href=\"#/p5/beginShape\">beginShape()</a>関数で利用可能なパラメータは次のとおりです:",
        "POINTS: 点のシリーズを描画します。",
        "LINES: つながっていない線分のシリーズを描画します。",
        "TRIANGLES: 別々の三角形のシリーズを描画します。",
        "TRIANGLE_FAN: ファンのように、最初の頂点を共有する接続された三角形のシリーズを描画します。",
        "TRIANGLE_STRIP: ストリップ状に接続された三角形のシリーズを描画します。",
        "QUADS: 別々の四角形のシリーズを描画します。",
        "QUAD_STRIP: 隣接する辺を使用して次の四角形を形成する四角形ストリップを描画します。",
        "TESS(WEBGLのみ):明示的なテッセレーションによる曲線の塗りつぶしに対応します。",
        "<a href=\"#/p5/beginShape\">beginShape()</a>関数を呼び出した後、一連の<a href=\"#/p5/vertex\">vertex()</a>コマンドが続きます。<a href=\"#/p5/endShape\">endShape()</a>を呼び出して図形の描画を停止します。各図形は現在のストロークカラーで輪郭が描かれ、塗りつぶしカラーで塗りつぶされます。",
        "<a href=\"#/p5/translate\">translate()</a>、<a href=\"#/p5/rotate\">rotate()</a>、<a href=\"#/p5/scale\">scale()</a>などの変換は<a href=\"#/p5/beginShape\">beginShape()</a>内では機能しません。<a href=\"#/p5/ellipse\">ellipse()</a>や<a href=\"#/p5/rect\">rect()</a>などの他の図形も、<a href=\"#/p5/beginShape\">beginShape()</a>内では使用できません。"
      ],
      "params": {
        "kind": "Constant: (オプション) POINTS, LINES, TRIANGLES, TRIANGLE_FAN, TRIANGLE_STRIP, QUADS, QUAD_STRIP, TESS のいずれか"
      }
    },
    "bezierVertex": {
      "description": [
        "Bezier曲線の頂点座標を指定します。bezierVertex()を呼び出すごとに、Bezier曲線の2つの制御点と1つのアンカーポイントの位置が定義され、線または図形に新しいセグメントが追加されます。WebGLモードでは、bezierVertex()は2Dおよび3Dモードで使用できます。2Dモードでは6つのパラメータが期待され、3Dモードでは9つのパラメータ（z座標を含む）が期待されます。",
        "<a href=\"#/p5/beginShape\">beginShape()</a>呼び出しで初めてbezierVertex()が使用される場合、最初のアンカーポイントを設定するために<a href=\"#/p5/vertex\">vertex()</a>の呼び出しで前置する必要があります。この関数は<a href=\"#/p5/beginShape\">beginShape()</a>と<a href=\"#/p5/endShape\">endShape()</a>の間で使用され、<a href=\"#/p5/beginShape\">beginShape()</a>にMODEまたはPOINTSパラメータが指定されていない場合に限ります。"
      ],
      "params": {
        "x2": "Number: 第1制御点のx座標",
        "y2": "Number: 第1制御点のy座標",
        "x3": "Number: 第2制御点のx座標",
        "y3": "Number: 第2制御点のy座標",
        "x4": "Number: アンカーポイントのx座標",
        "y4": "Number: アンカーポイントのy座標",
        "z2": "Number: 第1制御点のz座標 (WebGLモード用)",
        "z3": "Number: 第2制御点のz座標 (WebGLモード用)",
        "z4": "Number: アンカーポイントのz座標 (WebGLモード用)"
      }
    },
    "curveVertex": {
      "description": [
        "曲線の頂点座標を指定します。この関数は、<a href=\"#/p5/beginShape\">beginShape()</a>と<a href=\"#/p5/endShape\">endShape()</a>の間でのみ使用でき、<a href=\"#/p5/beginShape\">beginShape()</a>にMODEパラメータが指定されていない場合に限ります。WebGLモードでは、curveVertex()は2Dおよび3Dモードで使用できます。2Dモードは2つのパラメータを期待し、3Dモードは3つのパラメータを期待します。",
        "curveVertex()ラインの一連の最初と最後の点は、曲線の始点と終点をガイドするために使用されます。2番目と3番目の点の間に小さな曲線を描画するには、最低4つの点が必要です。curveVertex()で5番目の点を追加すると、2番目、3番目、4番目の点の間に曲線が描かれます。curveVertex()関数は、Catmull-Romスプラインの実装です。"
      ],
      "params": {
        "x": "Number: 頂点のx座標",
        "y": "Number: 頂点のy座標",
        "z": "Number: (オプション) 頂点のz座標 (WebGLモード用)"
      }
    },
    "endContour": {
      "description": [
        "<a href=\"#/p5/beginContour\">beginContour()</a>と<a href=\"#/p5/endContour\">endContour()</a>関数を使用して、文字'O'の中心など、図形内に負の図形を作成します。<a href=\"#/p5/beginContour\">beginContour()</a>は図形の頂点の記録を開始し、<a href=\"#/p5/endContour\">endContour()</a>は記録を停止します。負の形状を定義する頂点は、外部形状とは逆方向に\"巻かれる\"必要があります。まず、外部の時計回りの順序で頂点を描画し、内部の形状では、反時計回りに頂点を描画します。",
        "これらの関数は、<a href=\"#/p5/beginShape\">beginShape()</a>/<a href=\"#/p5/endShape\">endShape()</a>のペア内でのみ使用でき、<a href=\"#/p5/translate\">translate()</a>、<a href=\"#/p5/rotate\">rotate()</a>、および<a href=\"#/p5/scale\">scale()</a>などの変換は、<a href=\"#/p5/beginContour\">beginContour()</a>/<a href=\"#/p5/endContour\">endContour()</a>ペア内では動作しません。また、<a href=\"#/p5/ellipse\">ellipse()</a>や<a href=\"#/p5/rect\">rect()</a>などの他の図形を内部で使用することもできません。"
      ]
    },
    "endShape": {
      "description": [
        "<a href=\"#/p5/endShape\">endShape()</a>関数は、<a href=\"#/p5/beginShape\">beginShape()</a>とペアで使用され、<a href=\"#/p5/beginShape\">beginShape()</a>の後でのみ呼び出すことができます。<a href=\"#/p5/endshape\">endShape()</a>が呼び出されると、前回の<a href=\"#/p5/beginShape\">beginShape()</a>の呼び出し以降に定義されたすべての画像データが画像バッファに書き込まれます。定数CLOSEを<code>mode</code>パラメータの値として使用して、図形を閉じる（始点と終点を接続する）ことができます。"
      ],
      "params": {
        "mode": "Constant: (オプション) 図形を閉じるためにCLOSEを使用"
      }
    },
    "quadraticVertex": {
      "description": [
        "quadraticVertex()は、二次ベジェ曲線の頂点座標を指定します。quadraticVertex()の各呼び出しで、ベジェ曲線の1つの制御点と1つのアンカーポイントの位置が定義され、線や図形に新しいセグメントが追加されます。<a href=\"#/p5/beginShape\">beginShape()</a>の呼び出しでquadraticVertex()を初めて使用する場合、最初のアンカーポイントを設定するために<a href=\"#/p5/vertex\">vertex()</a>の呼び出しで前置しなければなりません。WebGLモードでは、quadraticVertex()は2Dモードと3Dモードの両方で使用できます。2Dモードでは4つのパラメータが必要で、3Dモードでは6つのパラメータが必要です（z座標を含む）。",
        "この関数は、<a href=\"#/p5/beginShape\">beginShape()</a>と<a href=\"#/p5/endShape\">endShape()</a>の間でのみ使用し、<a href=\"#/p5/beginShape\">beginShape()</a>にMODEやPOINTSパラメータが指定されていない場合にのみ使用できます。"
      ],
      "params": {
        "cx": "Number: 制御点のx座標",
        "cy": "Number: 制御点のy座標",
        "x3": "Number: アンカーポイントのx座標",
        "y3": "Number: アンカーポイントのy座標",
        "cz": "Number: 制御点のz座標（WebGLモード用）",
        "z3": "Number: アンカーポイントのz座標（WebGLモード用）"
      }
    },
    "vertex": {
      "description": [
        "すべての図形は、一連の頂点を接続することで構築されます。<a href=\"#/p5/vertex\">vertex()</a>は、点、線、三角形、四角形、多角形の頂点座標を指定するために使用されます。これは、<a href=\"#/p5/beginShape\">beginShape()</a>および<a href=\"#/p5/endShape\">endShape()</a>関数内でのみ使用されます。"
      ],
      "params": {
        "x": "Number: 頂点のx座標",
        "y": "Number: 頂点のy座標",
        "z": "Number: (オプション)頂点のz座標。指定されていない場合はデフォルトで0になります。",
        "u": "Number: (オプション)頂点のテクスチャu座標",
        "v": "Number: (オプション)頂点のテクスチャv座標"
      }
    },
    "normal": {
      "description": [
        "以降で<a href=\"#/p5/vertex\">vertex()</a>で描画される頂点に使用する3D頂点法線を設定します。法線は、一般的に形状の表面にほぼ垂直なベクトルであり、その表面の部分からどれだけの光が反射されるかを制御します。"
      ],
      "params": {
        "vector": "Vector: 頂点法線を表すp5.Vector。",
        "x": "Number: 頂点法線のx成分。",
        "y": "Number: 頂点法線のy成分。",
        "z": "Number: 頂点法線のz成分。"
      }
    },
    "VERSION": {
      "description": [
        "このp5.jsのバージョン。"
      ]
    },
    "P2D": {
      "description": [
        "デフォルトの二次元レンダラー。"
      ]
    },
    "WEBGL": {
      "description": [
        "p5.jsの2つのレンダリングモードのうちの1つ:P2D（デフォルトのレンダラー）とWEBGL。3次元:Zを導入して3Dレンダリングを可能にします。"
      ]
    },
    "ARROW": {},
    "CROSS": {},
    "HAND": {},
    "MOVE": {},
    "TEXT": {},
    "WAIT": {},
    "HALF_PI": {
      "description": [
        "HALF_PIは、値が1.57079632679489661923の数学定数です。これは、円の円周と直径の比率の半分です。三角関数<a href=\"#/p5/sin\">sin()</a>および<a href=\"#/p5/cos\">cos()</a>と組み合わせて便利です。"
      ]
    },
    "PI": {
      "description": [
        "PIは、値が3.14159265358979323846の数学定数です。これは、円の円周と直径の比率です。三角関数<a href=\"#/p5/sin\">sin()</a>および<a href=\"#/p5/cos\">cos()</a>と組み合わせて便利です。"
      ]
    },
    "QUARTER_PI": {
      "description": [
        "QUARTER_PIは、値が0.7853982の数学定数です。これは、円の円周と直径の比率の4分の1です。三角関数<a href=\"#/p5/sin\">sin()</a>および<a href=\"#/p5/cos\">cos()</a>と組み合わせて便利です。"
      ]
    },
    "TAU": {
      "description": [
        "TAUは、TWO_PIの別名であり、値が6.28318530717958647693の数学定数です。これは、円の円周と直径の比率の2倍です。三角関数<a href=\"#/p5/sin\">sin()</a>および<a href=\"#/p5/cos\">cos()</a>と組み合わせて便利です。"
      ]
    },
    "TWO_PI": {
      "description": [
        "TWO_PIは、値が6.28318530717958647693の数学定数です。これは、円の円周と直径の比率の2倍です。三角関数<a href=\"#/p5/sin\">sin()</a>および<a href=\"#/p5/cos\">cos()</a>と組み合わせて便利です。"
      ]
    },
    "DEGREES": {
      "description": [
        "<a href=\"#/p5/angleMode\">angleMode()</a>関数で使用する定数で、p5.jsが角度を解釈および計算するモード（DEGREESまたはRADIANS）を設定します。"
      ]
    },
    "RADIANS": {
      "description": [
        "<a href=\"#/p5/angleMode\">angleMode()</a>関数で使用する定数で、p5.jsが角度を解釈および計算するモード（RADIANSまたはDEGREES）を設定します。"
      ]
    },
    "CORNER": {},
    "CORNERS": {},
    "RADIUS": {},
    "RIGHT": {},
    "LEFT": {},
    "CENTER": {},
    "TOP": {},
    "BOTTOM": {},
    "BASELINE": {},
    "POINTS": {},
    "LINES": {},
    "LINE_STRIP": {},
    "LINE_LOOP": {},
    "TRIANGLES": {},
    "TRIANGLE_FAN": {},
    "TRIANGLE_STRIP": {},
    "QUADS": {},
    "QUAD_STRIP": {},
    "TESS": {},
    "CLOSE": {},
    "OPEN": {},
    "CHORD": {},
    "PIE": {},
    "PROJECT": {},
    "SQUARE": {},
    "ROUND": {},
    "BEVEL": {},
    "MITER": {},
    "RGB": {},
    "HSB": {
      "description": [
        "HSB（hue、saturation、brightness）は、カラーモデルの一種です。詳細については、<a href=\"https://learnui.design/blog/the-hsb-color-system-practicioners-primer.html\">HSB</a>で学ぶことができます。"
      ]
    },
    "HSL": {},
    "AUTO": {
      "description": [
        "AUTOを使用すると、要素の現在の高さと幅に基づいて、要素の幅または高さ（両方ではない）を自動的に設定できます。<a href=\"/#/p5.Element/size\">size</a>関数には、一度にAUTOとして渡すことができるパラメータが1つだけです。"
      ]
    },
    "ALT": {},
    "BACKSPACE": {},
    "CONTROL": {},
    "DELETE": {},
    "DOWN_ARROW": {},
    "ENTER": {},
    "ESCAPE": {},
    "LEFT_ARROW": {},
    "OPTION": {},
    "RETURN": {},
    "RIGHT_ARROW": {},
    "SHIFT": {},
    "TAB": {},
    "UP_ARROW": {},
    "BLEND": {},
    "REMOVE": {},
    "ADD": {},
    "DARKEST": {},
    "LIGHTEST": {},
    "DIFFERENCE": {},
    "SUBTRACT": {},
    "EXCLUSION": {},
    "MULTIPLY": {},
    "SCREEN": {},
    "REPLACE": {},
    "OVERLAY": {},
    "HARD_LIGHT": {},
    "SOFT_LIGHT": {},
    "DODGE": {},
    "BURN": {},
    "THRESHOLD": {},
    "GRAY": {},
    "OPAQUE": {},
    "INVERT": {},
    "POSTERIZE": {},
    "DILATE": {},
    "ERODE": {},
    "BLUR": {},
    "NORMAL": {},
    "ITALIC": {},
    "BOLD": {},
    "BOLDITALIC": {},
    "CHAR": {},
    "WORD": {},
    "LINEAR": {},
    "QUADRATIC": {},
    "BEZIER": {},
    "CURVE": {},
    "STROKE": {},
    "FILL": {},
    "TEXTURE": {},
    "IMMEDIATE": {},
    "IMAGE": {},
    "NEAREST": {},
    "REPEAT": {},
    "CLAMP": {},
    "MIRROR": {},
    "LANDSCAPE": {},
    "PORTRAIT": {},
    "GRID": {},
    "AXES": {},
    "LABEL": {},
    "FALLBACK": {},
    "CONTAIN": {},
    "COVER": {},
    "print": {
      "description": [
        "<a href=\"#/p5/print\">print()</a>関数は、ブラウザのコンソールエリアに書き込みます。この関数は、プログラムが生成しているデータを確認するのに役立ちます。この関数は、関数が呼び出されるたびに新しい行のテキストが作成されます。個々の要素は、クォート（\"\"）で区切られ、加算演算子（+）で結合できます。",
        "引数なしでprint()を呼び出すと、window.print()関数が呼び出され、ブラウザの印刷ダイアログが開きます。コンソールに空行を印刷するには、print('\\n')と記述します。"
      ],
      "params": {
        "contents": "Any: 印刷するNumber、String、Object、Boolean、Arrayの任意の組み合わせ"
      }
    },
    "frameCount": {
      "description": [
        "システム変数<a href=\"#/p5/frameCount\">frameCount</a>は、プログラムが開始されてから表示されたフレームの数を格納します。<a href=\"#/p5/setup\">setup()</a>内では値は0で、<a href=\"#/p5/draw\">draw()</a>の最初の反復後に1になります。"
      ]
    },
    "deltaTime": {
      "description": [
        "システム変数<a href=\"#/p5/deltaTime\">deltaTime</a>には、前のフレームの開始と現在のフレームの開始の間の時間差がミリ秒単位で格納されます。",
        "この変数は、フレームレートに関係なく一定のままであるべき時間に敏感なアニメーションや物理計算を作成するのに便利です。"
      ]
    },
    "focused": {
      "description": [
        "ウィンドウがp5.jsプログラムで「フォーカス」されているかどうかを確認します。これは、スケッチがマウスやキーボードの入力を受け付けることを意味します。ウィンドウがフォーカスされている場合、この変数は「true」で、フォーカスされていない場合は「false」です。"
      ]
    },
    "cursor": {
      "description": [
        "カーソルを事前定義された記号や画像に設定するか、既に非表示の場合は表示するようにします。カーソルとして画像を設定しようとしている場合、推奨されるサイズは16×16または32×32ピクセルです。パラメータxとyの値は、画像の寸法よりも小さい必要があります。"
      ],
      "params": {
        "type": "String|Constant: 組み込み: ARROW, CROSS, HAND, MOVE, TEXT, WAIT  ネイティブCSSプロパティ: 'grab', 'progress', 'cell'など  外部: カーソル画像のパス（許可されるファイル拡張子: .cur, .gif, .jpg, .jpeg, .png）  ネイティブCSSカーソルとurlの詳細については、次のリンクを参照してください: <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/cursor\">https://developer.mozilla.org/en-US/docs/Web/CSS/cursor</a>",
        "x": "Number: (オプション) カーソルの水平方向のアクティブスポット（32未満である必要があります）",
        "y": "Number: (オプション) カーソルの垂直方向のアクティブスポット（32未満である必要があります）"
      }
    },
    "frameRate": {
      "description": [
        "1秒あたりに表示されるフレーム数を指定します。たとえば、関数コールframeRate(30)は、毎秒30回リフレッシュしようとします。プロセッサが指定されたレートを維持できない場合、フレームレートは達成されません。<a href=\"#/p5/setup\">setup()</a>内でフレームレートを設定することが推奨されます。デフォルトのフレームレートは、ディスプレイのフレームレート（ここでは「リフレッシュレート」とも呼ばれます）に基づいており、ほとんどのコンピュータでは1秒あたり60フレームに設定されています。映画で一般的な24フレーム/秒以上のフレームレートで、アニメーションがスムーズになります。これは、setFrameRate(val)と同じです。",
        "<a href=\"#/p5/frameRate\">frameRate()</a>を引数なしで呼び出すと、現在のフレームレートが返されます。draw関数は、値を返す前に少なくとも1回実行する必要があります。これは、<a href=\"#/p5/getFrameRate\">getFrameRate()</a>と同じです。",
        "型がNumberでない、または非正の引数で<a href=\"#/p5/frameRate\">frameRate()</a>を呼び出すと、現在のフレームレートも返されます。"
      ],
      "params": {
        "fps": "Number: 1秒あたりに表示されるフレーム数"
      }
    },
    "getTargetFrameRate": {
      "description": [
        "_targetFrameRate変数を返します。デフォルトの_targetFrameRateは60に設定されています。これは、frameRate()を呼び出して所望の値に設定することで変更できます。getTargetFrameRate()が呼び出されると、設定された値が返されるべきです。"
      ],
      "returns": "Number: _targetFrameRate"
    },
    "noCursor": {
      "description": [
        "ビューからカーソルを非表示にします。"
      ]
    },
    "displayWidth": {
      "description": [
        "デフォルトの<a href=\"#/p5/pixelDensity\">pixelDensity</a>に従って画面表示の幅を保存するシステム変数です。これは、任意の表示サイズでフルスクリーンプログラムを実行するために使用されます。実際の画面サイズを返すには、これにpixelDensityを掛けます。"
      ]
    },
    "displayHeight": {
      "description": [
        "デフォルトの<a href=\"#/p5/pixelDensity\">pixelDensity</a>に従って画面表示の高さを保存するシステム変数です。これは、任意の表示サイズでフルスクリーンプログラムを実行するために使用されます。実際の画面サイズを返すには、これにpixelDensityを掛けます。"
      ]
    },
    "windowWidth": {
      "description": [
        "内部ウィンドウの幅を保存するシステム変数で、window.innerWidthにマップされます。"
      ]
    },
    "windowHeight": {
      "description": [
        "内部ウィンドウの高さを保存するシステム変数で、window.innerHeightにマップされます。"
      ]
    },
    "windowResized": {
      "description": [
        "<a href=\"#/p5/windowResized\">windowResized()</a>関数は、ブラウザウィンドウがリサイズされるたびに一度呼び出されます。これは、キャンバスのサイズを変更したり、新しいウィンドウサイズに合わせて他の調整を行うのに適した場所です。"
      ],
      "params": {
        "event": "Object: (オプション) オプションのイベントコールバック引数。"
      }
    },
    "width": {
      "description": [
        "描画キャンバスの幅を保存するシステム変数です。<a href=\"#/p5/createCanvas\">createCanvas()</a>関数の最初のパラメータによってこの値が設定されます。例えば、関数呼び出しcreateCanvas(320, 240)は、width変数の値を320に設定します。<a href=\"#/p5/createCanvas\">createCanvas()</a>がプログラムで使用されていない場合、widthの値はデフォルトで100になります。"
      ]
    },
    "height": {
      "description": [
        "描画キャンバスの高さを保存するシステム変数です。<a href=\"#/p5/createCanvas\">createCanvas()</a>関数の2番目のパラメータによってこの値が設定されます。例えば、関数呼び出しcreateCanvas(320, 240)は、height変数の値を240に設定します。<a href=\"#/p5/createCanvas\">createCanvas()</a>がプログラムで使用されていない場合、heightの値はデフォルトで100になります。"
      ]
    },
    "fullscreen": {
      "description": [
        "引数が与えられた場合、引数の値に基づいてスケッチをフルスクリーンにするかどうかを設定します。引数が与えられなかった場合、現在のフルスクリーン状態を返します。ただし、ブラウザの制限により、これはユーザー入力時にのみ呼び出すことができます。例えば、下記の例のようにマウスプレス時です。"
      ],
      "returns": "Boolean: 現在のフルスクリーン状態",
      "params": {
        "val": "Boolean: (オプション) スケッチがフルスクリーンモードであるべきかどうか"
      }
    },
    "pixelDensity": {
      "description": [
        "高ピクセル密度ディスプレイのピクセルスケーリングを設定します。デフォルトでは、ピクセル密度は表示密度に合わせて設定されています。これをオフにするには、pixelDensity(1)を呼び出します。<a href=\"#/p5/pixelDensity\">pixelDensity()</a>を引数なしで呼び出すと、スケッチの現在のピクセル密度が返されます。"
      ],
      "params": {
        "val": "Number: スケッチがスケーリングするかどうか、またはどの程度スケーリングするか"
      }
    },
    "displayDensity": {
      "description": [
        "スケッチが実行されている現在のディスプレイのピクセル密度を返します。"
      ],
      "returns": "Number: ディスプレイの現在のピクセル密度"
    },
    "getURL": {
      "description": [
        "現在のURLを取得します。注意:p5エディターを使用している場合、スケッチがiframeに埋め込まれているため、これは空のオブジェクトを返します。エディターのプレゼントURLやシェアURLでスケッチを表示すると、正しく機能します。"
      ],
      "returns": "String: url"
    },
    "getURLPath": {
      "description": [
        "現在のURLパスを配列として取得します。注意:p5エディターを使用している場合、スケッチがiframeに埋め込まれているため、これは空のオブジェクトを返します。エディターのプレゼントURLやシェアURLでスケッチを表示すると、正しく機能します。"
      ],
      "returns": "String[]: パスコンポーネント"
    },
    "getURLParams": {
      "description": [
        "現在のURLパラメータをオブジェクトとして取得します。注意:p5エディターを使用している場合、スケッチがiframeに埋め込まれているため、これは空のオブジェクトを返します。エディターのプレゼントURLやシェアURLでスケッチを表示すると、正しく機能します。"
      ],
      "returns": "Object: URLパラメータ"
    },
    "preload": {
      "description": [
        "<a href=\"#/p5/setup\">setup()</a>の直前に呼び出される<a href=\"#/p5/preload\">preload()</a>関数は、外部ファイルの非同期ロードをブロッキング方式で処理するために使用されます。preload関数が定義されている場合、<a href=\"#/p5/setup\">setup()</a>はその中のloadコールがすべて終了するまで待機します。preload関数の中には、loadコール（<a href=\"#/p5/loadImage\">loadImage</a>、<a href=\"#/p5/loadJSON\">loadJSON</a>、<a href=\"#/p5/loadFont\">loadFont</a>、<a href=\"#/p5/loadStrings\">loadStrings</a>など）以外のものは入れないでください。非同期ロードが望ましい場合は、代わりにコールバックパラメータを使用して<a href=\"#/p5/setup\">setup()</a>や他の場所でloadメソッドを呼び出すことができます。",
        "デフォルトでは、「loading...」というテキストが表示されます。独自のローディングページを作成するには、ページにID「p5_loading」のHTML要素を含めてください。詳細は<a href=\"http://bit.ly/2kQ6Nio\">こちら</a>。"
      ]
    },
    "setup": {
      "description": [
        "プログラムが開始されるときに一度だけ呼び出される<a href=\"#/p5/setup\">setup()</a>関数は、スクリーンサイズや背景色などの初期環境プロパティを定義し、プログラムの開始時に画像やフォントなどのメディアをロードするために使用されます。各プログラムには1つの<a href=\"#/p5/setup\">setup()</a>関数があり、初回実行後に再度呼び出すことはできません。",
        "注意:<a href=\"#/p5/setup\">setup()</a>内で宣言された変数は、<a href=\"#/p5/draw\">draw()</a>を含む他の関数内ではアクセスできません。"
      ]
    },
    "draw": {
      "description": [
        "<a href=\"#/p5/setup\">setup()</a>の直後に呼び出される<a href=\"#/p5/draw\">draw()</a>関数は、プログラムが停止するか<a href=\"#/p5/noLoop\">noLoop()</a>が呼び出されるまで、そのブロック内に含まれるコードを連続して実行します。ただし、<a href=\"#/p5/setup\">setup()</a>で<a href=\"#/p5/noLoop\">noLoop()</a>が呼び出された場合でも、<a href=\"#/p5/draw\">draw()</a>は停止する前に一度だけ実行されます。<a href=\"#/p5/draw\">draw()</a>は自動的に呼び出されるため、明示的に呼び出すことはありません。",
        "<a href=\"#/p5/noLoop\">noLoop()</a>、<a href=\"#/p5/redraw\">redraw()</a>、<a href=\"#/p5/loop\">loop()</a>を使って制御する必要があります。<a href=\"#/p5/noLoop\">noLoop()</a>が<a href=\"#/p5/draw\">draw()</a>内のコードの実行を停止した後、<a href=\"#/p5/redraw\">redraw()</a>は<a href=\"#/p5/draw\">draw()</a>内のコードを1回だけ実行し、<a href=\"#/p5/loop\">loop()</a>は<a href=\"#/p5/draw\">draw()</a>内のコードを連続して実行し続けるようになります。",
        "<a href=\"#/p5/draw\">draw()</a>が1秒間に何回実行されるかは、<a href=\"#/p5/frameRate\">frameRate()</a>関数で制御できます。",
        "各スケッチには1つの<a href=\"#/p5/draw\">draw()</a>関数があり、コードを連続して実行する場合や、<a href=\"#/p5/mousePressed\">mousePressed()</a>などのイベントを処理する場合には、<a href=\"#/p5/draw\">draw()</a>が必要です。場合によっては、上記の例のようにプログラム内で<a href=\"#/p5/draw\">draw()</a>を空呼び出しすることがあります。",
        "描画座標系は、各<a href=\"#/p5/draw\">draw()</a>呼び出しの最初にリセットされることに注意が必要です。<a href=\"#/p5/draw\">draw()</a>内で変換が実行された場合（例:スケール、回転、移動）、その効果は<a href=\"#/p5/draw\">draw()</a>の最初に元に戻されるため、変換は時間とともに蓄積されません。一方で、適用されたスタイリング（例:塗りつぶし、ストロークなど）は継続して効果があります。"
      ]
    },
    "remove": {
      "description": [
        "p5スケッチ全体を削除します。これにより、キャンバスとp5.jsによって作成された要素が削除されます。また、描画ループを停止し、ウィンドウのグローバルスコープからプロパティやメソッドのバインドを解除します。新しいp5スケッチを作成したい場合のために、変数p5を残します。必要に応じて、p5 = nullを設定して消去することができます。p5ライブラリによって作成されたすべての関数や変数やオブジェクトが削除されますが、コードによって作成された他のグローバル変数は残ります。"
      ]
    },
    "disableFriendlyErrors": {
      "description": [
        "フレンドリーエラーシステム（FES）の一部の機能をオフにし、必要に応じてパフォーマンスを大幅に向上させます。",
        "これにより、パフォーマンス低下を引き起こすFESの部分（引数チェックなど）が無効になります。パフォーマンスコストがないフレンドリーエラー（ファイルの読み込みに失敗した場合に説明的なエラーを表示する、グローバル空間でp5.js関数をオーバーライドしようとした場合に警告を表示するなど）はそのまま残ります。",
        "<a href='https://github.com/processing/p5.js/wiki/Optimizing-p5.js-Code-for-Performance#disable-the-friendly-error-system-fes'>フレンドリーエラーシステムの無効化</a>を参照してください。"
      ]
    },
    "let": {
      "description": [
        "新しい変数を作成し、名前を付けます。変数は値のコンテナです。",
        "letで宣言された変数はブロックスコープを持ちます。これは、変数は<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/block\">ブロック</a>内で作成された範囲でのみ存在することを意味します。",
        "<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let\">MDNのエントリ</a>より:ブロックスコープのローカル変数を宣言し、オプションで値を初期化します。"
      ]
    },
    "const": {
      "description": [
        "新しい定数を作成し、名前を付けます。letで作成された変数のように、constで作成された定数も値のコンテナですが、宣言された後は再代入できません。ただし、オブジェクトや配列などの非プリミティブデータ型の要素は変更可能です。したがって、変数に配列が割り当てられている場合でも、配列から要素を追加したり削除したりできますが、別の配列を再割り当てすることはできません。また、constを使って値なしで変数を宣言することはできません。",
        "定数はブロックスコープを持ちます。これは、定数は<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/block\">ブロック</a>内で作成された範囲でのみ存在することを意味します。定数は、すでに存在するスコープ内で再宣言することはできません。",
        "<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/const\">MDNのエントリ</a>より:読み取り専用の名前付き定数を宣言します。定数はブロックスコープであり、'let'文で定義された変数と同様です。定数の値は再代入で変更できず、再宣言もできません。"
      ]
    },
    "===": {
      "description": [
        "厳密な等価演算子 <a href=\"#/p5/===\">===</a> は、2つの値が等しく、同じ型であるかどうかをチェックします。",
        "比較式は常に <a href=\"#/p5/boolean\">ブール値</a> に評価されます。",
        "<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators\">MDNエントリ</a>より: 非同一性演算子は、オペランドが等しくないおよび/または同じ型でない場合にtrueを返します。",
        "注: ウェブ上の一部の例では、比較に代わりに使われる <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators#Equality\">==</a> のような二重等号を見ることがあります。これはJavascriptの非厳密な等価演算子です。これは、比較する前に比較される2つの値を同じ型に変換します。"
      ]
    },
    ">": {
      "description": [
        "より大きい演算子 <a href=\"#/p5/>\">></a> は、左の値が右の値より大きい場合にtrueに評価されます。 <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators\">MDNで比較演算子に関する詳細情報があります。</a>"
      ]
    },
    ">=": {
      "description": [
        "大きいか等しい演算子 <a href=\"#/p5/>=\">>=</a> は、左の値が右の値より大きいか等しい場合にtrueに評価されます。",
        "<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators\">MDNで比較演算子に関する詳細情報があります。</a>"
      ]
    },
    "<": {
      "description": [
        "より小さい演算子 <a href=\"#/p5/<\"><</a> は、左の値が右の値より小さい場合にtrueに評価されます。",
        "<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators\">MDNで比較演算子に関する詳細情報があります。</a>"
      ]
    },
    "<=": {
      "description": [
        "小さいか等しい演算子 <a href=\"#/p5/<=\"><=</a> は、左の値が右の値より小さいか等しい場合にtrueに評価されます。",
        "<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators\">MDNで比較演算子に関する詳細情報があります。</a>"
      ]
    },
    "if-else": {
      "description": [
        "<a href=\"#/p5/if-else\">if-else</a> 文は、コードのフローを制御するのに役立ちます。",
        "'if'に続く括弧の間に条件が置かれ、その条件が<a href=\"https://developer.mozilla.org/en-US/docs/Glossary/truthy\">truthy</a>に評価されると、次の中括弧の間のコードが実行されます。逆に、条件が<a href=\"https://developer.mozilla.org/en-US/docs/Glossary/Falsy\">falsy</a>に評価されると、'else'ブロックの中括弧の間のコードが代わりに実行されます。elseブロックの記述はオプションです。",
        "<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/if...else\">MDNエントリ</a>より: 'if'文は、指定された条件がtruthyである場合に文を実行します。条件がfalsyである場合、別の文を実行することができます。"
      ]
    },
    "function": {
      "description": [
        "<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Functions\">関数</a>を作成し、名前を付けます。 <a href=\"#/p5/function\">関数</a>は、タスクを実行する一連の文です。",
        "オプションで、関数はパラメータを持つことができます。<a href=\"https://developer.mozilla.org/en-US/docs/Glossary/Parameter\">パラメータ</a>は、関数にスコープされた変数で、関数を呼び出す際に値を割り当てることができます。複数のパラメータは、カンマで区切って与えることができます。",
        "<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function\">MDNエントリ</a>より: 指定されたパラメータで関数を宣言します。"
      ]
    },
    "return": {
      "description": [
        "関数から返される値を指定します。詳細は、<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/return\">MDNのreturnエントリ</a>をご覧ください。"
      ]
    },
    "boolean": {
      "description": [
        "数値または文字列をそのブール表現に変換します。数値の場合、ゼロ以外の値（正または負）はtrueと評価され、ゼロはfalseと評価されます。文字列の場合、値「true」はtrueと評価され、それ以外の値はfalseと評価されます。数値または文字列の配列が渡されると、同じ長さのブール配列が返されます。"
      ],
      "returns": "Boolean: 値のブール表現",
      "params": {
        "n": "String|Boolean|Number|Array: 解析する値"
      }
    },
    "string": {
      "description": [
        "<a href=\"#/p5/string\">文字列</a>は、JavaScriptの7つの<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Primitive_values\">プリミティブデータ型</a>の1つです。文字列は一連のテキスト文字です。JavaScriptでは、文字列値はシングルクォーテーション（'）またはダブルクォーテーション（\"）で囲む必要があります。",
        "<a href=\"https://developer.mozilla.org/en-US/docs/Glossary/string\">MDNエントリ</a>から:文字列とは、テキストを表す一連の文字です。"
      ]
    },
    "number": {
      "description": [
        "<a href=\"#/p5/number\">数値</a>は、JavaScriptの7つの<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Primitive_values\">プリミティブデータ型</a>の1つです。数値は整数または小数です。",
        "<a href=\"https://developer.mozilla.org/en-US/docs/Glossary/number\">数値のMDNエントリ</a>"
      ]
    },
    "object": {
      "description": [
        "<a href=\"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Basics\">MDNのオブジェクトの基本</a>から:<a href=\"#/p5/object\">オブジェクト</a>は、関連するデータおよび/または機能（通常、いくつかの変数と関数で構成されます。これらは、オブジェクト内にあるときにプロパティとメソッドと呼ばれます。）のコレクションです。"
      ]
    },
    "class": {
      "description": [
        "<a href=\"#/p5/class\">クラス</a>は、<a href=\"#/p5/object\">オブジェクト</a>の作成に使用されるテンプレートを作成および命名するためのものです。",
        "<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/class\">MDNエントリ</a>から:クラス宣言は、プロトタイプベースの継承を使用して、指定された名前を持つ新しいクラスを作成します。"
      ]
    },
    "for": {
      "description": [
        "<a href=\"#/p5/for\">for</a>は、コードの1つのセクションを複数回実行するために便利なループを作成します。",
        "'forループ'は、括弧内に3つの異なる式が含まれ、すべてがオプションです。これらの式は、ループが実行される回数を制御するために使用されます。最初の式は、ループの初期状態を設定するために使用される文です。2番目の式は、各ループの前にチェックする条件です。この式がfalseを返すと、ループは終了します。3番目の式は、各ループの終わりに実行されます。これらの式は、セミコロン（;）で区切られます。空の式の場合、セミコロンだけが書かれます。",
        "ループ本体の（波括弧内の）コードは、2番目の式と3番目の式の評価の間に実行されます。",
        "どのループにおいても、ループを '終了' するか、テスト条件がfalseに評価されることを確認することが重要です。forループにおけるテスト条件は、上記で詳述された2番目の式です。この式が最終的にfalseになるように確保することで、ループが無限に実行されることがなく、ブラウザがクラッシュすることを防ぎます。",
        "<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for\">MDNエントリ</a>から:指定された文がfalseに評価されるまで、文を繰り返し実行するループを作成します。条件は文を実行した後に評価され、指定された文が少なくとも1回実行されます。"
      ]
    },
    "while": {
      "description": [
        "<a href=\"#/p5/while\">while</a>は、コードの1つのセクションを複数回実行するために便利なループを作成します。",
        "'whileループ'では、ループ本体のコード（波括弧内）は、テスト条件（括弧内）がfalseになるまで繰り返し実行されます。<a href=\"#/p5/while\">while</a>では、コード本体を実行する前に条件をテストするため、条件が最初からfalseの場合、ループ本体または文は実行されません。",
        "どのループにおいても、ループを '終了' するか、テスト条件がfalseに評価されることを確認することが重要です。これにより、ループが無限に実行されることがなく、ブラウザがクラッシュすることを防ぎます。",
        "<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/while\">MDNエントリ</a>から:指定された条件がtrueに評価される限り、指定された文を繰り返し実行するループを作成します。条件は文を実行する前に評価されます。"
      ]
    },
    "createCanvas": {
      "description": [
        "ドキュメント内にキャンバス要素を作成し、ピクセル単位でその寸法を設定します。<a href=\"#/p5/setup\">setup()</a> の開始時にのみ、このメソッドを呼び出す必要があります。 <a href=\"#/p5/createCanvas\">createCanvas</a> をスケッチ内で複数回呼び出すと、非常に予測不可能な動作が発生します。複数の描画キャンバスを使用する場合は、<a href=\"#/p5/createGraphics\">createGraphics()</a>（デフォルトでは非表示ですが表示できます）を使用できます。",
        "重要な注意:2Dモード（つまり、<code>p5.Renderer</code>が設定されていない場合）では、原点（0,0）は画面の左上に位置します。3Dモード（つまり、<code>p5.Renderer</code>が<code>WEBGL</code>に設定されている場合）では、原点はキャンバスの中心に位置します。詳細については、<a href=\"https://github.com/processing/p5.js/issues/1545\">この問題</a>を参照してください。",
        "システム変数の幅と高さは、この関数に渡されたパラメータによって設定されます。 <a href=\"#/p5/createCanvas\">createCanvas()</a> を使用しない場合、ウィンドウにはデフォルトサイズの100×100ピクセルが与えられます。",
        "キャンバスを配置する別の方法については、<a href='https://github.com/processing/p5.js/wiki/Positioning-your-canvas'>キャンバスの位置づけ</a> Wikiページを参照してください。"
      ],
      "returns": "p5.Renderer: キャンバスを保持するp5.Rendererへのポインタ",
      "params": {
        "w": "Number: キャンバスの幅",
        "h": "Number: キャンバスの高さ",
        "renderer": "Constant: (Optional) P2DまたはWEBGL"
      }
    },
    "resizeCanvas": {
      "description": [
        "キャンバスを指定された幅と高さにリサイズします。キャンバスはクリアされ、直ちに描画が呼び出され、スケッチがリサイズされたキャンバスで再レンダリングされます。"
      ],
      "params": {
        "w": "Number: キャンバスの幅",
        "h": "Number: キャンバスの高さ",
        "noRedraw": "Boolean: (オプション) キャンバスを直ちに再描画しない"
      }
    },
    "noCanvas": {
      "description": [
        "canvasが必要ないp5スケッチのデフォルトのcanvasを削除します。"
      ]
    },
    "createGraphics": {
      "description": [
        "新しいp5.Rendererオブジェクトを作成して返します。オフスクリーングラフィックバッファに描画する必要がある場合に、このクラスを使用します。2つのパラメータはピクセル単位の幅と高さを定義します。"
      ],
      "returns": "p5.Graphics: オフスクリーングラフィックバッファ",
      "params": {
        "w": "Number: オフスクリーングラフィックバッファの幅",
        "h": "Number: オフスクリーングラフィックバッファの高さ",
        "renderer": "Constant: (オプション) P2D または WEBGL。未定義の場合はp2dがデフォルトです。"
      }
    },
    "blendMode": {
      "description": [
        "定義されたモードに従って、ディスプレイウィンドウ内のピクセルをブレンドします。ソースピクセル（A）をディスプレイウィンドウ内の既存のピクセル（B）とブレンドするために、次のモードを選択できます。: <ul> <li><code>BLEND</code> - 色の線形補間:C = A*factor + B。 <b>これがデフォルトのブレンドモードです。</b></li> <li><code>ADD</code> - AとBの和</li> <li><code>DARKEST</code> - 最も暗い色だけが成功:C = min(A*factor, B)。</li> <li><code>LIGHTEST</code> - 最も明るい色だけが成功:C = max(A*factor, B)。</li> <li><code>DIFFERENCE</code> - 背景画像から色を減算します。<em>(2D)</em></li> <li><code>EXCLUSION</code> - <code>DIFFERENCE</code>に似ていますが、それほど極端ではありません。</li> <li><code>MULTIPLY</code> - 色を乗算し、結果は常に暗くなります。</li> <li><code>SCREEN</code> - 乗算の反対で、色の逆数を使用します。</li> <li><code>REPLACE</code> - ピクセルは他のピクセルと完全に置き換えられ、アルファ（透明度）値を使用しません。</li> <li><code>REMOVE</code> - Aのアルファ強度でBからピクセルを削除します。</li> <li><code>OVERLAY</code> - <code>MULTIPLY</code>と<code>SCREEN </code>のミックス。暗い値を乗算し、明るい値をスクリーンにします。<em>(2D)</em></li> <li><code>HARD_LIGHT</code> - 50%以上の灰色の場合は<code>SCREEN</code>、それ以下の場合は<code>MULTIPLY</code>。<em>(2D)</em></li> <li><code>SOFT_LIGHT</code> - <code>DARKEST</code>と<code>LIGHTEST</code>のミックス。<code>OVERLAY</code>のように機能しますが、それほど厳しくありません。<em>(2D)</em></li> <li><code>DODGE</code> - 明るいトーンを明るくし、コントラストを高め、暗い部分を無視します。<em>(2D)</em></li> <li><code>BURN</code> - 暗い領域が適用され、コントラストが増加し、ライトを無視します。<em>(2D)</em></li> <li><code>SUBTRACT</code> - AとBの残差 <em>(3D)</em></li> </ul>",
        "<em>(2D)</em>は、このブレンドモードが<b>2Dレンダラーのみ</b>で動作することを示します。<em>(3D)</em>は、このブレンドモードが<b>WEBGLレンダラーのみ</b>で動作することを示します。"
      ],
      "params": {
        "mode": "キャンバスに設定するブレンドモードの定数。BLEND、DARKEST、LIGHTEST、DIFFERENCE、MULTIPLY、EXCLUSION、SCREEN、REPLACE、OVERLAY、HARD_LIGHT、SOFT_LIGHT、DODGE、BURN、ADD、REMOVE、またはSUBTRACTのいずれか。"
      }
    },
    "drawingContext": {
      "description": [
        "p5.js APIにはグラフィックを作成するための多くの機能がありますが、p5では公開されていないネイティブのHTML5 Canvas機能があります。ただし、変数<code>drawingContext</code>を使用して直接呼び出すことができます。これは<code>canvas.getContext('2d');</code>または<code>canvas.getContext('webgl');</code>を呼び出すのと同等です。可能な描画関数については、ネイティブキャンバスAPIの<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D\">リファレンス</a>を参照してください。"
      ]
    },
    "noLoop": {
      "description": [
        "<a href=\"#/p5/draw\">draw()</a>内のコードを継続的に実行することを停止します。 <a href=\"#/p5/loop\">loop()</a>が呼び出された場合、<a href=\"#/p5/draw\">draw()</a>内のコードが再び継続的に実行されます。 <a href=\"#/p5/setup\">setup()</a>内の<a href=\"#/p5/noLoop\">noLoop()</a>を使用する場合は、ブロック内の最後の行にする必要があります。",
        "<a href=\"#/p5/noLoop\">noLoop()</a>を使用すると、<a href=\"#/p5/mousePressed\">mousePressed()</a>や<a href=\"#/p5/keyPressed\">keyPressed()</a>などのイベント処理関数内で画面を操作またはアクセスすることができません。 代わりに、これらの関数を使用して<a href=\"#/p5/redraw\">redraw()</a>または<a href=\"#/p5/loop\">loop()</a>を呼び出し、<a href=\"#/p5/draw\">draw()</a>を実行して、画面を適切に更新します。つまり、<a href=\"#/p5/noLoop\">noLoop()</a>が呼び出された場合、描画は行われず、<a href=\"#/p5/saveFrames\">saveFrames()</a>や<a href=\"#/p5/loadPixels\">loadPixels()</a>などの関数を使用できない可能性があることに注意してください。",
        "スケッチがサイズ変更された場合、<a href=\"#/p5/noLoop\">noLoop()</a>が指定された後でも、<a href=\"#/p5/redraw\">redraw()</a>が呼び出されてスケッチが更新されることに注意してください。そうしないと、スケッチが奇妙な状態になり、<a href=\"#/p5/loop\">loop()</a>が呼び出されるまで戻らなくなります。",
        "<a href=\"#/p5/isLooping\">isLooping()</a>を使用して、<a href=\"#/p5/loop\">loop()</a>の現在の状態を確認してください。"
      ]
    },
    "loop": {
      "description": [
        "デフォルトでは、p5.jsはdraw()を継続的にループし、その中にあるコードを実行します。ただし、<a href=\"#/p5/draw\">draw()</a>ループは<a href=\"#/p5/noLoop\">noLoop()</a>を呼び出すことで停止させることができます。その場合、<a href=\"#/p5/draw\">draw()</a>ループはloop()で再開できます。",
        "setup()内からloop()を呼び出さないでください。",
        "<a href=\"#/p5/isLooping\">isLooping()</a>を使用して、<a href=\"#/p5/loop\">loop()</a>の現在の状態を確認してください。"
      ]
    },
    "isLooping": {
      "description": [
        "デフォルトでは、p5.jsはdraw()を継続的にループし、その中にあるコードを実行します。スケッチが<a href=\"#/p5/noLoop\">noLoop()</a>で停止された場合、または<a href=\"#/p5/loop\">loop()</a>で再開された場合、isLooping()はカスタムイベントハンドラ内で使用するために現在の状態を返します。"
      ],
      "returns": "Boolean:"
    },
    "push": {
      "description": [
        "<a href=\"#/p5/push\">push()</a>関数は、現在の描画スタイルの設定と変換を保存し、<a href=\"#/p5/pop\">pop()</a>関数はこれらの設定を復元します。これらの関数は常に一緒に使用されることに注意してください。これにより、スタイルと変換の設定を変更し、後で元に戻すことができます。<a href=\"#/p5/push\">push()</a>で新しい状態が開始されると、現在のスタイルと変換情報が利用されます。<a href=\"#/p5/push\">push()</a>と<a href=\"#/p5/pop\">pop()</a>関数は、より多くの制御を提供するために組み込むことができます（2つ目の例を参照してください）。",
        "<a href=\"#/p5/push\">push()</a>は、次の関数によって制御される現在の変換状態とスタイル設定に関連する情報を保存します:<a href=\"#/p5/fill\">fill()</a>、<a href=\"#/p5/noFill\">noFill()</a>、<a href=\"#/p5/noStroke\">noStroke()</a>、<a href=\"#/p5/stroke\">stroke()</a>、<a href=\"#/p5/tint\">tint()</a>、<a href=\"#/p5/noTint\">noTint()</a>、<a href=\"#/p5/strokeWeight\">strokeWeight()</a>、<a href=\"#/p5/strokeCap\">strokeCap()</a>、<a href=\"#/p5/strokeJoin\">strokeJoin()</a>、<a href=\"#/p5/imageMode\">imageMode()</a>、<a href=\"#/p5/rectMode\">rectMode()</a>、<a href=\"#/p5/ellipseMode\">ellipseMode()</a>、<a href=\"#/p5/colorMode\">colorMode()</a>、<a href=\"#/p5/textAlign\">textAlign()</a>、<a href=\"#/p5/textFont\">textFont()</a>、<a href=\"#/p5/textSize\">textSize()</a>、<a href=\"#/p5/textLeading\">textLeading()</a>、<a href=\"#/p5/applyMatrix\">applyMatrix()</a>、<a href=\"#/p5/resetMatrix\">resetMatrix()</a>、<a href=\"#/p5/rotate\">rotate()</a>、<a href=\"#/p5/scale\">scale()</a>、<a href=\"#/p5/shearX\">shearX()</a>、<a href=\"#/p5/shearY\">shearY()</a>、<a href=\"#/p5/translate\">translate()</a>、<a href=\"#/p5/noiseSeed\">noiseSeed()</a>。",
        "WEBGLモードでは、追加のスタイル設定が保存されます。これらは、次の関数によって制御されます:<a href=\"#/p5/setCamera\">setCamera()</a>、<a href=\"#/p5/ambientLight\">ambientLight()</a>、<a href=\"#/p5/directionalLight\">directionalLight()</a>、<a href=\"#/p5/pointLight\">pointLight()</a>、<a href=\"#/p5/texture\">texture()</a>、<a href=\"#/p5/specularMaterial\">specularMaterial()</a>、<a href=\"#/p5/shininess\">shininess()</a>、<a href=\"#/p5/normalMaterial\">normalMaterial()</a>、および<a href=\"#/p5/shader\">shader()</a>。"
      ]
    },
    "pop": {
      "description": [
        "<a href=\"#/p5/push\">push()</a>関数は現在の描画スタイル設定と変換を保存し、<a href=\"#/p5/pop\">pop()</a>関数でこれらの設定を復元します。これらの関数は常に一緒に使用されることに注意してください。これにより、スタイルと変換の設定を変更し、後で元の設定に戻ることができます。<a href=\"#/p5/push\">push()</a>で新しい状態が開始されると、現在のスタイルと変換情報に基づいて構築されます。<a href=\"#/p5/push\">push()</a>と<a href=\"#/p5/pop\">pop()</a>関数は、より多くの制御を提供するために埋め込むことができます（デモンストレーションには第2の例を参照してください）。",
        "<a href=\"#/p5/push\">push()</a>は、次の関数によって制御される現在の変換状態とスタイル設定に関連する情報を保存します:<a href=\"#/p5/fill\">fill()</a>、<a href=\"#/p5/noFill\">noFill()</a>、<a href=\"#/p5/noStroke\">noStroke()</a>、<a href=\"#/p5/stroke\">stroke()</a>、<a href=\"#/p5/tint\">tint()</a>、<a href=\"#/p5/noTint\">noTint()</a>、<a href=\"#/p5/strokeWeight\">strokeWeight()</a>、<a href=\"#/p5/strokeCap\">strokeCap()</a>、<a href=\"#/p5/strokeJoin\">strokeJoin()</a>、<a href=\"#/p5/imageMode\">imageMode()</a>、<a href=\"#/p5/rectMode\">rectMode()</a>、<a href=\"#/p5/ellipseMode\">ellipseMode()</a>、<a href=\"#/p5/colorMode\">colorMode()</a>、<a href=\"#/p5/textAlign\">textAlign()</a>、<a href=\"#/p5/textFont\">textFont()</a>、<a href=\"#/p5/textSize\">textSize()</a>、<a href=\"#/p5/textLeading\">textLeading()</a>、<a href=\"#/p5/applyMatrix\">applyMatrix()</a>、<a href=\"#/p5/resetMatrix\">resetMatrix()</a>、<a href=\"#/p5/rotate\">rotate()</a>、<a href=\"#/p5/scale\">scale()</a>、<a href=\"#/p5/shearX\">shearX()</a>、<a href=\"#/p5/shearY\">shearY()</a>、<a href=\"#/p5/translate\">translate()</a>、<a href=\"#/p5/noiseSeed\">noiseSeed()</a>。",
        "WEBGLモードでは、追加のスタイル設定が保存されます。これらは、次の関数によって制御されます:<a href=\"#/p5/setCamera\">setCamera()</a>、<a href=\"#/p5/ambientLight\">ambientLight()</a>、<a href=\"#/p5/directionalLight\">directionalLight()</a>、<a href=\"#/p5/pointLight\">pointLight()</a>、<a href=\"#/p5/texture\">texture()</a>、<a href=\"#/p5/specularMaterial\">specularMaterial()</a>、<a href=\"#/p5/shininess\">shininess()</a>、<a href=\"#/p5/normalMaterial\">normalMaterial()</a>、および<a href=\"#/p5/shader\">shader()</a>。"
      ]
    },
    "redraw": {
      "description": [
        "<a href=\"#/p5/draw\">draw()</a>内のコードを1回実行します。この関数は、<a href=\"#/p5/mousePressed\">mousePressed()</a>や<a href=\"#/p5/keyPressed\">keyPressed()</a>で登録されたイベントが発生した場合など、必要に応じて表示ウィンドウを更新するプログラムに使用します。",
        "プログラムの構造では、<a href=\"#/p5/redraw\">redraw()</a>は、<a href=\"#/p5/mousePressed\">mousePressed()</a>などのイベント内で呼び出すのが理にかなっています。これは、<a href=\"#/p5/redraw\">redraw()</a>が<a href=\"#/p5/draw\">draw()</a>を即座に実行しないからです（更新が必要であることを示すフラグのみが設定されます）。",
        "<a href=\"#/p5/redraw\">redraw()</a>関数は、<a href=\"#/p5/draw\">draw()</a>内で呼び出されると正常に動作しません。アニメーションの有効/無効を切り替えるには、<a href=\"#/p5/loop\">loop()</a>と<a href=\"#/p5/noLoop\">noLoop()</a>を使用してください。",
        "さらに、メソッド呼び出しごとの再描画回数を設定できます。再描画の回数として整数を1つだけパラメータに追加してください。"
      ],
      "params": {
        "n": "Integer:(オプション)n回再描画します。デフォルト値は1です。"
      }
    },
    "p5": {
      "description": [
        "<code>p5()</code>コンストラクタを使用すると、「グローバルモード」の代わりに「インスタンスモード」を有効にすることができます。これは高度な話題です。以下に簡単な説明と例を示します。詳細については、<a target=\"blank\" href=\"https://www.youtube.com/watch?v=Su792jEauZg&feature=youtu.be\">Dan Shiffman's Coding Trainビデオチュートリアル</a>または<a target=\"blank\" href=\"https://github.com/processing/p5.js/wiki/p5.js-overview#instantiation--namespace\">チュートリアルページ</a>を参照してください。",
        "デフォルトでは、すべてのp5.js関数はグローバル名前空間（つまり、windowオブジェクトにバインド）にあります。これは、<code>ellipse()</code>、<code>fill()</code>などの関数を単純に呼び出すことができます。ただし、他のJSライブラリと混ぜて使っている場合（同期的または非同期的に）、または独自の長いプログラムを書いている場合、これは不便になるかもしれません。現在、p5.jsでは、この問題を回避するための「インスタンスモード」という方法をサポートしています。インスタンスモードでは、すべてのp5関数が単一の変数にバインドされ、グローバル名前空間を汚染しません。",
        "オプションで、キャンバスやその他の要素に追加するデフォルトのコンテナを、2番目の引数で指定できます。html内の要素のID、またはhtmlノード自体を指定できます。",
        "このようにインスタンスを作成することで、各々が独自のセットアップ変数でラップされるため、1つのWebページに複数のp5スケッチを持つことができることに注意してください。もちろん、グローバルモードで複数のスケッチを持つために、iframesを使うこともできます。"
      ],
      "params": {
        "sketch": "Object: p5.jsスケッチを含む関数",
        "node": "String|Object: スケッチを含むHTML DOMノードのIDまたはポインタ"
      }
    },
    "applyMatrix": {
      "description": [
        "現在の行列に、パラメータで指定された行列を乗算します。これは、translate, scale, shear, rotateを一度に実行できる強力な操作です。変換行列については、<a href=\"https://en.wikipedia.org/wiki/Transformation_matrix\">Wikipedia</a>で詳しく学ぶことができます。",
        "ここでの引数の命名は、<a href= \"https://html.spec.whatwg.org/multipage/canvas.html#dom-context-2d-transform\"> WHATWG仕様</a>の命名に従っており、以下の形式の変換行列に対応しています:<blockquote>",
        "<img style=\"max-width: 150px\" src=\"assets/transformation-matrix.png\" alt=\"applyMatrixが呼び出されたときに使用される変換行列\"/> </blockquote>",
        "<img style=\"max-width: 300px\" src=\"assets/transformation-matrix-4-4.png\" alt=\"applyMatrixが4x4行列で呼び出されたときに使用される変換行列\"/>"
      ],
      "params": {
        "arr": "Array: 数値の配列 - 6または16の長さである必要があります（2<em>3または4</em>4行列値）",
        "a": "Number: 乗算される2x3または4x4行列を定義する数値",
        "b": "Number: 乗算される2x3または4x4行列を定義する数値",
        "c": "Number: 乗算される2x3または4x4行列を定義する数値",
        "d": "Number: 乗算される2x3または4x4行列を定義する数値",
        "e": "Number: 乗算される2x3または4x4行列を定義する数値",
        "f": "Number: 乗算される2x3または4x4行列を定義する数値",
        "g": "Number: 乗算される4x4行列を定義する数値",
        "h": "Number: 乗算される4x4行列を定義する数値",
        "i": "Number: 乗算される4x4行列を定義する数値",
        "j": "Number: 乗算される4x4行列を定義する数値",
        "k": "Number: 乗算される4x4行列を定義する数値",
        "l": "Number: 乗算される4x4行列を定義する数値",
        "m": "Number: 乗算される4x4行列を定義する数値",
        "n": "Number: 乗算される4x4行列を定義する数値",
        "o": "Number: 乗算される4x4行列を定義する数値",
        "p": "Number: 乗算される4x4行列を定義する数値"
      }
    },
    "resetMatrix": {
      "description": [
        "現在の行列を単位行列に置き換えます。"
      ]
    },
    "rotate": {
      "description": [
        "指定された角度パラメータで図形を回転させます。この関数は<a href=\"#/p5/angleMode\">angleMode</a>を考慮しているため、角度はRADIANSまたはDEGREESで入力できます。",
        "オブジェクトは常に原点に対する相対位置を中心に回転し、正の数値はオブジェクトを時計回りに回転させます。変換はその後のすべての操作に適用され、関数への後続の呼び出しは効果を累積します。例えば、rotate(HALF_PI)を呼び出した後にrotate(HALF_PI)を呼び出すことは、rotate(PI)と同じです。すべての変換は、<a href=\"#/p5/draw\">draw()</a>が再度始まるとリセットされます。",
        "技術的には、<a href=\"#/p5/rotate\">rotate()</a>は現在の変換行列に回転行列を乗算します。この関数は、<a href=\"#/p5/push\">push()</a>および<a href=\"#/p5/pop\">pop()</a>でさらに制御できます。"
      ],
      "params": {
        "angle": "Number: 現在のangleModeに応じて、ラジアンまたは度で指定された回転角",
        "axis": "p5.Vector|Number[]: (オプション) (3Dの場合) 回転する軸"
      }
    },
    "rotateX": {
      "description": [
        "指定された角度パラメータでX軸を中心に図形を回転させます。角度はRADIANSまたはDEGREESで入力できます。",
        "オブジェクトは常に原点に対する相対位置を中心に回転し、正の数値はオブジェクトを時計回りに回転させます。すべての変換は、<a href=\"#/p5/draw\">draw()</a>が再度始まるとリセットされます。"
      ],
      "params": {
        "angle": "Number: 現在のangleModeに応じて、ラジアンまたは度で指定された回転角"
      }
    },
    "rotateY": {
      "description": [
        "指定された角度パラメータでY軸を中心に図形を回転させます。角度はRADIANSまたはDEGREESで入力できます。",
        "オブジェクトは常に原点に対する相対位置を中心に回転し、正の数値はオブジェクトを時計回りに回転させます。すべての変換は、<a href=\"#/p5/draw\">draw()</a>が再度始まるとリセットされます。"
      ],
      "params": {
        "angle": "Number: 現在のangleModeに応じて、ラジアンまたは度で指定された回転角"
      }
    },
    "rotateZ": {
      "description": [
        "指定された角度パラメータでZ軸を中心に図形を回転させます。角度はRADIANSまたはDEGREESで入力できます。",
        "このメソッドは、WEBGLモードでのみ動作します。",
        "オブジェクトは常に原点に対する相対位置を中心に回転し、正の数値はオブジェクトを時計回りに回転させます。すべての変換は、<a href=\"#/p5/draw\">draw()</a>が再度始まるとリセットされます。"
      ],
      "params": {
        "angle": "Number: 現在のangleModeに応じて、ラジアンまたは度で指定された回転角"
      }
    },
    "scale": {
      "description": [
        "図形のサイズを拡大または縮小して、頂点を拡大または縮小します。オブジェクトは常に座標系に対する相対原点からスケーリングします。スケール値は10進数のパーセンテージで指定されます。たとえば、関数呼び出しscale(2.0)は、図形の寸法を200%増加させます。",
        "変換は、それ以降に発生するすべてのことに適用され、関数への後続の呼び出しは効果を乗算します。たとえば、scale(2.0)を呼び出してからscale(1.5)を呼び出すことは、scale(3.0)と同じです。 <a href=\"#/p5/scale\">scale()</a>が<a href=\"#/p5/draw\">draw()</a>内で呼び出される場合、ループが再開すると変換がリセットされます。",
        "この関数は、zパラメータを使用してWEBGLモードでのみ利用できます。この関数は、<a href=\"#/p5/push\">push()</a>および<a href=\"#/p5/pop\">pop()</a>でさらに制御できます。"
      ],
      "params": {
        "s": "Number|p5.Vector|Number[]: オブジェクトのスケール率、または複数の引数が与えられた場合はx軸でのオブジェクトのスケール率",
        "y": "Number: (オプション) y軸でのオブジェクトのスケール率",
        "z": "Number: (オプション) z軸でのオブジェクトのスケール率（webglのみ）",
        "scales": "p5.Vector|Number[]: オブジェクトをスケーリングするための各軸のパーセント"
      }
    },
    "shearX": {
      "description": [
        "angleパラメータで指定された量に応じて、図形をx軸周りにシアします。角度は現在のangleModeで指定する必要があります。オブジェクトは常に原点に対する相対位置を中心にシアされ、正の数値はオブジェクトを時計回りにシアします。",
        "変換は、それ以降に発生するすべてのことに適用され、関数への後続の呼び出しは効果を蓄積します。例えば、shearX(PI/2)を呼び出した後にshearX(PI/2)を呼び出すと、shearX(PI)と同じになります。<a href=\"#/p5/shearX\">shearX()</a>が<a href=\"#/p5/draw\">draw()</a>内で呼び出された場合、ループが再度始まるときに変換がリセットされます。",
        "技術的には、<a href=\"#/p5/shearX\">shearX()</a>は現在の変換行列に回転行列を乗算します。この関数は、<a href=\"#/p5/push\">push()</a>および<a href=\"#/p5/pop\">pop()</a>関数でさらに制御できます。"
      ],
      "params": {
        "angle": "Number: 角度は、現在のangleModeに応じて、ラジアンまたは度で指定します"
      }
    },
    "shearY": {
      "description": [
        "angleパラメータで指定された量に応じて、図形をy軸周りにシアします。角度は現在のangleModeで指定する必要があります。オブジェクトは常に原点に対する相対位置を中心にシアされ、正の数値はオブジェクトを時計回りにシアします。",
        "変換は、それ以降に発生するすべてのことに適用され、関数への後続の呼び出しは効果を蓄積します。例えば、shearY(PI/2)を呼び出した後にshearY(PI/2)を呼び出すと、shearY(PI)と同じになります。<a href=\"#/p5/shearY\">shearY()</a>が<a href=\"#/p5/draw\">draw()</a>内で呼び出された場合、ループが再度始まるときに変換がリセットされます。",
        "技術的には、<a href=\"#/p5/shearY\">shearY()</a>は現在の変換行列に回転行列を乗算します。この関数は、<a href=\"#/p5/push\">push()</a>および<a href=\"#/p5/pop\">pop()</a>関数でさらに制御できます。"
      ],
      "params": {
        "angle": "Number: 角度は、現在のangleModeに応じて、ラジアンまたは度で指定します"
      }
    },
    "translate": {
      "description": [
        "表示ウィンドウ内のオブジェクトを移動する量を指定します。xパラメータは左/右の移動を指定し、yパラメータは上/下の移動を指定します。",
        "変換は累積的であり、それ以降に発生するすべてのことに適用され、関数への後続の呼び出しは効果を蓄積します。例えば、translate(50, 0)を呼び出した後にtranslate(20, 0)を呼び出すと、translate(70, 0)と同じになります。 <a href=\"#/p5/translate\">translate()</a>が<a href=\"#/p5/draw\">draw()</a>内で呼び出された場合、ループが再度始まるときに変換がリセットされます。この関数は、<a href=\"#/p5/push\">push()</a>および<a href=\"#/p5/pop\">pop()</a>を使用してさらに制御できます。"
      ],
      "params": {
        "x": "Number: 左/右の移動",
        "y": "Number: 上/下の移動",
        "z": "Number: (オプション) 前/後ろの移動 (WEBGLのみ)",
        "vector": "p5.Vector: 移動するベクトル"
      }
    },
    "storeItem": {
      "description": [
        "キー名の下にローカルストレージに値を保存します。ローカルストレージはブラウザに保存され、閲覧セッションやページのリロード間で持続します。キーは変数名であることができますが、必ずしもそうである必要はありません。<a href=\"#/p5/getItem\">getItem</a>を参照して保存されたアイテムを取得してください。パスワードや個人情報などの機密データは、ローカルストレージに保存しないでください。"
      ],
      "params": {
        "key": "String",
        "value": "String|Number|Object|Boolean|p5.Color|p5.Vector"
      }
    },
    "getItem": {
      "description": [
        "storeItem()を使用してローカルストレージに保存されたアイテムの値を返します。"
      ],
      "returns": "Number|Object|String|Boolean|p5.Color|p5.Vector: 保存されたアイテムの値",
      "params": {
        "key": "String: ローカルストレージに保存するために使用した名前"
      }
    },
    "clearStorage": {
      "description": [
        "現在のドメインに対してstoreItem()で設定されたすべてのローカルストレージアイテムをクリアします。"
      ]
    },
    "removeItem": {
      "description": [
        "storeItem()で保存されたアイテムを削除します。"
      ],
      "params": {
        "key": "String"
      }
    },
    "createStringDict": {
      "description": [
        "キー・バリューペアや提供されたオブジェクトを使用して、p5.StringDictの新しいインスタンスを作成します。"
      ],
      "returns": "p5.StringDict:",
      "params": {
        "key": "String",
        "value": "String",
        "object": "Object: オブジェクト"
      }
    },
    "createNumberDict": {
      "description": [
        "提供されたキー・バリューペアやオブジェクトを使用して、<a href=\"#/p5.NumberDict\">p5.NumberDict</a>の新しいインスタンスを作成します。"
      ],
      "returns": "p5.NumberDict:",
      "params": {
        "key": "Number",
        "value": "Number",
        "object": "Object: オブジェクト"
      }
    },
    "select": {
      "description": [
        "与えられたCSSセレクタ文字列（ID、クラス、タグ名、またはそれらの組み合わせ）と一致するページ上の最初の要素を検索し、<a href=\"#/p5.Element\">p5.Element</a>として返します。DOMノード自体は.eltでアクセスできます。見つからない場合はnullを返します。検索範囲としてコンテナを指定することもできます。"
      ],
      "returns": "p5.Element|null: 見つかったノードを含む<a href=\"#/p5.Element\">p5.Element</a>",
      "params": {
        "selectors": "String: 検索対象の要素のCSSセレクタ文字列",
        "container": "String|p5.Element|HTMLElement: (オプション) CSSセレクタ文字列、<a href=\"#/p5.Element\">p5.Element</a>、または検索対象のHTML要素"
      }
    },
    "selectAll": {
      "description": [
        "与えられたCSSセレクタ文字列（ID、クラス、タグ名、またはそれらの組み合わせ）と一致するページ上の要素を検索し、それらを配列内の<a href=\"#/p5.Element\">p5.Element</a>として返します。DOMノード自体は.eltでアクセスできます。見つからない場合は空の配列を返します。検索範囲としてコンテナを指定することもできます。"
      ],
      "returns": "p5.Element[]: 見つかったノードを含む<a href=\"#/p5.Element\">p5.Element</a>の配列",
      "params": {
        "selectors": "String: 検索対象の要素のCSSセレクタ文字列",
        "container": "String|p5.Element|HTMLElement: (オプション) CSSセレクタ文字列、<a href=\"#/p5.Element\">p5.Element</a> 、または検索対象のHTML要素"
      }
    },
    "removeElements": {
      "description": [
        "p5によって作成されたすべての要素を削除しますが、<a href=\"#/p5/createCanvas\">createCanvas</a>や<a href=\"#/p5/createGraphics\">createGraphics</a>で作成されたキャンバス/グラフィック要素は除外されます。イベントハンドラが削除され、要素がDOMから削除されます。"
      ]
    },
    "changed": {
      "description": [
        ".<a href=\"#/p5.Element/changed\">changed()</a>関数は、要素の値が変更されたときに呼び出されます。これは、要素固有のイベントリスナーをアタッチするために使用できます。"
      ],
      "params": {
        "fxn": "Function|Boolean: 要素の値が変更されたときに発火する関数。代わりに<code>false</code>が渡されると、以前に発火していた関数はもう発火しなくなります。"
      }
    },
    "input": {
      "description": [
        ".<a href=\"#/p5.Element/input\">input()</a>関数は、要素でユーザー入力が検出されると呼び出されます。inputイベントは、入力要素でのキーストロークや、スライダー要素の変更を検出するためによく使われます。これを使って、要素固有のイベントリスナーをアタッチできます。"
      ],
      "params": {
        "fxn": "Function|Boolean: 要素内でユーザー入力が検出されると発火する関数。 <code>false</code>が代わりに渡されると、以前に発火していた関数はもう発火しなくなります。"
      }
    },
    "createDiv": {
      "description": [
        "与えられた内部HTMLを持つDOM内に<code>&lt;div&gt;&lt;/div&gt;</code>要素を作成します。"
      ],
      "returns": "p5.Element: 作成されたノードを保持する<a href=\"#/p5.Element\">p5.Element</a>へのポインタ",
      "params": {
        "html": "String: (オプション) 作成された要素の内部HTML"
      }
    },
    "createP": {
      "description": [
        "与えられた内部HTMLを持つDOM内の<code>&lt;p&gt;&lt;/p&gt;</code>要素を作成します。段落の長さのテキストに使用されます。"
      ],
      "returns": "p5.Element: 作成されたノードを保持する<a href=\"#/p5.Element\">p5.Element</a>へのポインタ",
      "params": {
        "html": "String: (オプション) 作成された要素の内部HTML"
      }
    },
    "createSpan": {
      "description": [
        "与えられた内部HTMLを持つDOM内の<code>&lt;span&gt;&lt;/span&gt;</code>要素を作成します。"
      ],
      "returns": "p5.Element: 作成されたノードを保持する<a href=\"#/p5.Element\">p5.Element</a>へのポインタ",
      "params": {
        "html": "String: (オプション) 作成された要素の内部HTML"
      }
    },
    "createImg": {
      "description": [
        "与えられたsrcおよび代替テキストを使用して、DOM内に<code>&lt;img&gt;</code>要素を作成します。"
      ],
      "returns": "p5.Element: 作成されたノードを保持する<a href=\"#/p5.Element\">p5.Element</a>へのポインタ",
      "params": {
        "src": "String: 画像のsrcパスまたはURL",
        "alt": "String: 画像が読み込まれない場合に使用される<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Img#Attributes\">代替テキスト</a>。画像が意図的に表示されない場合は空の文字列（<code>\"\"</code>）を使用できます。",
        "crossOrigin": "String: <code>img</code>要素の<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_settings_attributes\">crossOriginプロパティ</a>。'anonymous'または'use-credentials'を使用して、クロスオリジンアクセスで画像を取得します（後で<code>canvas</code>として使用するため）。空の文字列（<code>\"\"</code>）が渡された場合、CORSは使用されません",
        "successCallback": "Function: (オプション) 画像データが読み込まれると、引数として<a href=\"#/p5.Element\">p5.Element</a>を使用して呼び出されるコールバック"
      }
    },
    "createA": {
      "description": [
        "DOMに<code>&lt;a&gt;&lt;/a&gt;</code>要素を作成し、ハイパーリンクを含めます。"
      ],
      "returns": "p5.Element: 作成されたノードを保持する<a href=\"#/p5.Element\">p5.Element</a>へのポインタ",
      "params": {
        "href": "String: リンク先のページのURL",
        "html": "String: リンク要素内に表示する内部HTML",
        "target": "String: (オプション) 新しいリンクを開く対象。_blank、_self、_parent、_topのいずれか。"
      }
    },
    "createSlider": {
      "description": [
        "DOMにスライダーの<code>&lt;input&gt;&lt;/input&gt;</code>要素を作成します。.size()を使って、スライダーの表示長さを設定します。"
      ],
      "returns": "p5.Element: 作成されたノードを保持する<a href=\"#/p5.Element\">p5.Element</a>へのポインタ",
      "params": {
        "min": "Number:  スライダーの最小値",
        "max": "Number:  スライダーの最大値",
        "value": "Number:  (オプション) スライダーのデフォルト値",
        "step": "Number:  (オプション) スライダーの各目盛りのステップサイズ (ステップが0に設定されている場合、スライダーは最小値から最大値まで連続して移動します)"
      }
    },
    "createButton": {
      "description": [
        "DOMに<code>&lt;button&gt;&lt;/button&gt;</code>要素を作成します。.size()を使って、ボタンの表示サイズを設定します。.mousePressed()を使って、押下時の動作を指定します。"
      ],
      "returns": "p5.Element: 作成されたノードを保持する<a href=\"#/p5.Element\">p5.Element</a>へのポインタ",
      "params": {
        "label": "String:  ボタンに表示されるラベル",
        "value": "String:  (オプション) ボタンの値"
      }
    },
    "createCheckbox": {
      "description": [
        "DOM にチェックボックスの <code>&lt;input&gt;&lt;/input&gt;</code> 要素を作成します。チェックボックスに対して .checked() を呼び出すと、チェックされているかどうかを示すブール値が返されます。"
      ],
      "returns": "p5.Element: 作成されたノードを保持する <a href=\"#/p5.Element\">p5.Element</a> へのポインタ",
      "params": {
        "label": "String: (オプション) チェックボックスの後に表示されるラベル",
        "value": "Boolean: (オプション) チェックボックスの値; チェックされている場合は true、チェックされていない場合は false"
      }
    },
    "createSelect": {
      "description": [
        "DOMにドロップダウンメニュー<code>&lt;select&gt;&lt;/select&gt;</code>要素を作成します。また、既存のセレクトボックスを選択すると、<a href=\"#/p5.Element\">p5.Element</a>にselect関連のメソッドが割り当てられます。メニューのオプションは、<code>name</code>（表示テキスト）で一意です。<ul> <li><code>.option(name, [value])</code>は、<code>name</code>（表示テキスト）と<code>value</code>を持つオプションをセレクト要素に追加するために使用できます。セレクト要素内に<code>name</code>が既に存在する場合、このメソッドはその値を<code>value</code>に変更します。</li> <li><code>.value()</code>は、現在選択されているオプションを返します。</li> <li><code>.selected()</code>は、<a href=\"#/p5.Element\">p5.Element</a>のインスタンスである現在のドロップダウン要素を返します。</li> <li><code>.selected(value)</code>は、ページが最初に読み込まれたときに指定したオプションがデフォルトで選択されるようにするために使用できます。</li> <li><code>.disable()</code>は、ドロップダウン要素全体を無効にする印をつけます。</li> <li><code>.disable(value)</code>は、指定したオプションを無効にする印をつけます。</li> </ul>"
      ],
      "returns": "p5.Element: 作成されたノードを保持する<a href=\"#/p5.Element\">p5.Element</a>へのポインタ",
      "params": {
        "multiple": "Boolean: (オプション) ドロップダウンが複数の選択肢をサポートする場合はtrue",
        "existing": "Object: DOMのselect要素"
      }
    },
    "createRadio": {
      "description": [
        "DOMにラジオボタン要素を作成します。また、既存のラジオボタンに<a href=\"#/p5.Element/\">p5.Element</a>のメソッドを割り当てるのに役立ちます。 <ul> <li><code>.option(value, [label])</code>は、要素に新しいオプションを作成するために使用できます。すでに値が存在するオプションがある場合は、それが返されます。<code>value</code>の入力として文字列値を使用することが推奨されます。オプションとして、2つ目の引数としてラベルを提供できます。</li> <li><code>.remove(value)</code>は、要素のオプションを削除するために使用できます。<code>value</code>の入力として文字列値が推奨されます。</li> <li><code>.value()</code>メソッドは、現在選択されている値を返します。</li> <li><code>.selected()</code>メソッドは、現在選択されている入力要素を返します。</li> <li><code>.selected(value)</code>メソッドは、オプションを選択して返します。<code>value</code>の入力として文字列値が推奨されます。</li> <li><code>.disable(Boolean)</code>メソッドは、ラジオボタン要素全体を有効/無効にします。</li> </ul>"
      ],
      "returns": "p5.Element: 作成されたノードを保持する<a href=\"#/p5.Element\">p5.Element</a>へのポインタ",
      "params": {
        "containerElement": "Object: すべての既存のラジオ入力がオプションと見なされるdivまたはspanのHTML要素コンテナ。",
        "name": "String: (オプション) 各入力要素の名前パラメータ。"
      }
    },
    "createColorPicker": {
      "description": [
        "DOM上でカラー入力のためのcolorPicker要素を作成します。.value()メソッドはカラーの16進数文字列（#rrggbb）を返します。.color()メソッドは現在選択されているカラーの<a href=\"#/p5.Color\">p5.Color</a>オブジェクトを返します。"
      ],
      "returns": "p5.Element: 作成されたノードを保持する<a href=\"#/p5.Element\">p5.Element</a>へのポインタ",
      "params": {
        "value": "String|p5.Color: 要素のデフォルトカラー(オプション)"
      }
    },
    "createInput": {
      "description": [
        "DOMでテキスト入力用の<code>&lt;input&gt;&lt;/input&gt;</code>要素を作成します。.<a href=\"#/p5.Element/size\">size()</a>を使ってボックスの表示長さを設定します。"
      ],
      "returns": "p5.Element: 作成されたノードを保持する<a href=\"#/p5.Element\">p5.Element</a>へのポインタ",
      "params": {
        "value": "String: 入力ボックスのデフォルト値",
        "type": "String: テキストの種類(オプション)、例:text、password など。デフォルトは text。最初に値を指定する必要があります。"
      }
    },
    "createFileInput": {
      "description": [
        "DOMに 'file' タイプの <code>&lt;input&gt;&lt;/input&gt;</code> 要素を作成します。これにより、ユーザーはローカルファイルをスケッチで使用するために選択できます。"
      ],
      "returns": "p5.Element: 作成されたDOM要素を保持する<a href=\"#/p5.Element\">p5.Element</a>へのポインタ",
      "params": {
        "callback": "Function: ファイルが読み込まれたときのコールバック関数",
        "multiple": "Boolean: (オプション)複数のファイルを選択できるようにするオプション"
      }
    },
    "createVideo": {
      "description": [
        "HTML5の<code>&lt;video&gt;</code>要素をDOMに作成し、オーディオ/ビデオのシンプルな再生ができます。デフォルトで表示され、.<a href=\"#/p5.Element/hide\">hide()</a>で非表示にし、<a href=\"#/p5/image\">image()</a>を使ってキャンバスに描画できます。第1引数は、ビデオファイルへの単一の文字列パス、または同じビデオの異なる形式への文字列パスの配列のいずれかです。これは、異なるブラウザでビデオを再生できるようにするために役立ちます。各ブラウザは異なる形式をサポートしています。サポートされている形式についての詳細は、<a href='https://developer.mozilla.org/en-US/docs/Web/HTML/Supported_media_formats'>このページ</a>を参照してください。"
      ],
      "returns": "p5.MediaElement: ビデオ<a href=\"#/p5.MediaElement\">p5.MediaElement</a>へのポインタ",
      "params": {
        "src": "String|String[]: ビデオファイルへのパス、または異なるブラウザをサポートするためのパスの配列",
        "callback": "Function: (オプション) 'canplaythrough' イベントが発火したときに呼ばれるコールバック関数。つまり、ブラウザがメディアを再生でき、コンテンツのさらなるバッファリングが不要な状態でメディアを最後まで再生できると推定されるデータがロードされたとき"
      }
    },
    "createAudio": {
      "description": [
        "HTML5の<code>&lt;audio&gt;</code>要素をDOM内に隠し、シンプルなオーディオ再生を行います。第1引数は、オーディオファイルへの単一の文字列パス、または同じオーディオの異なる形式への文字列パスの配列のいずれかです。これは、各ブラウザが異なる形式をサポートしているため、オーディオが異なるブラウザ間で再生できることを確認するために役立ちます。<a href='https://developer.mozilla.org/en-US/docs/Web/HTML/Supported_media_formats'>このページでは、サポートされている形式に関する詳細情報が提供されています</a>。"
      ],
      "returns": "p5.MediaElement: オーディオへのポインタ <a href=\"#/p5.MediaElement\">p5.MediaElement</a>",
      "params": {
        "src": "String|String[]: (オプション)オーディオファイルへのパス、または異なるブラウザをサポートするためのパスの配列",
        "callback": "Function: (オプション)'canplaythrough' イベントが発火した際に呼び出されるコールバック関数。つまり、ブラウザがメディアを再生でき、コンテンツのさらなるバッファリングなしにメディアを最後まで再生できると予測される十分なデータがロードされたとき"
      }
    },
    "createCapture": {
      "description": [
        "ウェブカメラの音声/ビデオフィードを含む新しいHTML5の<code>&lt;video&gt;</code>要素を作成します。この要素はキャンバスとは別で、デフォルトで表示されます。要素は、.<a href=\"#/p5.Element/hide\">hide()</a>を使って非表示にすることができます。フィードは<a href=\"#/p5/image\">image()</a>を使ってキャンバスに描画することができます。loadedmetadataプロパティは要素が完全にロードされたことを検出するために使用できます(第二の例を参照)。",
        "フィードのより具体的なプロパティは、Constraintsオブジェクトを渡すことで指定できます。<a href='http://w3c.github.io/mediacapture-main/getusermedia.html#media-track-constraints'>W3Cの仕様</a>に可能なプロパティが記載されています。ただし、すべてのブラウザでこれらがサポートされているわけではありません。",
        "<em>セキュリティに関する注意</em>:新しいブラウザのセキュリティ仕様では、<a href=\"#/p5/createCapture\">createCapture()</a>の背後にあるgetUserMediaは、コードをローカルで実行している場合、またはHTTPSでのみ動作するようになっています。詳細は<a href='http://stackoverflow.com/questions/34197653/getusermedia-in-chrome-47-without-using-https'>こちら</a>と<a href='https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia'>こちら</a>を参照してください。"
      ],
      "returns": "p5.Element: キャプチャビデオ <a href=\"#/p5.Element\">p5.Element</a>",
      "params": {
        "type": "String|Constant|Object: キャプチャのタイプで、VIDEO や AUDIO が指定されていない場合はデフォルトで両方、または Constraints オブジェクト",
        "callback": "Function: (オプション) ストリームがロードされたら呼ばれる関数"
      }
    },
    "createElement": {
      "description": [
        "指定されたタグと内容でDOM内に要素を作成します。"
      ],
      "returns": "p5.Element: 作成されたノードを保持する<a href=\"#/p5.Element\">p5.Element</a>へのポインタ",
      "params": {
        "tag": "String: 新しい要素のタグ",
        "content": "String: (オプション) 要素に挿入されるHTMLコンテンツ"
      }
    },
    "deviceOrientation": {
      "description": [
        "システム変数 deviceOrientation には、常にデバイスの向きが格納されます。この変数の値は 'landscape' または 'portrait' に設定されます。データが利用できない場合、'undefined' に設定されます。LANDSCAPE または PORTRAIT です。"
      ]
    },
    "accelerationX": {
      "description": [
        "システム変数 accelerationX には、常にデバイスの x 軸に沿った加速度が格納されます。値は、メートル毎秒の二乗で表されます。"
      ]
    },
    "accelerationY": {
      "description": [
        "システム変数 accelerationY には、常にデバイスの y 軸に沿った加速度が格納されます。値は、メートル毎秒の二乗で表されます。"
      ]
    },
    "accelerationZ": {
      "description": [
        "システム変数 accelerationZ には、常にデバイスの z 軸に沿った加速度が格納されます。値は、メートル毎秒の二乗で表されます。"
      ]
    },
    "pAccelerationX": {
      "description": [
        "システム変数 pAccelerationX には、常に現在のフレームの前のフレームでのデバイスの x 軸に沿った加速度が格納されます。値は、メートル毎秒の二乗で表されます。"
      ]
    },
    "pAccelerationY": {
      "description": [
        "システム変数 pAccelerationY には、常に現在のフレームの前のフレームでのデバイスの y 軸に沿った加速度が格納されます。値は、メートル毎秒の二乗で表されます。"
      ]
    },
    "pAccelerationZ": {
      "description": [
        "システム変数 pAccelerationZ には、常に現在のフレームの前のフレームでのデバイスの z 軸に沿った加速度が格納されます。値は、メートル毎秒の二乗で表されます。"
      ]
    },
    "rotationX": {
      "description": [
        "システム変数rotationXは常にデバイスのx軸に沿った回転を格納しています。<a href=\"#/p5/angleMode\"> angleMode()</a>がDEGREESに設定されている場合、値は-180から180になります。RADIANSに設定されている場合、値は-PIからPIになります。",
        "注:回転が呼び出される順序は重要であり、つまり、一緒に使用される場合、Z-X-Yの順序で呼び出さなければならず、そうでないと予期しない動作が発生する可能性があります。"
      ]
    },
    "rotationY": {
      "description": [
        "システム変数rotationYは常にデバイスのy軸に沿った回転を格納しています。<a href=\"#/p5/angleMode\"> angleMode()</a>がDEGREESに設定されている場合、値は-90から90になります。RADIANSに設定されている場合、値は-PI/2からPI/2になります。",
        "注:回転が呼び出される順序は重要であり、つまり、一緒に使用される場合、Z-X-Yの順序で呼び出さなければならず、そうでないと予期しない動作が発生する可能性があります。"
      ]
    },
    "rotationZ": {
      "description": [
        "システム変数rotationZは常にデバイスのz軸に沿った回転を格納しています。<a href=\"#/p5/angleMode\"> angleMode()</a>がDEGREESに設定されている場合、値は0から360になります。RADIANSに設定されている場合、値は0から2*PIになります。",
        "rotationXおよびrotationYとは異なり、この変数は内蔵コンパスのあるデバイスでのみ利用可能です。",
        "注:回転が呼び出される順序は重要であり、つまり、一緒に使用される場合、Z-X-Yの順序で呼び出さなければならず、そうでないと予期しない動作が発生する可能性があります。"
      ]
    },
    "pRotationX": {
      "description": [
        "システム変数 pRotationX は、前のフレームから現在のフレームにかけてのデバイスの x 軸に沿った回転を常に格納しています。スケッチの<a href=\"#/p5/angleMode\"> angleMode()</a> が DEGREES に設定されている場合、値は -180 から 180 になります。RADIANS に設定されている場合、値は -PI から PI になります。",
        "pRotationX は、X 軸に沿ったデバイスの回転方向を決定するために、rotationX と一緒に使用することもできます。"
      ]
    },
    "pRotationY": {
      "description": [
        "システム変数 pRotationY は、前のフレームから現在のフレームにかけてのデバイスの y 軸に沿った回転を常に格納しています。スケッチの<a href=\"#/p5/angleMode\"> angleMode()</a> が DEGREES に設定されている場合、値は -90 から 90 になります。RADIANS に設定されている場合、値は -PI/2 から PI/2 になります。",
        "pRotationY は、Y 軸に沿ったデバイスの回転方向を決定するために、rotationY と一緒に使用することもできます。"
      ]
    },
    "pRotationZ": {
      "description": [
        "システム変数 pRotationZ は、前のフレームから現在のフレームにかけてのデバイスの z 軸に沿った回転を常に格納しています。スケッチの<a href=\"#/p5/angleMode\"> angleMode()</a> が DEGREES に設定されている場合、値は 0 から 360 になります。RADIANS に設定されている場合、値は 0 から 2*PI になります。",
        "pRotationZ は、Z 軸に沿ったデバイスの回転方向を決定するために、rotationZ と一緒に使用することもできます。"
      ]
    },
    "turnAxis": {
      "description": [
        "デバイスが回転すると、<a href=\"#/p5/deviceTurned\">deviceTurned()</a>メソッドをトリガーする軸がturnAxis変数に格納されます。turnAxis変数は、deviceTurned()のスコープ内でのみ定義されています。"
      ]
    },
    "setMoveThreshold": {
      "description": [
        "<a href=\"#/p5/setMoveThreshold\">setMoveThreshold()</a>関数は、<a href=\"#/p5/deviceMoved\">deviceMoved()</a>関数の動作閾値を設定するために使用されます。デフォルトの閾値は0.5に設定されています。"
      ],
      "params": {
        "value": "Number: 閾値"
      }
    },
    "setShakeThreshold": {
      "description": [
        "<a href=\"#/p5/setShakeThreshold\">setShakeThreshold()</a>関数は、<a href=\"#/p5/deviceShaken\">deviceShaken()</a>関数の動作閾値を設定するために使用されます。デフォルトの閾値は30に設定されています。"
      ],
      "params": {
        "value": "Number: 閾値"
      }
    },
    "deviceMoved": {
      "description": [
        "<a href=\"#/p5/deviceMoved\">deviceMoved()</a>関数は、X、Y、またはZ軸に沿って閾値を超える量だけデバイスが移動したときに呼び出されます。デフォルトの閾値は0.5に設定されています。閾値は、<a href=\"https://p5js.org/reference/#/p5/setMoveThreshold\">setMoveThreshold()</a>を使用して変更できます。"
      ]
    },
    "deviceTurned": {
      "description": [
        "<a href=\"#/p5/deviceTurned\">deviceTurned()</a>関数は、デバイスが90度以上連続して回転したときに呼び出されます。",
        "turnAxis変数には、<a href=\"#/p5/deviceTurned\">deviceTurned()</a>メソッドをトリガーする軸が格納されます。<a href=\"#/p5/deviceTurned\">deviceTurned()</a>メソッドは、turnAxis変数と 'X'、'Y'、または 'Z'を比較することで、任意の軸（X、Y、またはZ）でトリガーするようにロックできます。"
      ]
    },
    "deviceShaken": {
      "description": [
        "<a href=\"#/p5/deviceShaken\">deviceShaken()</a>関数は、デバイスの合計加速度が、accelerationXおよびaccelerationYの値の変化が閾値を超えたときに呼び出されます。デフォルトの閾値は30に設定されています。閾値は、<a href=\"https://p5js.org/reference/#/p5/setShakeThreshold\">setShakeThreshold()</a>を使用して変更できます。"
      ]
    },
    "keyIsPressed": {
      "description": [
        "ブール型のシステム変数 <a href=\"#/p5/keyIsPressed\">keyIsPressed</a> は、キーが押されている場合は true、キーが押されていない場合は false です。"
      ]
    },
    "key": {
      "description": [
        "システム変数 key には、最後にキーボードで入力されたキーの値が常に格納されます。正しい大文字/小文字を取得するには、<a href=\"#/p5/keyTyped\">keyTyped()</a> の中で使うことが最適です。非 ASCII キーの場合は、<a href=\"#/p5/keyCode\">keyCode</a> 変数を使用してください。"
      ]
    },
    "keyCode": {
      "description": [
        "変数keyCodeは、BACKSPACE、DELETE、ENTER、RETURN、TAB、ESCAPE、SHIFT、CONTROL、OPTION、ALT、UP_ARROW、DOWN_ARROW、LEFT_ARROW、RIGHT_ARROWなどの特殊キーを検出するために使用されます。このようなサイトでキーのkeyCodeを調べることで、カスタムキーのチェックもできます:<a href=\"http://keycode.info/\">keycode.info</a>。"
      ]
    },
    "keyPressed": {
      "description": [
        "<a href=\"#/p5/keyPressed\">keyPressed()</a>関数は、キーが押されるたびに1回呼び出されます。押されたキーのkeyCodeは、<a href=\"#/p5/keyCode\">keyCode</a>変数に格納されます。",
        "非ASCIIキーの場合は、keyCode変数を使用してください。keyCodeがBACKSPACE、DELETE、ENTER、RETURN、TAB、ESCAPE、SHIFT、CONTROL、OPTION、ALT、UP_ARROW、DOWN_ARROW、LEFT_ARROW、RIGHT_ARROWに等しいかどうかを確認できます。",
        "ASCIIキーの場合、押されたキーはkey変数に格納されます。ただし、大文字と小文字は区別されません。このため、変数の大文字と小文字を区別するkeyTyped()を使用してkey変数を読み取ることが推奨されます。<a href=\"#/p5/keyTyped\">keyTyped()</a>を参照してください。",
        "オペレーティングシステムがキーのリピートを処理する方法のため、キーを押し続けると、<a href=\"#/p5/keyTyped\">keyTyped()</a>（および<a href=\"#/p5/keyReleased\">keyReleased()</a>も）が複数回呼び出される場合があります。リピートの速度は、オペレーティングシステムと各コンピュータの設定によって決まります。ブラウザは、さまざまなキーイベントに対してデフォルトの動作を持つ場合があります。このイベントのデフォルト動作を防ぐには、「return false」をメソッドの最後に追加してください。"
      ],
      "params": {
        "event": "Object: (オプション) 任意のKeyboardEventコールバック引数。"
      }
    },
    "keyReleased": {
      "description": [
        "<a href=\"#/p5/keyReleased\">keyReleased()</a> 関数は、キーが離されるたびに1回呼び出されます。<a href=\"#/p5/key\">key</a> および <a href=\"#/p5/keyCode\">keyCode</a> を参照してください。ブラウザには、さまざまなキーイベントに対して異なるデフォルトの動作が関連付けられている場合があります。このイベントのデフォルトの動作を防ぐには、関数の最後に \"return false\" を追加してください。"
      ],
      "params": {
        "event": "Object: (オプション) 任意の KeyboardEvent コールバック引数。"
      }
    },
    "keyTyped": {
      "description": [
        "<a href=\"#/p5/keyTyped\">keyTyped()</a>関数は、キーが押されるたびに1回呼び出されますが、Backspace、Delete、Ctrl、Shift、Altなどのアクションキーは無視されます。これらのキーのkeyCodeを検出しようとしている場合は、代わりに<a href=\"#/p5/keyPressed\">keyPressed()</a>関数を使用してください。最も最近に入力されたキーは、key変数に格納されます。",
        "オペレーティングシステムがキーリピートを処理する方法のため、キーを押し続けると、<a href=\"#/p5/keyTyped\">keyTyped()</a>（および<a href=\"#/p5/keyReleased\">keyReleased()</a>）が複数回呼び出されます。リピートの速度は、オペレーティングシステムと各コンピュータの設定によって決まります。ブラウザには、さまざまなキーイベントに対して異なるデフォルトの動作が付与されている場合があります。このイベントのデフォルトの動作を防ぐには、関数の最後に「return false」を追加してください。"
      ],
      "params": {
        "event": "オブジェクト: (オプション) オプションのKeyboardEventコールバック引数。"
      }
    },
    "keyIsDown": {
      "description": [
        "<a href=\"#/p5/keyIsDown\">keyIsDown()</a> 関数は、キーが現在押されている（ダウン）かどうかをチェックします。これは、オブジェクトが動き、複数のキーが同時にその動作に影響を与えることができる場合に使用できます。例えば、スプライトを斜めに移動させる場合などです。キーの keyCode を表す任意の数値を入力するか、<a href=\"#/p5/keyCode\">keyCode</a> の変数名を <a href=\"http://p5js.org/reference/#p5/keyCode\">こちら</a> にリストされているものから使用することができます。"
      ],
      "returns": "Boolean: キーがダウンかどうか",
      "params": {
        "code": "Number: チェックするキー"
      }
    },
    "movedX": {
      "description": [
        "変数movedXには、最後のフレーム以降のマウスの水平方向の移動が含まれます。"
      ]
    },
    "movedY": {
      "description": [
        "変数movedYには、最後のフレーム以降のマウスの垂直方向の移動が含まれます。"
      ]
    },
    "mouseX": {
      "description": [
        "システム変数mouseXは、常にキャンバスの(0, 0)に対するマウスの現在の水平位置を格納しています。左上隅の値は、2-Dの場合は(0, 0)、WebGLの場合は(-width/2, -height/2)です。タッチ入力がマウス入力の代わりに使用される場合、mouseXは最新のタッチポイントのx値を保持します。"
      ]
    },
    "mouseY": {
      "description": [
        "システム変数mouseYは、常にキャンバスの(0, 0)に対するマウスの現在の垂直位置を格納しています。左上隅の値は、2-Dの場合は(0, 0)、WebGLの場合は(-width/2, -height/2)です。タッチ入力がマウス入力の代わりに使用される場合、mouseYは最新のタッチポイントのy値を保持します。"
      ]
    },
    "pmouseX": {
      "description": [
        "システム変数 pmouseX は、常にマウスまたは指の水平位置を、前のフレームに対してキャンバスの (0, 0) を基準にして格納します。左上隅の値は、2-D の場合は (0, 0) 、WebGL の場合は (-width/2, -height/2) です。注意:各タッチイベントの開始時に、pmouseX は現在の mouseX 値にリセットされます。"
      ]
    },
    "pmouseY": {
      "description": [
        "システム変数 pmouseY は、常にマウスまたは指の垂直位置を、前のフレームに対してキャンバスの (0, 0) を基準にして格納します。左上隅の値は、2-D の場合は (0, 0) 、WebGL の場合は (-width/2, -height/2) です。注意:各タッチイベントの開始時に、pmouseY は現在の mouseY 値にリセットされます。"
      ]
    },
    "winMouseX": {
      "description": [
        "システム変数 winMouseX は、常にマウスの水平位置を、ウィンドウの (0, 0) を基準にして格納します。"
      ]
    },
    "winMouseY": {
      "description": [
        "システム変数 winMouseY は、常にマウスの垂直位置を、ウィンドウの (0, 0) を基準にして格納します。"
      ]
    },
    "pwinMouseX": {
      "description": [
        "システム変数 pwinMouseX は、現在のフレームの前のフレームにおける、ウィンドウの (0, 0) に対するマウスの水平位置を常に含んでいます。注意:pwinMouseX は、各タッチイベントの開始時に現在の winMouseX の値にリセットされます。"
      ]
    },
    "pwinMouseY": {
      "description": [
        "システム変数 pwinMouseY は、現在のフレームの前のフレームにおける、ウィンドウの (0, 0) に対するマウスの垂直位置を常に含んでいます。注意:pwinMouseY は、各タッチイベントの開始時に現在の winMouseY の値にリセットされます。"
      ]
    },
    "mouseButton": {
      "description": [
        "p5 はマウスボタンが押されているかどうかと、どのボタンが押されているかを自動的に追跡します。システム変数 mouseButton の値は、最後に押されたボタンに応じて、LEFT、RIGHT、または CENTER になります。警告:異なるブラウザでは、mouseButton の追跡方法が異なる場合があります。"
      ]
    },
    "mouseIsPressed": {
      "description": [
        "真偽値のシステム変数 mouseIsPressed は、マウスが押されている場合は true、押されていない場合は false です。"
      ]
    },
    "mouseMoved": {
      "description": [
        "<a href=\"#/p5/mouseMoved\">mouseMoved()</a> 関数は、マウスが移動し、マウスボタンが押されていない場合に呼び出されます。ブラウザには、さまざまなマウスイベントに関連付けられたデフォルトの動作が異なる場合があります。このイベントのデフォルトの動作を防ぐには、「return false」をメソッドの最後に追加します。"
      ],
      "params": {
        "event": "Object: (Optional) オプションの MouseEvent コールバック引数。"
      }
    },
    "mouseDragged": {
      "description": [
        "<a href=\"#/p5/mouseDragged\">mouseDragged()</a>関数は、マウスが移動し、マウスボタンが押されるたびに1回呼び出されます。 <a href=\"#/p5/mouseDragged\">mouseDragged()</a>関数が定義されていない場合、代わりに<a href=\"#/p5/touchMoved\">touchMoved()</a>関数が呼び出されます（定義されている場合）。ブラウザには、さまざまなマウスイベントに対して異なるデフォルトの動作が付随している場合があります。このイベントのデフォルトの動作を防ぐには、関数の最後に「return false」を追加してください。"
      ],
      "params": {
        "event": "Object: (オプション) 任意のMouseEventコールバック引数。"
      }
    },
    "mousePressed": {
      "description": [
        "<a href=\"#/p5/mousePressed\">mousePressed()</a>関数は、マウスボタンが押されるたびに1回呼び出されます。mouseButton変数（関連するリファレンスエントリを参照）を使用して、どのボタンが押されたかを判断できます。<a href=\"#/p5/mousePressed\">mousePressed()</a>関数が定義されていない場合、代わりに<a href=\"#/p5/touchStarted\">touchStarted()</a>関数が呼び出されます（定義されている場合）。ブラウザには、さまざまなマウスイベントに対して異なるデフォルトの動作が付随している場合があります。このイベントのデフォルトの動作を防ぐには、関数の最後に「return false」を追加してください。"
      ],
      "params": {
        "event": "Object: (オプション) 任意のMouseEventコールバック引数。"
      }
    },
    "mouseReleased": {
      "description": [
        "<a href=\"#/p5/mouseReleased\">mouseReleased()</a>関数は、マウスボタンが離されるたびに呼び出されます。 <a href=\"#/p5/mouseReleased\">mouseReleased()</a>関数が定義されていない場合、代わりに<a href=\"#/p5/touchEnded\">touchEnded()</a>関数が定義されている場合はそれが呼び出されます。ブラウザには、さまざまなマウスイベントに関連するデフォルトの動作が異なる場合があります。このイベントのデフォルトの動作を防ぐには、関数の最後に「return false」を追加してください。"
      ],
      "params": {
        "event": "Object: (オプション)オプションのMouseEventコールバック引数。"
      }
    },
    "mouseClicked": {
      "description": [
        "<a href=\"#/p5/mouseClicked\">mouseClicked()</a>関数は、マウスボタンが押されてから離された後に1回だけ呼び出されます。ブラウザはクリックを異なる方法で処理するため、この関数は左マウスボタンがクリックされたときに実行されることが保証されています。他のマウスボタンが押されたり離されたりするのを処理するには、<a href=\"#/p5/mousePressed\">mousePressed()</a>または<a href=\"#/p5/mouseReleased\">mouseReleased()</a>を参照してください。ブラウザには、さまざまなマウスイベントに関連するデフォルトの動作が異なる場合があります。このイベントのデフォルトの動作を防ぐには、関数の最後に「return false」を追加してください。"
      ],
      "params": {
        "event": "Object: (オプション)オプションのMouseEventコールバック引数。"
      }
    },
    "doubleClicked": {
      "description": [
        "<a href=\"#/p5/doubleClicked\">doubleClicked()</a> 関数は、DOM L3仕様の一部であるdblclickイベントを検出したイベントリスナーがあるたびに実行されます。doubleClickedイベントは、ポインティングデバイスのボタン（通常はマウスのプライマリボタン）が1つの要素上で2回クリックされると発火します。dblclickイベントの詳細については、mozillaのドキュメントを参照してください: <a href=\"https://developer.mozilla.org/en-US/docs/Web/Events/dblclick\">https://developer.mozilla.org/en-US/docs/Web/Events/dblclick</a>"
      ],
      "params": {
        "event": "Object: (オプション) 任意のMouseEventコールバック引数。"
      }
    },
    "mouseWheel": {
      "description": [
        "関数 <a href=\"#/p5/mouseWheel\">mouseWheel()</a> は、実際のマウスホイールまたはタッチパッドによってトリガーされるたびに、垂直方向のマウスホイールイベントが検出されるたびに実行されます。event.deltaプロパティは、マウスホイールがスクロールした量を返します。値は、スクロール方向によって正または負になることがあります（macOSで「ナチュラル」スクロールが有効になっている場合、符号が反転します）。ブラウザによっては、さまざまなマウスイベントにデフォルトの動作が関連付けられていることがあります。このイベントのデフォルトの動作を防ぐには、メソッドの最後に「return false」を追加します。現在のSafariにおける「wheel」イベントのサポート状況のため、Safariを使用している場合には、期待通りの動作をするために「return false」を含める必要があります。"
      ],
      "params": {
        "event": "Object: (オプション) 任意のWheelEventコールバック引数。"
      }
    },
    "requestPointerLock": {
      "description": [
        "関数 <a href=\"#/p5/requestPointerLock\">requestPointerLock()</a> は、ポインタを現在の位置にロックし、不可視にします。<a href=\"#/p5/movedX\">movedX</a> と <a href=\"#/p5/movedY\">movedY</a> を使って、drawの最後の呼び出し以降にマウスが移動した差分を取得します。すべてのブラウザがこの機能をサポートしているわけではないことに注意してください。これにより、マウスが画面の外に出ても、繰り返し一方向に移動しても制限されないエクスペリエンスを作成できます。例えば、一人称視点のエクスペリエンス。"
      ]
    },
    "exitPointerLock": {
      "description": [
        "関数 <a href=\"#/p5/exitPointerLock\">exitPointerLock()</a> は、以前にトリガーされた <a href=\"#/p5/requestPointerLock\">ポインタロック</a> を終了させます。例えば、UI要素を使用可能にするためなど。"
      ]
    },
    "touches": {
      "description": [
        "システム変数 touches[] は、キャンバスの (0, 0) に対する現在のすべてのタッチポイントの位置と、移動するユニークなタッチを識別するIDが含まれた配列です。配列の各要素は、x, y, および id プロパティを持つオブジェクトです。",
        "touches[] 配列は、タッチベースのデスクトップ（ノートパソコン）の Safari および IE ではサポートされていません。"
      ]
    },
    "touchStarted": {
      "description": [
        "touchStarted() 関数は、タッチが登録されるたびに1回呼び出されます。もし <a href=\"#/p5/touchStarted\">touchStarted()</a> 関数が定義されていない場合、代わりに定義されている <a href=\"#/p5/mousePressed\">mousePressed()</a> 関数が呼び出されます。ブラウザは、さまざまなタッチイベントに対して異なるデフォルトの動作を持っている場合があります。このイベントのデフォルトの動作を防ぐには、メソッドの最後に「return false」を追加してください。"
      ],
      "params": {
        "event": "Object: (オプション) 任意の TouchEvent コールバック引数。"
      }
    },
    "touchMoved": {
      "description": [
        "<a href=\"#/p5/touchMoved\">touchMoved()</a> 関数は、タッチムーブが登録されるたびに呼び出されます。もし <a href=\"#/p5/touchMoved\">touchMoved()</a> 関数が定義されていない場合、代わりに定義されている <a href=\"#/p5/mouseDragged\">mouseDragged()</a> 関数が呼び出されます。ブラウザは、さまざまなタッチイベントに対して異なるデフォルトの動作を持っている場合があります。このイベントのデフォルトの動作を防ぐには、メソッドの最後に「return false」を追加してください。"
      ],
      "params": {
        "event": "Object: (オプション) 任意の TouchEvent コールバック引数。"
      }
    },
    "touchEnded": {
      "description": [
        "<a href=\"#/p5/touchEnded\">touchEnded()</a> 関数はタッチが終了するたびに呼び出されます。 <a href=\"#/p5/touchEnded\">touchEnded()</a> 関数が定義されていない場合、代わりに定義されている <a href=\"#/p5/mouseReleased\">mouseReleased()</a> 関数が呼び出されます。 ブラウザは、さまざまなタッチイベントに添付された異なるデフォルトの動作を持つことがあります。 このイベントのデフォルトの動作を防ぐには、メソッドの最後に \"return false\" を追加してください。"
      ],
      "params": {
        "event": "Object: (オプション) 任意の TouchEvent コールバック引数。"
      }
    },
    "createImage": {
      "description": [
        "新しい <a href=\"#/p5.Image\">p5.Image</a>（画像を格納するデータ型）を作成します。これにより、新しいピクセルバッファが利用できるようになります。バッファのサイズを、width および height パラメータで設定します。",
        ".<a href=\"#/p5.Image/pixels\">pixels</a> は、表示ウィンドウ内のすべてのピクセルの値を含む配列にアクセスできます。これらの値は数字です。この配列は、表示ウィンドウのサイズ（<a href=\"#/p5/pixelDensity\">pixelDensity</a> の適切な係数を含む）x4で、各ピクセルの R、G、B、A の値を順番に、各行を左から右に、各列を上から下に移動して表現しています。詳細については、.<a href=\"#/p5.Image/pixels\">pixels</a> を参照してください。また、<a href=\"#/p5.Image/set\">set()</a> や <a href=\"#/p5.Image/get\">get()</a> を使用する方が簡単かもしれません。",
        "画像のピクセルにアクセスする前に、<a href=\"#/p5.Image/loadPixels\">loadPixels()</a> 関数を使用してデータをロードする必要があります。配列データが変更された後、変更を更新するために <a href=\"#/p5.Image/updatePixels\">updatePixels()</a> 関数を実行する必要があります。"
      ],
      "returns": "p5.Image: <a href=\"#/p5.Image\">p5.Image</a> オブジェクト",
      "params": {
        "width": "Integer: ピクセル単位の幅",
        "height": "Integer: ピクセル単位の高さ"
      }
    },
    "saveCanvas": {
      "description": [
        "現在のキャンバスを画像として保存します。ブラウザは、ファイルをすぐに保存するか、ダイアログウィンドウでユーザーにプロンプトを表示します。"
      ],
      "params": {
        "selectedCanvas": "p5.Element|HTMLCanvasElement: 特定のhtml5キャンバスを表す変数 (オプション)",
        "filename": "String (オプション)",
        "extension": "String: (オプション) 'jpg' または 'png'"
      }
    },
    "saveFrames": {
      "description": [
        "映画を作成するために使用できるフレームのシーケンスをキャプチャします。コールバックを受け入れます。例えば、フレームをサーバーに送信して保存したり、映画に変換したりする場合があります。コールバックが提供されない場合、ブラウザは作成されたばかりのすべての画像をダウンロードしようとする保存ダイアログをポップアップします。コールバックが提供された場合、画像データはデフォルトでは保存されず、代わりにコールバック関数の引数としてオブジェクトの配列として渡されます。配列のサイズは、フレームの合計数に等しくなります。",
        "引数 <code>duration</code> と <code>framerate</code> は、それぞれ 15 以下、および 22 以下に制約されています。これは、1 秒あたり 22 フレームで最大 15 秒分のフレームをダウンロードできることを意味し、フレームの合計数は 330 になります。これは、十分な大きさのキャンバスが簡単にコンピュータのメモリを埋め尽くし、プログラムやブラウザをクラッシュさせる可能性があるため、メモリの問題を避けるために行われています。",
        "より長いアニメーションをエクスポートするには、<a href=\"https://github.com/spite/ccapture.js/\">ccapture.js</a> のようなライブラリを検討してみてください。"
      ],
      "params": {
        "filename": "String",
        "extension": "String: 'jpg' または 'png'",
        "duration": "Number: フレームを保存するための秒単位の期間。このパラメータは 15 以下に制約されます。",
        "framerate": "Number: フレームを保存するフレームレート。このパラメータは 22 以下に制約されます。",
        "callback": "Function(Array): (オプション) 画像データを処理するために実行されるコールバック関数。この関数は引数として配列を受け入れる必要があります。配列には、指定された数のフレームオブジェクトが含まれます。各オブジェクトには3つのプロパティがあります:imageData - image/octet-stream、filename、およびextension。"
      }
    },
    "loadImage": {
      "description": [
        "画像をパスから読み込み、<a href=\"#/p5.Image\">p5.Image</a> を作成します。",
        "画像はレンダリングのためにすぐに利用できない場合があります。画像が準備完了してから何かを行いたい場合は、<a href=\"#/p5/loadImage\">loadImage()</a> を <a href=\"#/p5/preload\">preload()</a> の中に入れてください。また、準備ができたときに画像を処理するためのコールバック関数を提供することもできます。",
        "画像へのパスは、スケッチにリンクするHTMLファイルに対して相対的であるべきです。URLや他のリモート場所からの画像の読み込みは、ブラウザの組み込みセキュリティによってブロックされることがあります。",
        "ファイルパスの代わりに、base64でエンコードされた画像の文字列を渡すこともできます。文字列の前に \"data:image/png;base64,\" を追加することを忘れないでください。"
      ],
      "returns": "p5.Image: <a href=\"#/p5.Image\">p5.Image</a> オブジェクト",
      "params": {
        "path": "String: 読み込む画像のパス",
        "successCallback": "function(p5.Image): (オプション) 画像が読み込まれたら呼び出される関数。<a href=\"#/p5.Image\">p5.Image</a> が渡されます。",
        "failureCallback": "Function(Event): (オプション) 画像の読み込みに失敗した場合、イベントエラーとともに呼び出されます。"
      }
    },
    "saveGif": {
      "description": [
        "現在のアニメーションをgifとして生成し、コンピュータにダウンロードします！",
        "duration引数は、アニメーションから録画したい秒数を指定します。この値は、unitsの値に応じて、生成する必要があるフレーム数に変換されます。次の段落で詳しく説明します。",
        "さらに2つの引数を含むオプションのオブジェクトです:delay（number）およびunits（string）。",
        "<code>delay</code>は、録画を開始する前に待つ時間を指定します。",
        "<code>units</code>は、'seconds'または'frames'のいずれかの文字列です。デフォルトでは'seconds'です。",
        "<code>units</code>は、durationとdelay引数の動作方法を指定します。'seconds'の場合、これらの引数は秒に対応し、3秒間のアニメーションが作成されることを意味します。'frames'の場合、引数はアニメーションのフレーム数に対応し、この数値が非常に確実な場合に限ります。",
        "これは、setupで呼び出すことも、以下の例のように、keyPressedやmousePressedなどのイベント関数内で呼び出すこともできます。"
      ],
      "params": {
        "filename": "String: gifファイルのファイル名",
        "duration": "Number: スケッチからキャプチャしたい秒数の長さ",
        "options": "Object: delay（録画を開始する前に待つ時間を指定する）およびunits（'seconds'または'frames'のいずれかの文字列。デフォルトでは'seconds'）を含むオプションのオブジェクト。"
      }
    },
    "image": {
      "description": [
        "p5.jsキャンバスに画像を描画します。",
        "この関数は、異なる数のパラメータで使用できます。最もシンプルな使い方では、img、x、およびyの3つのパラメータだけが必要で、(x, y)は画像の位置です。さらに2つのパラメータをオプションで追加して、画像の幅と高さを指定できます。",
        "この関数は、8つのNumberパラメータでも使用できます。これらすべてのパラメータを区別するために、p5.jsでは、「destination rectangle」（これに対応するのは「dx」、「dy」など）と「source image」（これに対応するのは「sx」、「sy」など）という言葉を使用しています。ソース画像の一部を表示したい場合に、「source image」の寸法を指定すると便利です。さらに説明するための図を参照してください: <img src=\"assets/drawImage.png\"></img>",
        "この関数は、9番目のパラメータであるfitを追加することで、元のアスペクト比を歪めずに画像を描画するためにも使用できます。fitは、COVERまたはCONTAINのいずれかになります。CONTAINは、名前が示すように、指定された宛先ボックス内に画像全体を含め、画像の比率を歪めません。COVERは、宛先ボックス全体を覆います。"
      ],
      "params": {
        "img": "p5.Image|p5.Element|p5.Texture: 表示する画像",
        "x": "Number: 画像の左上隅のx座標",
        "y": "Number: 画像の左上隅のy座標",
        "width": "Number: (オプション) 画像を描画する幅",
        "height": "Number: (オプション) 画像を描画する高さ",
        "dx": "Number: ソース画像を描画する宛先矩形のx座標",
        "dy": "Number: ソース画像を描画する宛先矩形のy座標",
        "dWidth": "Number: 宛先矩形の幅",
        "dHeight": "Number: 宛先矩形の高さ",
        "sx": "Number: ソース画像のサブセクションを宛先矩形に描画するx座標",
        "sy": "Number: ソース画像のサブセクションを宛先矩形に描画するy座標",
        "sWidth": "Number: (オプション) ソース画像のサブセクションの幅で、目的の矩形に描画されます",
        "sHeight": "Number: (オプション) ソース画像のサブセクションの高さで、目的の矩形に描画されます",
        "fit": "Constant: (オプション) CONTAIN または COVER のいずれか",
        "xAlign": "Constant: (オプション) LEFT, RIGHT, または CENTER のいずれか。デフォルトは CENTER",
        "yAlign": "Constant: (オプション) TOP, BOTTOM, または CENTER のいずれか。デフォルトは CENTER"
      }
    },
    "tint": {
      "description": [
        "画像の表示に使用する塗りつぶしの値を設定します。画像は指定された色に着色されたり、アルファ値を含むことで透明になったりします。",
        "画像の色に影響を与えずに透明性を適用するには、塗り色に白を使用し、アルファ値を指定してください。例えば、tint(255, 128)は、画像を50％透明にします（デフォルトのアルファ範囲が0-255であることを前提にしていますが、<a href=\"#/p5/colorMode\">colorMode()</a>で変更することができます）。",
        "grayパラメータの値は、<a href=\"#/p5/colorMode\">colorMode()</a>で指定された現在の最大値以下でなければなりません。デフォルトの最大値は255です。"
      ],
      "params": {
        "v1": "Number: 現在のカラーレンジに対する赤または色相の値",
        "v2": "Number: 現在のカラーレンジに対する緑または彩度の値",
        "v3": "Number: 現在のカラーレンジに対する青または明度の値",
        "alpha": "Number (Optional)",
        "value": "String: カラー文字列",
        "gray": "Number: グレーの値",
        "values": "Number[]: 色の赤、緑、青、およびアルファ成分を含む配列",
        "color": "p5.Color: 着色色"
      }
    },
    "noTint": {
      "description": [
        "画像の表示に使用する現在の塗りつぶし値を削除し、元の色相で画像を表示するように戻します。"
      ]
    },
    "imageMode": {
      "description": [
        "画像モードを設定します。 <a href=\"#/p5/image\">image()</a> に与えられるパラメータの解釈方法を変更することで、画像が描画される位置を変更します。デフォルトのモードは imageMode(CORNER) で、<a href=\"#/p5/image\">image()</a> の第2および第3のパラメータを画像の左上の角として解釈します。さらに2つのパラメータが指定されている場合、それらは画像の幅と高さを設定するために使用されます。",
        "imageMode(CORNERS) は、<a href=\"#/p5/image\">image()</a> の第2および第3のパラメータを1つの角の位置として解釈し、第4および第5のパラメータを反対側の角として解釈します。",
        "imageMode(CENTER) は、<a href=\"#/p5/image\">image()</a> の第2および第3のパラメータを画像の中心点として解釈します。さらに2つのパラメータが指定されている場合、それらは画像の幅と高さを設定するために使用されます。"
      ],
      "params": {
        "mode": "Constant: CORNER、CORNERS、または CENTER のいずれか"
      }
    },
    "pixels": {
      "description": [
        "ディスプレイウィンドウ内のすべてのピクセルの値を含む<a href='https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference /Global_Objects/Uint8ClampedArray' target='_blank'>Uint8ClampedArray</a>です。これらの値は数値です。この配列は、ディスプレイウィンドウのサイズ（<a href=\"#/p5/pixelDensity\">pixelDensity</a>の適切な係数を含む）x4で、各ピクセルのR、G、B、Aの値を左から右へ、各行から下へ移動しながら順番に表現しています。Retinaやその他の高密度ディスプレイは、ピクセル密度の二乗の係数であるピクセル[]を持っています。例えば、画像が100×100ピクセルの場合、40,000になります。Retinaディスプレイでは160,000になります。",
        "配列の最初の4つの値（インデックス0-3）は、ピクセル(0, 0)のR、G、B、Aの値です。次の4つの値（インデックス4-7）は、ピクセル(1, 0)のR、G、B、Aの値が含まれます。一般的には、(x, y)のピクセルの値を設定するには、次のようにします:<pre><code class=\"language-javascript\">let d = pixelDensity(); for (let i = 0; i < d; i++) {  for (let j = 0; j < d; j++) {  // loop over  index = 4 * ((y * d + j) * width * d + (x * d + i));  pixels[index] = r;  pixels[index+1] = g;  pixels[index+2] = b;  pixels[index+3] = a;  } } </code></pre>",
        "上記の方法は複雑ですが、任意のpixelDensityで動作する柔軟性があります。<a href=\"#/p5/set\">set()</a>は、任意のpixelDensityで指定された(x, y)に対して<a href=\"#/p5/pixels\">pixels[]</a>内の適切な値を自動的に設定しますが、ピクセル配列に多くの変更が加えられるとパフォーマンスが低下することがあります。",
        "この配列にアクセスする前に、<a href=\"#/p5/loadPixels\">loadPixels()</a> 関数でデータをロードする必要があります。配列データが変更された後、<a href=\"#/p5/updatePixels\">updatePixels()</a> 関数を実行して変更を更新する必要があります。",
        "これは標準的なJavaScriptの配列ではないことに注意してください。これは、<a href=\"#/p5/slice\">slice()</a> や <a href=\"#/p5/arrayCopy\">arrayCopy()</a> などの標準的なJavaScript関数が動作しないことを意味します。"
      ]
    },
    "blend": {
      "description": [
        "指定されたブレンドモードを使用して、ある画像のピクセル領域を別の画像にコピーします。"
      ],
      "params": {
        "srcImage": "p5.Image: ソース画像",
        "sx": "Integer: ソースの左上隅のX座標",
        "sy": "Integer: ソースの左上隅のY座標",
        "sw": "Integer: ソース画像の幅",
        "sh": "Integer: ソース画像の高さ",
        "dx": "Integer: 送り先の左上隅のX座標",
        "dy": "Integer: 送り先の左上隅のY座標",
        "dw": "Integer: 送り先画像の幅",
        "dh": "Integer: 送り先画像の高さ",
        "blendMode": "Constant: ブレンドモード。BLEND, DARKEST, LIGHTEST, DIFFERENCE, MULTIPLY, EXCLUSION, SCREEN, REPLACE, OVERLAY, HARD_LIGHT, SOFT_LIGHT, DODGE, BURN, ADD, または NORMAL のいずれか。"
      }
    },
    "copy": {
      "description": [
        "キャンバスの一部を別の領域にコピーし、srcImgパラメータとして使用される画像のピクセル領域をキャンバスにコピーします。srcImageが指定されている場合、これがソースとして使用されます。ソースと宛先の領域が同じサイズでない場合、ソースのピクセルが自動的に指定されたターゲット領域に合わせてサイズ変更されます。"
      ],
      "params": {
        "srcImage": "p5.Image|p5.Element: ソース画像",
        "sx": "Integer: ソースの左上隅のX座標",
        "sy": "Integer: ソースの左上隅のY座標",
        "sw": "Integer: ソース画像の幅",
        "sh": "Integer: ソース画像の高さ",
        "dx": "Integer: 宛先の左上隅のX座標",
        "dy": "Integer: 宛先の左上隅のY座標",
        "dw": "Integer: 宛先画像の幅",
        "dh": "Integer: 宛先画像の高さ"
      }
    },
    "filter": {
      "description": [
        "キャンバスにフィルターを適用します。プリセットオプションは以下の通りです:",
        "THRESHOLD 画像を、ピクセルがlevelパラメータで定義された閾値より上か下かによって、白黒のピクセルに変換します。パラメータは 0.0 (黒) から 1.0 (白) の間でなければなりません。levelが指定されていない場合、0.5 が使用されます。",
        "GRAY 画像内のすべての色をグレースケールに変換します。パラメータは使用されません。",
        "OPAQUE アルファチャンネルを完全に不透明に設定します。パラメータは使用されません。",
        "INVERT 各ピクセルをその反転値に設定します。パラメータは使用されません。",
        "POSTERIZE 画像の各チャンネルを、パラメータとして指定された色数に制限します。パラメータは2から255の間の値に設定できますが、低い範囲で結果が最も目立ちます。",
        "BLUR レベルパラメータでぼかしの範囲を指定したガウシアンブラーを実行します。パラメータが使用されていない場合、ブラーは半径1のガウシアンブラーに相当します。値が大きいほど、ぼかしが増えます。",
        "ERODE 明るい領域を減少させます。パラメータは使用されません。",
        "DILATE 明るい領域を増加させます。パラメータは使用されません。",
        "filter() は WEBGL モードでは動作しません。WEBGL モードではカスタムシェーダを使用して類似の効果を実現できます。Adam Ferriss は、フィルターの例にある多くの効果を含む <a href=\"https://github.com/aferriss/p5jsShaderExamples\" target='_blank'>シェーダーの例の選択</a> を書いています。"
      ],
      "params": {
        "filterType": "Constant: THRESHOLD, GRAY, OPAQUE, INVERT,  POSTERIZE, BLUR, ERODE, DILATE, または BLUR のいずれか。Filters.js のドキュメントに各利用可能なフィルターについて記載されています。",
        "filterParam": "Number: (オプション) 各フィルタに固有のオプションパラメータ。上記を参照"
      }
    },
    "get": {
      "description": [
        "キャンバスからピクセルの領域、または1つのピクセルを取得します。",
        "任意のピクセルの[R,G,B,A]の値の配列を返すか、画像の一部を取得します。パラメータが指定されていない場合、画像全体が返されます。xとyパラメータを使用して1つのピクセルの値を取得します。表示ウィンドウの一部を取得するには、追加のwとhパラメータを指定します。画像を取得する場合、xおよびyパラメータは、現在の<a href=\"#/p5/imageMode\">imageMode()</a>に関係なく、画像の左上隅の座標を定義します。",
        "get(x, y)を使用して1つのピクセルの色を取得することは簡単ですが、<a href=\"#/p5/pixels\">pixels[]</a>からデータを直接取得するより速くはありません。ピクセル密度dを持つ<a href=\"#/p5/pixels\">pixels[]</a>を使用したget(x, y)の同等の文は次のとおりです。<pre><code class=\"language-javascript\">let x, y, d; // これらを座標に設定します let off = (y * width + x) * d * 4; let components = [  pixels[off],  pixels[off + 1],  pixels[off + 2],  pixels[off + 3] ]; print(components); </code></pre>",
        "<a href=\"#/p5/pixels\">pixels[]</a>に関する詳細情報は、リファレンスを参照してください。",
        "p5.Imageオブジェクトから色の配列やサブ画像を抽出する場合は、<a href=\"#/p5.Image/get\">p5.Image.get()</a>を参照してください。"
      ],
      "returns": "p5.Image: 矩形 <a href=\"#/p5.Image\">p5.Image</a>",
      "params": {
        "x": "Number: ピクセルのx座標",
        "y": "Number: ピクセルのy座標",
        "w": "Number: 幅",
        "h": "Number: 高さ"
      }
    },
    "loadPixels": {
      "description": [
        "表示ウィンドウのピクセルデータを<a href=\"#/p5/pixels\">pixels[]</a> 配列にロードします。この関数は、<a href=\"#/p5/pixels\">pixels[]</a>から読み取るか、書き込む前に必ず呼び出す必要があります。 <a href=\"#/p5/set\">set()</a>で行われた変更、または<a href=\"#/p5/pixels\">pixels[]</a>への直接の操作だけが発生することに注意してください。"
      ]
    },
    "set": {
      "description": [
        "任意のピクセルの色を変更するか、画像を直接表示ウィンドウに書き込みます。x および y パラメータは、変更するピクセルを指定し、c パラメータは色の値を指定します。これは、<a href=\"#/p5.Color\">p5.Color</a> オブジェクト、または [R, G, B, A] ピクセル配列であることができます。また、単一のグレースケール値でも構いません。画像を設定する場合、x および y パラメータは、現在の<a href=\"#/p5/imageMode\">imageMode()</a>に関係なく、画像の左上隅の座標を定義します。",
        "<a href=\"#/p5/set\">set()</a>を使用した後、変更を反映させるために<a href=\"#/p5/updatePixels\">updatePixels()</a>を呼び出す必要があります。これは、すべてのピクセルが設定された後に一度だけ呼び出す必要があり、.<a href=\"#/p5/get\">get()</a>を呼び出すか、画像を描画する前に呼び出す必要があります。",
        "set(x, y) を使って1つのピクセルの色を設定するのは簡単ですが、<a href=\"#/p5/pixels\">pixels[]</a>に直接データを入れるより速くはありません。リタイナディスプレイで作業している場合、<a href=\"#/p5/pixels\">pixels[]</a>の値を直接設定することは複雑になるかもしれませんが、多くのピクセルを毎回ループで直接設定する必要がある場合は、パフォーマンスが向上します。<a href=\"#/p5/pixels\">pixels[]</a>に関する詳細は、そのリファレンスを参照してください。"
      ],
      "params": {
        "x": "Number: ピクセルのx座標",
        "y": "Number: ピクセルのy座標",
        "c": "Number|Number[]|Object: グレースケール値を挿入 | ピクセル配列 |  <a href=\"#/p5.Color\">p5.Color</a> オブジェクト | コピーする <a href=\"#/p5.Image\">p5.Image</a>"
      }
    },
    "updatePixels": {
      "description": [
        "画面に<a href=\"#/p5/pixels\">pixels[]</a>配列のデータを更新します。 <a href=\"#/p5/loadPixels\">loadPixels()</a>と併用して使用してください。 配列からピクセルを読み取るだけであれば、<a href=\"#/p5/updatePixels\">updatePixels()</a>を呼び出す必要はありません。 更新は変更を適用する場合にのみ必要です。 <a href=\"#/p5/updatePixels\">updatePixels()</a>は、pixels配列が操作されるたび、または<a href=\"#/p5/set\">set()</a>が呼び出されるたびに呼び出されるべきであり、<a href=\"#/p5/set\">set()</a>で行われた変更や<a href=\"#/p5/pixels\">pixels[]</a>への直接の変更のみが発生します。"
      ],
      "params": {
        "x": "Number: (オプション) 更新する領域の左上のx座標",
        "y": "Number: (オプション) 更新する領域の左上のy座標",
        "w": "Number: (オプション) 更新する領域の幅",
        "h": "Number: (オプション) 更新する領域の高さ"
      }
    },
    "loadJSON": {
      "description": [
        "ファイルまたはURLからJSONファイルをロードし、オブジェクトを返します。JSONファイルに配列が含まれていても、インデックス番号がキーとなるオブジェクトが返されることに注意してください。",
        "このメソッドは非同期であり、スケッチの次の行が実行される前に終了しない場合があります。JSONPはポリフィルを介してサポートされており、<a href=\"https://github.com/camsong/ fetch-jsonp\">こちら</a>で指定されている構文に従ったJSONコールバックの定義を含むオブジェクトを2番目の引数として渡すことができます。",
        "このメソッドは、最大64MBのファイルをフェッチするのに適しています。"
      ],
      "returns": "Object|Array: JSONデータ",
      "params": {
        "path": "String: ロードするファイル名またはURL",
        "jsonpOptions": "Object: (オプション) jsonp関連設定のオプションオブジェクト",
        "datatype": "String: (オプション) \"json\" または \"jsonp\"",
        "callback": "Function: (オプション) <a href=\"#/p5/loadJSON\">loadJSON()</a> 完了後に実行される関数。データが最初の引数として渡されます。",
        "errorCallback": "Function: (オプション) エラーがあった場合に実行される関数。レスポンスが最初の引数として渡されます。"
      }
    },
    "loadStrings": {
      "description": [
        "ファイルの内容を読み込み、個々の行からなる文字列配列を作成します。ファイル名がパラメータとして使用される場合、上記の例のように、ファイルはスケッチディレクトリ/フォルダ内に配置する必要があります。",
        "また、ファイルはローカルコンピュータのどこからでも絶対パスを使ってロードすることができます（UnixおよびLinuxでは/で始まるもの、Windowsではドライブレターで始まるもの）、またはファイル名パラメータはネットワーク上にあるファイルのURLになることがあります。",
        "このメソッドは非同期であり、スケッチの次の行が実行される前に終了しない場合があります。",
        "このメソッドは、最大64MBのファイルをフェッチするのに適しています。"
      ],
      "returns": "String[]: 文字列の配列",
      "params": {
        "filename": "String: ロードするファイル名またはURL",
        "callback": "Function: (オプション) <a href=\"#/p5/loadStrings\">loadStrings()</a> 完了後に実行される関数。配列が最初の引数として渡されます。",
        "errorCallback": "Function: (オプション) エラーがあった場合に実行される関数。レスポンスが最初の引数として渡されます。"
      }
    },
    "loadTable": {
      "description": [
        "ファイルまたはURLの内容を読み込み、その値を持つ<a href=\"#/p5.Table\">p5.Table</a>オブジェクトを作成します。ファイルが指定されている場合、スケッチの「data」フォルダ内に配置する必要があります。filenameパラメータは、オンラインで見つかったファイルのURLでも構いません。デフォルトでは、ファイルはカンマ区切り（CSV形式）であると想定されています。'header'オプションが含まれている場合にのみ、テーブルはヘッダー行を探します。",
        "このメソッドは非同期であり、スケッチの次の行が実行される前に終了しない場合があります。<a href=\"#/p5/loadTable\">loadTable()</a> を<a href=\"#/p5/preload\">preload()</a>内で呼び出すと、<a href=\"#/p5/setup\">setup()</a>および<a href=\"#/p5/draw\">draw()</a>が呼び出される前に操作が完了することが保証されます。<a href=\"#/p5/preload\">preload()</a>の外では、オブジェクトを処理するコールバック関数を提供することができます。",
        "すべてのロードおよび保存されたファイルはUTF-8エンコーディングを使用します。このメソッドは、最大64MBのファイルをフェッチするのに適しています。"
      ],
      "returns": "Object: データを含む<a href=\"#/p5.Table\">Table</a>オブジェクト",
      "params": {
        "filename": "String: ロードするファイル名またはURL",
        "extension": "String: (オプション) カンマ区切りの値「csv」、セミコロン区切りの値「ssv」、タブ区切りの値「tsv」でテーブルを解析する",
        "header": "String: (オプション) テーブルにヘッダー行があることを示す「header」",
        "callback": "Function: (オプション) <a href=\"#/p5/loadTable\">loadTable()</a> 完了後に実行される関数。成功時には、<a href=\"#/p5.Table\">Table</a> オブジェクトが最初の引数として渡されます。",
        "errorCallback": "Function: (オプション) エラーがあった場合に実行される関数。レスポンスが最初の引数として渡されます。"
      }
    },
    "loadXML": {
      "description": [
        "ファイルの内容を読み込み、その値を持つXMLオブジェクトを作成します。ファイル名がパラメータとして使用される場合、上記の例のように、ファイルはスケッチディレクトリ/フォルダ内に配置する必要があります。",
        "また、ファイルはローカルコンピュータのどこからでも絶対パスを使ってロードすることができます（UnixおよびLinuxでは/で始まるもの、Windowsではドライブレターで始まるもの）、またはファイル名パラメータはネットワーク上にあるファイルのURLになることがあります。",
        "このメソッドは非同期であり、スケッチの次の行が実行される前に終了しない場合があります。<a href=\"#/p5/loadXML\">loadXML()</a> を<a href=\"#/p5/preload\">preload()</a>内で呼び出すと、<a href=\"#/p5/setup\">setup()</a>および<a href=\"#/p5/draw\">draw()</a>が呼び出される前に操作が完了することが保証されます。",
        "<a href=\"#/p5/preload\">preload()</a>の外では、オブジェクトを処理するコールバック関数を提供することができます。",
        "このメソッドは、最大64MBのファイルをフェッチするのに適しています。"
      ],
      "returns": "Object: データを含むXMLオブジェクト",
      "params": {
        "filename": "String: ロードするファイル名またはURL",
        "callback": "Function: (オプション) <a href=\"#/p5/loadXML\">loadXML()</a> 完了後に実行される関数。XMLオブジェクトが最初の引数として渡されます。",
        "errorCallback": "Function: (オプション) エラーがあった場合に実行される関数。レスポンスが最初の引数として渡されます。"
      }
    },
    "loadBytes": {
      "description": [
        "このメソッドは、最大64MBのファイルをフェッチするのに適しています。"
      ],
      "returns": "Object: ロードされたバッファを持つ 'bytes' プロパティを持つオブジェクト",
      "params": {
        "file": "String: ロードするファイル名またはURL",
        "callback": "Function: (オプション) <a href=\"#/p5/loadBytes\">loadBytes()</a> 完了後に実行される関数",
        "errorCallback": "Function: (オプション) エラーがあった場合に実行される関数"
      }
    },
    "httpGet": {
      "description": [
        "HTTP GETリクエストを実行するメソッドです。データ型が指定されていない場合、p5はURLに基づいて推測し、テキストをデフォルトとします。これは、<code>httpDo(path, 'GET')</code>を呼び出すことと同等です。'binary'データ型はBlobオブジェクトを返し、'arrayBuffer'データ型は、タイプ付き配列（Uint8Arrayなど）を初期化するために使用できるArrayBufferを返します。"
      ],
      "returns": "Promise: 操作が正常に完了した場合はデータを含むPromise、エラーが発生した場合はエラーを含むPromiseを返します。",
      "params": {
        "path": "String: ロードするファイル名またはURL",
        "datatype": "String: (オプション) \"json\", \"jsonp\", \"binary\", \"arrayBuffer\",  \"xml\", または \"text\"",
        "data": "Object|Boolean: (オプション) リクエストとともに送信されるパラメータデータ",
        "callback": "Function: (オプション) <a href=\"#/p5/httpGet\">httpGet()</a> が完了した後に実行される関数、データは最初の引数として渡されます。",
        "errorCallback": "Function: (オプション) エラーが発生した場合に実行される関数、レスポンスは最初の引数として渡されます。"
      }
    },
    "httpPost": {
      "description": [
        "HTTP POSTリクエストを実行するメソッドです。データ型が指定されていない場合、p5はURLに基づいて推測し、テキストをデフォルトとします。これは、<code>httpDo(path, 'POST')</code>を呼び出すことと同等です。"
      ],
      "returns": "Promise: 操作が正常に完了した場合はデータを含むPromise、エラーが発生した場合はエラーを含むPromiseを返します。",
      "params": {
        "path": "String: ロードするファイル名またはURL",
        "datatype": "String: (オプション) \"json\", \"jsonp\", \"xml\", または \"text\"。省略された場合、<a href=\"#/p5/httpPost\">httpPost()</a> が推測します。",
        "data": "Object|Boolean: (オプション) リクエストとともに送信されるパラメータデータ",
        "callback": "Function: (オプション) <a href=\"#/p5/httpPost\">httpPost()</a>が完了した後に実行される関数で、データが最初の引数として渡されます。",
        "errorCallback": "Function: (オプション) エラーが発生した場合に実行される関数で、レスポンスが最初の引数として渡されます。"
      }
    },
    "httpDo": {
      "description": [
        "HTTPリクエストを実行するためのメソッドです。データ型が指定されていない場合、p5はURLに基づいて推測し、デフォルトではテキストになります。より高度な使用法として、最初の引数にパス、2番目の引数にオブジェクトを渡すこともできます。シグネチャはFetch API仕様に従っています。このメソッドは、\"GET\"が使用された場合、最大64MBのファイルを取得するのに適しています。"
      ],
      "returns": "Promise: 操作が正常に完了した場合にデータで解決されるプロミス、またはエラーが発生した後にエラーでリジェクトされるプロミス。",
      "params": {
        "path": "String: 読み込むファイル名またはURL",
        "method": "String: (オプション) \"GET\"、\"POST\"、または\"PUT\"のいずれかで、デフォルトは\"GET\"",
        "datatype": "String: (オプション) \"json\"、\"jsonp\"、\"xml\"、または\"text\"",
        "data": "Object: (オプション) リクエストとともに送信されるパラメータデータ",
        "callback": "Function: (オプション) <a href=\"#/p5/httpGet\">httpGet()</a>が完了した後に実行される関数で、データが最初の引数として渡されます。",
        "errorCallback": "Function: (オプション) エラーが発生した場合に実行される関数で、レスポンスが最初の引数として渡されます。",
        "options": "Object: リクエストオブジェクトのオプションで、\"fetch\" APIの<a href=\"https://developer.mozilla.org/en/docs/Web/API/Fetch_API\">リファレンス</a>に記載されています。"
      }
    },
    "createWriter": {
      "returns": "p5.PrintWriter:",
      "params": {
        "name": "String: 作成するファイルの名前",
        "extension": "String (オプション)"
      }
    },
    "save": {
      "description": [
        "指定された要素（画像、テキスト、json、csv、wav、html）をクライアントのコンピュータに保存します。最初のパラメータは、保存したい要素へのポインターが指定できます。要素は、<a href=\"#/p5.Element\">p5.Element</a>、文字列の配列、JSONの配列、JSONオブジェクト、<a href=\"#/p5.Table\">p5.Table </a>、<a href=\"#/p5.Image\">p5.Image</a>、または p5.SoundFile（p5.soundが必要）のいずれかです。2番目のパラメータはファイル名（拡張子を含む）。3番目のパラメータは、このタイプのオブジェクトに特有のオプションです。このメソッドは、指定されたパラメータに適合するファイルを保存します。要素を指定せずに呼び出された場合、デフォルトでは画像ファイルとしてキャンバス全体が保存されます。そのような場合、最初のパラメータとしてファイル名をオプションで指定できます。 <strong>draw内でこのメソッドを呼び出すことはお勧めしません。なぜなら、レンダリングごとに新しい保存ダイアログが開くためです。</strong>"
      ],
      "params": {
        "objectOrFilename": "Object|String: (オプション) ファイル名が指定された場合、ファイル名に応じてpngまたはjpg拡張子の画像としてキャンバスを保存します。 オブジェクトが指定された場合、オブジェクトとファイル名に応じて保存されます（上記の例を参照）。",
        "filename": "String: (オプション) オブジェクトが最初のパラメータとして提供された場合、2番目のパラメータはファイル名を示し、適切なファイル拡張子を含める必要があります（上記の例を参照）。",
        "options": "Boolean|String: (オプション) 追加のオプションはファイルタイプに依存します。 たとえば、JSONを保存する場合、<code>true</code>は出力がファイルサイズに最適化され、読みやすさではなくなります。"
      }
    },
    "saveJSON": {
      "description": [
        "配列またはJSONオブジェクトの内容を.jsonファイルに書き込みます。ファイルの保存プロセスと保存されたファイルの場所は、ウェブブラウザ間で異なります。"
      ],
      "params": {
        "json": "Array|Object",
        "filename": "String",
        "optimize": "Boolean: (オプション) true の場合、ファイルサイズを最適化するために、出力ファイルから改行とスペースを削除します (読みやすさは向上しません)。"
      }
    },
    "saveStrings": {
      "description": [
        "文字列の配列をテキストファイルに書き込みます。1つの文字列ごとに1行。ファイルの保存プロセスと保存されたファイルの場所は、ウェブブラウザ間で異なります。"
      ],
      "params": {
        "list": "String[]: 書き込むための文字列配列",
        "filename": "String: 出力用のファイル名",
        "extension": "String: (オプション) ファイル名の拡張子",
        "isCRLF": "Boolean: (オプション) trueの場合、改行をCRLFに変更"
      }
    },
    "saveTable": {
      "description": [
        "<a href=\"#/p5.Table\">Table</a>オブジェクトの内容をファイルに書き込みます。デフォルトでは、カンマ区切りの値（'csv'）を含むテキストファイルですが、タブ区切り（'tsv'）を使用することもできますし、HTMLテーブル（'html'）を生成することもできます。ファイルの保存プロセスと保存されたファイルの場所は、ウェブブラウザ間で異なります。"
      ],
      "params": {
        "Table": "p5.Table: ファイルに保存する <a href=\"#/p5.Table\">Table</a> オブジェクト",
        "filename": "String: Table が保存されるべきファイル名",
        "options": "String: (オプション) \"tsv\"、\"csv\"、または \"html\" のいずれか"
      }
    },
    "abs": {
      "description": [
        "数値の絶対値（大きさ）を計算します。Math.abs()にマッピングされます。数値の絶対値は常に正です。"
      ],
      "returns": "Number: 与えられた数値の絶対値",
      "params": {
        "n": "Number: 計算する数値"
      }
    },
    "ceil": {
      "description": [
        "パラメータの値以上の最も近いint値を計算します。Math.ceil()にマッピングされます。例えば、ceil(9.03)は値10を返します。"
      ],
      "returns": "Integer: 切り上げられた数値",
      "params": {
        "n": "Number: 切り上げる数値"
      }
    },
    "constrain": {
      "description": [
        "最小値と最大値の間に値を制限します。"
      ],
      "returns": "Number: 制限された数値",
      "params": {
        "n": "Number: 制限する数値",
        "low": "Number: 最小限",
        "high": "Number: 最大限"
      }
    },
    "dist": {
      "description": [
        "2点間の距離を、2次元または3次元で計算します。2つのベクトル間の距離を探している場合は、<a herf=\"#/p5.Vector/dist\">p5.Vector.dist()</a>を参照してください。"
      ],
      "returns": "Number: 2点間の距離",
      "params": {
        "x1": "Number: 第1点のx座標",
        "y1": "Number: 第1点のy座標",
        "x2": "Number: 第2点のx座標",
        "y2": "Number: 第2点のy座標",
        "z1": "Number: 第1点のz座標",
        "z2": "Number: 第2点のz座標"
      }
    },
    "exp": {
      "description": [
        "オイラーの数e（2.71828...）を、nパラメータの冪乗にしたものを返します。Math.exp()にマッピングされます。"
      ],
      "returns": "Number: e^n",
      "params": {
        "n": "Number: 上げる指数"
      }
    },
    "floor": {
      "description": [
        "パラメータの値以下の最も近いint値を計算します。Math.floor()にマッピングされます。"
      ],
      "returns": "Integer: 切り捨てられた数値",
      "params": {
        "n": "Number: 切り捨てる数値"
      }
    },
    "lerp": {
      "description": [
        "特定の増分で2つの数値の間の数値を計算します。amt パラメータは、2つの値の間で補間する量で、0.0 は最初のポイントと等しく、0.1 は最初のポイントに非常に近く、0.5 は中間で、1.0 は2番目のポイントと等しいです。amt の値が 1.0 を超えるか、0.0 未満の場合、2つの与えられた数値の比率に応じて数値が計算されます。lerp() 関数は、直線上の動きを作成したり、点線を描画するのに便利です。"
      ],
      "returns": "Number: lerped値",
      "params": {
        "start": "Number: 最初の値",
        "stop": "Number: 2番目の値",
        "amt": "Number: 数値"
      }
    },
    "log": {
      "description": [
        "数値の自然対数（底eの対数）を計算します。この関数は、n パラメータが 0.0 より大きい値であることを期待しています。Math.log() にマップされます。"
      ],
      "returns": "Number: n の自然対数",
      "params": {
        "n": "Number: 0より大きい数"
      }
    },
    "mag": {
      "description": [
        "ベクトルの大きさ（または長さ）を計算します。ベクトルは、コンピュータグラフィックスや線形代数でよく使われる空間上の方向を表します。ベクトルには「開始」位置がないため、ベクトルの大きさは座標 0,0 からその x,y 値までの距離と考えることができます。したがって、<a href=\"#/p5/mag\">mag()</a> は、dist(0, 0, x, y) を書くためのショートカットです。"
      ],
      "returns": "Number: (0,0) から (a,b) までのベクトルの大きさ",
      "params": {
        "a": "Number: 第一の値",
        "b": "Number: 第二の値"
      }
    },
    "map": {
      "description": [
        "ある範囲の数値を別の範囲に再マップします。",
        "最初の例では、数値 25 が、0 から 100 の範囲の値から、ウィンドウの左端 (0) から右端 (width) までの範囲の値に変換されます。"
      ],
      "returns": "Number: 再マップされた数値",
      "params": {
        "value": "Number: 変換される入力値",
        "start1": "Number: 値の現在の範囲の下限",
        "stop1": "Number: 値の現在の範囲の上限",
        "start2": "Number: 値の目標範囲の下限",
        "stop2": "Number: 値の目標範囲の上限",
        "withinBounds": "Boolean: (オプション) 値を新しくマップされた範囲に制約する"
      }
    },
    "max": {
      "description": [
        "一連の数値の中で最大の値を決定し、その値を返します。 <a href=\"#/p5/max\">max()</a> は、任意の数の Number パラメータ、または任意の長さの配列を受け入れます。"
      ],
      "returns": "Number: 最大の数値",
      "params": {
        "n0": "Number: 比較する数値",
        "n1": "Number: 比較する数値",
        "nums": "Number[]: 比較する数値"
      }
    },
    "min": {
      "description": [
        "一連の数値の中で最小の値を決定し、その値を返します。<a href=\"#/p5/min\">min()</a>は、任意の数のNumberパラメータ、または任意の長さの配列を受け入れます。"
      ],
      "returns": "Number: 最小の数値",
      "params": {
        "n0": "Number: 比較する数値",
        "n1": "Number: 比較する数値",
        "nums": "Number[]: 比較する数値"
      }
    },
    "norm": {
      "description": [
        "別の範囲の数値を0から1の範囲に正規化します。map(value, low, high, 0, 1)と同一です。範囲外の数値は、範囲外の値が意図的で有用であることがよくあるため、0および1にクランプされません。(上記の例を参照してください。)"
      ],
      "returns": "Number: 正規化された数値",
      "params": {
        "value": "Number: 正規化されるべき入力値",
        "start": "Number: 値の現在の範囲の下限",
        "stop": "Number: 値の現在の範囲の上限"
      }
    },
    "pow": {
      "description": [
        "指数表現を容易にします。<a href=\"#/p5/pow\">pow()</a>関数は、数値を自分自身（またはその逆数）と大量にかける効率的な方法です。例えば、pow(3, 5)は式3 × 3 × 3 × 3 × 3と等価であり、pow(3, -5)は1 / 3 × 3 × 3 × 3 × 3と等価です。Math.pow()にマップされます。"
      ],
      "returns": "Number: n^e",
      "params": {
        "n": "Number: 指数表現の底",
        "e": "Number: 底を上げるべき指数"
      }
    },
    "round": {
      "description": [
        "nパラメータに最も近い整数を計算します。例えば、round(133.8)は値134を返します。Math.round()にマップされます。"
      ],
      "returns": "Integer: 四捨五入された数値",
      "params": {
        "n": "Number: 四捨五入する数値",
        "decimals": "Number: (オプション) 四捨五入する小数点以下の桁数。デフォルトは0"
      }
    },
    "sq": {
      "description": [
        "数値の二乗（数値を自分自身で乗算）。結果は常に正の数です。なぜなら、2つの負の数を乗算すると常に正の結果が得られるからです。例えば、-1 * -1 = 1。"
      ],
      "returns": "Number: 二乗された数値",
      "params": {
        "n": "Number: 二乗する数値"
      }
    },
    "sqrt": {
      "description": [
        "数値の平方根を計算します。数値の平方根は常に正ですが、有効な負のルートがある場合もあります。数値aの平方根sは、s*s = aとなるものです。二乗の逆の操作です。Math.sqrt()にマップされます。"
      ],
      "returns": "Number: 数値の平方根",
      "params": {
        "n": "Number: 平方根を求める非負の数値"
      }
    },
    "fract": {
      "description": [
        "数値の小数部分を計算します。"
      ],
      "returns": "Number: x の小数部分、すなわち、 {x}",
      "params": {
        "num": "Number: 小数部分を求める数値"
      }
    },
    "createVector": {
      "description": [
        "新しい<a href=\"#/p5.Vector\">p5.Vector</a>（ベクトルを格納するデータ型）を作成します。これにより、二次元または三次元のユークリッド（幾何学的）ベクトルが提供されます。ベクトルとは、大きさと方向の両方を持つエンティティです。"
      ],
      "returns": "p5.Vector:",
      "params": {
        "x": "Number: (オプション) ベクトルのx成分",
        "y": "Number: (オプション) ベクトルのy成分",
        "z": "Number: (オプション) ベクトルのz成分"
      }
    },
    "noise": {
      "description": [
        "指定された座標でのPerlinノイズ値を返します。Perlinノイズは、標準の<a href=\"#/p5/random\">random()</a>関数と比較して、より自然に順序付けられた調和のある数列を生成するランダムシーケンスジェネレータです。1980年代にKen Perlinによって発明され、以降、グラフィカルアプリケーションで手続き的テクスチャ、自然な動き、形状、地形などを生成するために使用されています。<br /><br /><a href=\"#/p5/random\">random()</a>関数との主な違いは、Perlinノイズは無限のn次元空間で定義されており、座標のペアごとに固定の半乱数値（プログラムの寿命に対してのみ固定; <a href=\"#/p5/noiseSeed\">noiseSeed()</a>関数を参照）が対応していることです。p5.jsは、与えられた座標の数に応じて1D、2D、3Dのノイズを計算することができます。結果として得られる値は常に0.0から1.0の間になります。ノイズ値は、上記の例で示されているように、ノイズ空間を移動することでアニメーション化することができます。第2および第3の次元は、時間としても解釈できます。<br /><br />実際のノイズは、周波数の利用に関してオーディオ信号に似た構造を持っています。物理学の調和の概念に似て、Perlinノイズはいくつかのオクターブで計算され、最終結果に加算されます。<br /><br />結果として得られるシーケンスの性格を調整するもう一つの方法は、入力座標のスケールです。関数が無限の空間で動作するため、座標の値自体は重要ではなく、連続する座標間の距離だけが重要です(例えば、ループ内で <a href=\"#/p5/noise\">noise()</a> を使用する場合)。一般的には、座標間の差が小さいほど、得られるノイズシーケンスは滑らかになります。ほとんどのアプリケーションでは0.005-0.03のステップが最適ですが、用途によっては異なります。"
      ],
      "returns": "Number: 指定された座標でのPerlinノイズ値（0から1の間）",
      "params": {
        "x": "Number: ノイズ空間のx座標",
        "y": "Number: (オプション) ノイズ空間のy座標",
        "z": "Number: (オプション) ノイズ空間のz座標"
      }
    },
    "noiseDetail": {
      "description": [
        "Perlinノイズ関数で生成されるノイズの特性とディテールのレベルを調整します。物理学の調和に似て、ノイズはいくつかのオクターブで計算されます。低オクターブは出力信号に大きく寄与し、ノイズの全体的な強度を定義します。一方、高オクターブはノイズ配列の細かいディテールを作成します。デフォルトでは、ノイズは4つのオクターブで計算され、各オクターブは直前のオクターブのちょうど半分の寄与をしています。1つ目のオクターブの強度は50%から始まります。この減衰量は、追加の関数パラメータを追加することで変更することができます。例えば、減衰係数が0.75の場合、各オクターブは前の低オクターブの75%の影響を持つことになります（25%少なくなります）。0.0から1.0の間の任意の値が有効ですが、0.5より大きい値は、<a href=\"#/p5/noise\">noise()</a>が1.0より大きい値を返す可能性があることに注意してください。これらのパラメータを変更することで、<a href=\"#/p5/noise\">noise()</a>関数で生成される信号は、非常に特定のニーズや特性に適応させることができます。"
      ],
      "params": {
        "lod": "Number: ノイズに使用されるオクターブの数",
        "falloff": "Number: 各オクターブの減衰係数"
      }
    },
    "noiseSeed": {
      "description": [
        "<a href=\"#/p5/noise\">noise()</a>のシード値を設定します。デフォルトでは、<a href=\"#/p5/noise\">noise()</a>はプログラムが実行されるたびに異なる結果を生成します。<code>seed</code>パラメータを定数に設定すると、ソフトウェアが実行されるたびに同じ疑似乱数が返されます。"
      ],
      "params": {
        "seed": "Number: シード値"
      }
    },
    "randomSeed": {
      "description": [
        "<a href=\"#/p5/random\">random()</a>のシード値を設定します。",
        "デフォルトでは、<a href=\"#/p5/random\">random()</a>はプログラムが実行されるたびに異なる結果を生成します。シードパラメータを定数に設定すると、ソフトウェアが実行されるたびに同じ疑似乱数が返されます。"
      ],
      "params": {
        "seed": "Number: シード値"
      }
    },
    "random": {
      "description": [
        "ランダムな浮動小数点数を返します。",
        "0、1、または2の引数を取ります。",
        "引数がない場合、0から1未満のランダムな数を返します。",
        "引数が1つで、それが数値の場合、0からその数未満のランダムな数を返します。",
        "引数が1つで、それが配列の場合、その配列からランダムな要素を返します。",
        "引数が2つ与えられた場合、最初の引数から（ただし、第二引数未満まで）ランダムな数を返します。"
      ],
      "returns": "Number: ランダムな数",
      "params": {
        "min": "Number: (オプション) 下限 (含む)",
        "max": "Number: (オプション) 上限 (含まない)",
        "choices": "Array: 選択肢となる配列"
      }
    },
    "randomGaussian": {
      "description": [
        "ガウス分布、または正規分布に従うランダムな数を返します。<a href=\"#/p5/randomGaussian\">randomGaussian()</a>が理論的に返す最小値や最大値はありません。むしろ、平均値から離れた値が返される確率は非常に低く、平均値に近い数が返される確率が高いです。0、1、または2の引数を取ります。引数がない場合、平均は0で標準偏差は1です。引数が1つの場合、その引数が平均で標準偏差は1です。引数が2つの場合、最初の引数が平均で、2つ目が標準偏差です。"
      ],
      "returns": "Number: ランダムな数",
      "params": {
        "mean": "Number: (オプション) 平均",
        "sd": "Number: (オプション) 標準偏差"
      }
    },
    "acos": {
      "description": [
        "<a href=\"#/p5/cos\">cos()</a>の逆関数で、値の逆余弦を返します。この関数は、-1から1の範囲の値を想定しており、<a href=\"#/p5/angleMode\">angleMode()</a>がRADIANSの場合は0からPI (3.1415927)の範囲の値が、DEGREESの場合は0から180の範囲の値が返されます。"
      ],
      "returns": "Number: 与えられた値の逆余弦",
      "params": {
        "value": "Number: 逆余弦を返す値"
      }
    },
    "asin": {
      "description": [
        "<a href=\"#/p5/sin\">sin()</a>の逆関数で、値の逆正弦を返します。この関数は、-1から1の範囲の値を想定しており、angleModeがRADIANSの場合は-PI/2からPI/2の範囲の値が、DEGREESの場合は-90から90の範囲の値が返されます。"
      ],
      "returns": "Number: 与えられた値の逆正弦",
      "params": {
        "value": "Number: 逆正弦を返す値"
      }
    },
    "atan": {
      "description": [
        "<a href=\"#/p5/tan\">tan()</a>の逆関数で、値の逆正接を返します。この関数は、-InfinityからInfinity (exclusive)の範囲の値を想定しており、angleModeがRADIANSの場合は-PI/2からPI/2の範囲の値が、DEGREESの場合は-90から90の範囲の値が返されます。"
      ],
      "returns": "Number: 与えられた値の逆正接",
      "params": {
        "value": "Number: 逆正接を返す値"
      }
    },
    "atan2": {
      "description": [
        "指定した点から座標原点までの角度を、正のx軸から測定したラジアン単位で計算します。値は、<a href=\"#/p5/angleMode\">angleMode()</a>がRADIANSの場合はPIから-PIの範囲の浮動小数点で返され、DEGREESの場合は180から-180の範囲で返されます。<a href=\"#/p5/\">atan2()</a>関数は、ジオメトリをカーソルの位置に合わせて向きを決定するために最もよく使用されます。",
        "注: 点のy座標が最初のパラメータで、x座標が2番目のパラメータです。これは、正接を計算する構造によるものです。"
      ],
      "returns": "Number: 与えられた点の逆正接",
      "params": {
        "y": "Number: 点のy座標",
        "x": "Number: 点のx座標"
      }
    },
    "cos": {
      "description": [
        "角度の余弦を計算します。この関数は、現在の<a href=\"#/p5/angleMode\">angleMode</a>を考慮しています。値は、-1から1の範囲で返されます。"
      ],
      "returns": "Number: 角度の余弦",
      "params": {
        "angle": "Number: 角度"
      }
    },
    "sin": {
      "description": [
        "角度の正弦を計算します。この関数は、現在の<a href=\"#/p5/angleMode\">angleMode</a>を考慮しています。値は、-1から1の範囲で返されます。"
      ],
      "returns": "Number: 角度の正弦",
      "params": {
        "angle": "Number: 角度"
      }
    },
    "tan": {
      "description": [
        "角度の正接を計算します。この関数は、現在の<a href=\"#/p5/angleMode\">angleMode</a>を考慮しています。値は、すべての実数の範囲で返されます。"
      ],
      "returns": "Number: 角度の正接",
      "params": {
        "angle": "Number: 角度"
      }
    },
    "degrees": {
      "description": [
        "ラジアン単位の測定値を、対応する角度の値に変換します。ラジアンと角度は、同じことを測定する2つの方法です。円には360度があり、円には2*PIラジアンがあります。例えば、90° = PI/2 = 1.5707964。この関数は、現在の<a href=\"#/p5/angleMode\">angleMode()</a>は考慮しません。"
      ],
      "returns": "Number: 変換された角度",
      "params": {
        "radians": "Number: 度数法に変換するラジアン値"
      }
    },
    "radians": {
      "description": [
        "角度の測定値を、対応するラジアンの値に変換します。ラジアンと角度は、同じことを測定する2つの方法です。円には360度があり、円には2*PIラジアンがあります。例えば、90° = PI/2 = 1.5707964。この関数は、現在の<a href=\"#/p5/angleMode\">angleMode</a>は考慮しません。"
      ],
      "returns": "Number: 変換された角度",
      "params": {
        "degrees": "Number: ラジアンに変換する度数法の値"
      }
    },
    "angleMode": {
      "description": [
        "p5の現在のモードを指定されたモードに設定します。デフォルトのモードはRADIANSです。",
        "<a href=\"#/p5/angleMode\">angleMode()</a>を引数なしで呼び出すと、現在のangleModeが返されます。"
      ],
      "params": {
        "mode": "Constant: RADIANSまたはDEGREESのいずれか"
      }
    },
    "textAlign": {
      "description": [
        "テキストの描画に使用する現在のアライメントを設定します。2つの引数を受け入れます: horizAlign（LEFT、CENTER、またはRIGHT）とvertAlign（TOP、BOTTOM、CENTER、またはBASELINE）。",
        "horizAlignパラメータは、<a href=\"#/p5/text\">text()</a>関数のx値を参照し、vertAlignパラメータはy値を参照します。",
        "したがって、textAlign(LEFT)と記述すると、テキストの左端を<a href=\"#/p5/text\">text()</a>で指定したx値に揃えます。textAlign(RIGHT, TOP)と記述すると、テキストの右端をx値に、上端をy値に揃えます。"
      ],
      "params": {
        "horizAlign": "Constant: 水平方向のアライメント。LEFT、CENTER、またはRIGHT",
        "vertAlign": "Constant:  (オプション)垂直方向のアライメント。TOP、BOTTOM、CENTER、またはBASELINE"
      }
    },
    "textLeading": {
      "description": [
        "テキストの行間をピクセル単位で設定/取得します。この設定は、以降の<a href=\"#/p5/text\">text()</a>関数の呼び出しで使用されます。"
      ],
      "params": {
        "leading": "Number: 行間のピクセル単位のサイズ"
      }
    },
    "textSize": {
      "description": [
        "現在のフォントサイズを設定/取得します。このサイズは、以降の<a href=\"#/p5/text\">text()</a>関数の呼び出しで使用されます。フォントサイズはピクセル単位で測定されます。"
      ],
      "params": {
        "theSize": "Number: 文字のサイズ（ピクセル単位）"
      }
    },
    "textStyle": {
      "description": [
        "システムフォントのテキストスタイルをNORMAL、ITALIC、BOLD、またはBOLDITALICに設定/取得します。注意: これはCSSのスタイル設定によって上書きされる場合があります。非システムフォント（オープンタイプ、トゥルータイプなど）の場合は、代わりにスタイル付きフォントを読み込んでください。"
      ],
      "params": {
        "theStyle": "Constant: テキストのスタイル。NORMAL、ITALIC、BOLD、またはBOLDITALIC"
      }
    },
    "textWidth": {
      "description": [
        "任意の文字やテキスト文字列の幅を計算して返します。"
      ],
      "returns": "Number: 計算された幅",
      "params": {
        "theText": "String: 測定する文字の文字列"
      }
    },
    "textAscent": {
      "description": [
        "現在のフォントの上昇を、現在のサイズで返します。上昇は、ベースラインから最も高い文字までの距離（ピクセル単位）を表します。"
      ],
      "returns": "Number:"
    },
    "textDescent": {
      "description": [
        "現在のフォントの下降を、現在のサイズで返します。下降は、ベースラインから最も長い降り幅を持つ文字までの距離（ピクセル単位）を表します。"
      ],
      "returns": "Number:"
    },
    "textWrap": {
      "description": [
        "テキストボックス内でのテキスト行の折り返し方法を指定します。これには、<a href=\"#/p5/text\">text()</a>のパラメータ<code>x2</code>で指定されたテキスト領域の最大幅が必要です。",
        "WORDラップスタイルは、空白でのみ行を折り返します。空白がない単一の文字列で、キャンバスやテキスト領域の境界を超える場合は、テキストは切り捨てられず、指定された領域をオーバーフローし、キャンバスの端で消えます。",
        "CHARラップスタイルは、テキストボックス内に収まるように必要に応じて行を折り返します。",
        "WORDはデフォルトのラップスタイルであり、両方のスタイルでは、元のテキストで指定された改行（<code>\\n</code>）で行が折り返されます。テキストエリアの最大高さパラメータ（<code>y2</code>）は、両方のスタイルで折り返されたテキストにも適用され、テキストエリアに収まらないテキストの行は画面に描画されません。"
      ],
      "returns": "String: wrapStyle",
      "params": {
        "wrapStyle": "Constant: テキストの折り返しスタイル。WORDまたはCHAR"
      }
    },
    "loadFont": {
      "description": [
        "ファイルまたはURLからOpenTypeフォントファイル（.otf、.ttf）をロードし、<a href=\"#/p5.Font\">p5.Font</a>オブジェクトを返します。この関数は非同期であり、スケッチの次の行が実行される前に終了しない場合があります。",
        "フォントへのパスは、スケッチにリンクされたHTMLファイルに対して相対的である必要があります。URLや他のリモート場所からのフォントの読み込みは、ブラウザの組み込みセキュリティによりブロックされることがあります。"
      ],
      "returns": "p5.Font: <a href=\"#/p5.Font\">p5.Font</a>オブジェクト",
      "params": {
        "path": "String:  ロードするファイルまたはURLの名前",
        "callback": "関数: (オプション) <a href=\"#/p5/loadFont\">loadFont()</a>が完了した後に実行される関数",
        "onError": "関数: (オプション) エラーが発生した場合に実行される関数"
      }
    },
    "text": {
      "description": [
        "画面上にテキストを描画します。追加のパラメータで指定された位置に、最初のパラメータで指定された情報を画面上に表示します。<a href=\"#/p5/textFont\">textFont()</a>関数でフォントが設定されていない場合はデフォルトのフォントが使用され、<a href=\"#/p5/textSize\">textSize()</a>でフォントサイズが設定されていない場合はデフォルトのサイズが使用されます。テキストの色を<a href=\"#/p5/fill\">fill()</a>関数で変更します。テキストのアウトラインを<a href=\"#/p5/stroke\">stroke()</a>関数と<a href=\"#/p5/strokeWeight\">strokeWeight()</a>関数で変更します。",
        "テキストは<a href=\"#/p5/textAlign\">textAlign()</a>関数に関連して表示され、座標の左、右、および中央に描画するオプションがあります。",
        "x2およびy2パラメータは、文字列データのみで使用できる表示範囲を定義し、現在の<a href=\"#/p5/rectMode\">rectMode()</a>設定に基づいて解釈されます。指定された矩形内に完全に収まらないテキストは画面に描画されません。x2とy2が指定されていない場合、デフォルトのベースライン揃えが適用され、テキストはxおよびyから上向きに描画されます。",
        "<b>WEBGL</b>: Opentype/Truetypeフォントのみがサポートされています。上記の例のように、<a href=\"#/p5/loadFont\">loadFont()</a>メソッドを使ってフォントを読み込む必要があります。<a href=\"#/p5/stroke\">stroke()</a>は、現在webglモードでは効果がありません。WebGLモードでテキストを操作する方法については、<a href=\"https://github.com/processing/p5.js/wiki/Getting-started-with-WebGL-in-p5#text\">wiki</a>を参照してください。"
      ],
      "params": {
        "str": "String|Object|Array|Number|Boolean: 表示する英数字のシンボル",
        "x": "Number: テキストのx座標",
        "y": "Number: テキストのy座標",
        "x2": "Number: (オプション) デフォルトでは、テキストボックスの幅で、<a href=\"#/p5/rectMode\">rectMode()</a>で詳細を確認できます",
        "y2": "Number: (オプション) デフォルトでは、テキストボックスの高さで、<a href=\"#/p5/rectMode\">rectMode()</a>で詳細を確認できます"
      }
    },
    "textFont": {
      "description": [
        "<a href=\"#/p5/text\">text()</a>関数で描画される現在のフォントを設定します。textFont()が引数なしで呼び出されると、すでに設定されているフォントがあれば現在のフォントを返します。そうでなければ、デフォルトフォントの名前を文字列として返します。textFont()が使用するフォントで呼び出されると、p5オブジェクトを返します。",
        "<b>WEBGL</b>: <a href=\"#/p5/loadFont\">loadFont()</a>で読み込まれたフォントのみがサポートされています。"
      ],
      "returns": "Object: 現在のフォント / p5オブジェクト",
      "params": {
        "font": "Object|String: <a href=\"#/p5/loadFont\">loadFont()</a>で読み込まれたフォント、または<a href=\"https://mzl.la/2dOw8WD\">ウェブセーフフォント</a>（一般的にすべてのシステムで利用可能なフォント）を表す文字列",
        "size": "Number:  (オプション)使用するフォントサイズ"
      }
    },
    "append": {
      "description": [
        "配列の末尾に値を追加します。配列の長さが1つ延びます。Array.push()に対応します。"
      ],
      "returns": "Array: 追加された配列",
      "params": {
        "array": "Array: 追加する配列",
        "value": "Any: 配列に追加される値"
      }
    },
    "arrayCopy": {
      "description": [
        "配列（または配列の一部）を別の配列にコピーします。src 配列は、srcPosition で指定された位置から始まり、dstPosition で指定された位置にある dst 配列にコピーされます。コピーする要素の数は length で決定されます。値のコピーは、destination 配列内の既存の値を上書きすることに注意してください。上書きする代わりに値を追加するには、<a href=\"#/p5/concat\">concat()</a>を使用してください。",
        "2つの引数のみの単純化されたバージョンである arrayCopy(src, dst) は、同じサイズの別の配列に配列全体をコピーします。arrayCopy(src, 0, dst, 0, src.length) と同等です。",
        "この関数を使用することは、for() ループを反復処理して各要素を個別にコピーするよりも、配列データをコピーするのにはるかに効率的です。"
      ],
      "params": {
        "src": "Array: ソース配列",
        "srcPosition": "Integer: ソース配列内の開始位置",
        "dst": "Array: 送信先配列",
        "dstPosition": "Integer: 送信先配列内の開始位置",
        "length": "Integer: コピーされる配列要素の数"
      }
    },
    "concat": {
      "description": [
        "2つの配列を連結します。Array.concat()に対応します。入力配列は変更されません。"
      ],
      "returns": "Array: 連結された配列",
      "params": {
        "a": "Array: 連結する最初の配列",
        "b": "Array: 連結する2番目の配列"
      }
    },
    "reverse": {
      "description": [
        "配列の順序を逆にします。Array.reverse()に対応します。"
      ],
      "returns": "Array: 逆順に並べられたリスト",
      "params": {
        "list": "Array: 逆にする配列"
      }
    },
    "shorten": {
      "description": [
        "配列を1つの要素で減らし、短くなった配列を返します。Array.pop()に対応します。"
      ],
      "returns": "Array: 短くなった配列",
      "params": {
        "list": "Array: 短くする配列"
      }
    },
    "shuffle": {
      "description": [
        "配列の要素の順序をランダム化します。<a href='http://Bost.Ocks.org/mike/shuffle/' target=_blank>フィッシャー・イェーツ シャッフル アルゴリズム</a>を実装します。"
      ],
      "returns": "Array: シャッフルされた配列",
      "params": {
        "array": "Array: シャッフルする配列",
        "bool": "Boolean: (オプション) 渡された配列を変更"
      }
    },
    "sort": {
      "description": [
        "数字の配列を最小から最大まで並べ替えるか、単語の配列をアルファベット順に並べます。元の配列は変更されず、並べ替えられた配列が返されます。count パラメータは、並べ替える要素の数を示します。たとえば、配列に12個の要素があり、count が5に設定されている場合、配列の最初の5つの要素のみが並べ替えられます。"
      ],
      "returns": "Array: ソートされたリスト",
      "params": {
        "list": "Array: 並べ替える配列",
        "count": "Integer: (オプション) 0から始まる並べ替える要素の数"
      }
    },
    "splice": {
      "description": [
        "既存の配列に値または値の配列を挿入します。第一パラメータは変更される初期配列を指定し、第二パラメータは挿入されるデータを定義します。第三パラメータは、データを挿入する配列の位置を指定するインデックス値です。（配列のインデックス番号は0から始まることを覚えておいてください。つまり、最初の位置は0、2番目の位置は1、という具合です。）"
      ],
      "returns": "Array: リスト",
      "params": {
        "list": "Array: スプライスする配列",
        "value": "Any: スプライスされる値",
        "position": "Integer: データを挿入する配列内の位置"
      }
    },
    "subset": {
      "description": [
        "既存の配列から要素の配列を抽出します。list パラメータは、要素がコピーされる配列を定義し、start と count パラメータは抽出する要素を指定します。countが指定されていない場合、配列の最初から最後までの要素が抽出されます。start を指定するときは、最初の配列要素が 0 であることを覚えておいてください。この関数はソース配列を変更しません。"
      ],
      "returns": "Array: 抽出された要素の配列",
      "params": {
        "list": "Array: 抽出元の配列",
        "start": "Integer: 開始位置",
        "count": "Integer: (オプション) 抽出する値の数"
      }
    },
    "float": {
      "description": [
        "文字列を浮動小数点表現に変換します。文字列の内容は数値に似ていなければならず、そうでない場合は NaN（数値ではない）が返されます。例えば、float(\"1234.56\")は1234.56に評価されますが、float(\"キリン\")はNaNが返されます。",
        "値の配列が渡された場合、同じ長さの浮動小数点の配列が返されます。"
      ],
      "returns": "Number: 文字列の浮動小数点表現",
      "params": {
        "str": "String: 解析する浮動小数点の文字列"
      }
    },
    "int": {
      "description": [
        "ブール値、文字列、または浮動小数点数を整数表現に変換します。値の配列が渡された場合、同じ長さのint配列が返されます。"
      ],
      "returns": "Number: 値の整数表現",
      "params": {
        "n": "String|Boolean|Number: 解析する値",
        "radix": "Integer:  (オプション)変換する基数（デフォルト:10）",
        "ns": "Array: 解析する値"
      }
    },
    "str": {
      "description": [
        "ブール値、文字列、または数値をその文字列表現に変換します。値の配列が渡された場合、同じ長さの文字列の配列が返されます。"
      ],
      "returns": "String: 値の文字列表現",
      "params": {
        "n": "String|Boolean|Number|Array: 解析する値"
      }
    },
    "byte": {
      "description": [
        "数値、数値の文字列表現、またはブール値をそのバイト表現に変換します。バイトは-128から127までの整数のみになるため、この範囲外の値が変換されると、対応するバイト表現にラップされます。数値、文字列、ブール値の配列が渡された場合、同じ長さのバイトの配列が返されます。"
      ],
      "returns": "Number: 値のバイト表現",
      "params": {
        "n": "String|Boolean|Number: 解析する値",
        "ns": "Array: 解析する値"
      }
    },
    "char": {
      "description": [
        "数値または文字列をそれに対応する1文字の文字列表現に変換します。文字列パラメータが指定された場合、まず整数として解析され、その後1文字の文字列に変換されます。数値または文字列の値の配列が渡された場合、同じ長さの1文字の文字列の配列が返されます。"
      ],
      "returns": "String: 値の文字列表現",
      "params": {
        "n": "String|Number: 解析する値",
        "ns": "Array: 解析する値"
      }
    },
    "unchar": {
      "description": [
        "1文字の文字列を対応する整数表現に変換します。1文字の文字列の値の配列が渡された場合、同じ長さの整数の配列が返されます。"
      ],
      "returns": "Number: 値の整数表現",
      "params": {
        "n": "String: 解析する値",
        "ns": "Array: 解析する値"
      }
    },
    "hex": {
      "description": [
        "数値をそれに相当する16進数表記の文字列に変換します。2つ目のパラメータが渡された場合、16進数表記で生成する文字数を設定するために使用されます。配列が渡された場合、同じ長さの16進数表記の文字列の配列が返されます。"
      ],
      "returns": "String: 値の16進数の文字列表現",
      "params": {
        "n": "Number: 解析する値",
        "digits": "Number (Optional)",
        "ns": "Number[]: 解析する値の配列"
      }
    },
    "unhex": {
      "description": [
        "16進数表記の文字列表現を、それに相当する整数値に変換します。16進数表記の文字列の配列が渡された場合、同じ長さの整数の配列が返されます。"
      ],
      "returns": "Number: 16進数の値の整数表現",
      "params": {
        "n": "String: 解析する値",
        "ns": "Array: 解析する値"
      }
    },
    "join": {
      "description": [
        "文字列の配列を1つの文字列に結合し、separatorパラメータで使用される文字でそれぞれ区切ります。整数や浮動小数点数の配列を結合するには、まず<a href=\"#/p5/nf\">nf()</a>やnfs()を使って文字列に変換する必要があります。"
      ],
      "returns": "String: 結合された文字列",
      "params": {
        "list": "Array: 結合される文字列の配列",
        "separator": "String: 各アイテムの間に配置される文字列"
      }
    },
    "match": {
      "description": [
        "この関数は、テキストに正規表現を適用し、一致するグループ(括弧内に見つかった要素)を文字列配列として返すために使用されます。一致がない場合はnull値が返されます。正規表現でグループが指定されていない場合でも、シーケンスが一致する場合は、配列の長さ1(一致したテキストが配列の最初の要素)が返されます。",
        "関数を使用するには、まず結果がnullかどうかを確認します。結果がnullの場合、シーケンスはまったく一致しませんでした。シーケンスが一致した場合、配列が返されます。",
        "正規表現にグループ(括弧で指定されたセット)がある場合、それぞれの内容が配列に返されます。正規表現のマッチングの要素[0]は、マッチングした文字列全体を返し、マッチンググループは要素[1]から始まります(最初のグループは[1]、次は[2]、と続きます)。"
      ],
      "returns": "String[]: 見つかった文字列の配列",
      "params": {
        "str": "String: 検索対象の文字列",
        "regexp": "String: マッチングに使用される正規表現"
      }
    },
    "matchAll": {
      "description": [
        "この関数は、正規表現をテキストに適用し、一致するグループ（括弧内に見つかった要素）を二次元のString配列として返すために使用されます。一致がない場合は、null値が返されます。正規表現でグループが指定されていないが、シーケンスが一致している場合でも、二次元配列が返されますが、2次元目の長さは1です。",
        "この関数を使用するには、最初に結果がnullかどうかを確認してください。結果がnullの場合、シーケンスはまったく一致しませんでした。シーケンスが一致した場合、2次元配列が返されます。",
        "正規表現にグループ（括弧で指定されたセット）がある場合、それぞれの内容が配列に返されます。カウンタ変数iを持つループを仮定すると、正規表現の一致の要素[i][0]は、一致する文字列全体を返し、一致グループは要素[i][1]で始まります（最初のグループは[i][1]、2番目のグループは[i][2]、といった具合）。"
      ],
      "returns": "String[]: 見つかった文字列の2次元配列",
      "params": {
        "str": "String: 検索対象の文字列",
        "regexp": "String: 一致させるために使用される正規表現"
      }
    },
    "nf": {
      "description": [
        "数値を文字列にフォーマットするためのユーティリティ関数。float用のものとint用のものの2つのバージョンがあります。",
        "digits、left、rightパラメータの値は常に正の整数である必要があります。",
        "（注意）:leftとrightパラメータを使用する際には注意してください。パラメータが現在の数値の長さよりも大きい場合、0の数が前に付加されます。",
        "例えば、数値が123.2で、leftパラメータに4（123（整数部分）の長さよりも大きい3）が渡された場合、結果は0123.2になります。rightパラメータについても同様で、rightが3の場合、結果は123.200になります。"
      ],
      "returns": "String: フォーマットされた文字列",
      "params": {
        "num": "Number|String: フォーマットする数値",
        "left": "Integer|String: (オプション) 小数点の左の桁数",
        "right": "Integer|String: (オプション) 小数点の右の桁数",
        "nums": "Array: フォーマットする数値"
      }
    },
    "nfc": {
      "description": [
        "数値を文字列にフォーマットし、1000の単位を示す適切なカンマを配置するユーティリティ関数。整数用のバージョンと整数の配列用のバージョンの2つがあります。rightパラメータの値は常に正の整数である必要があります。"
      ],
      "returns": "String: フォーマットされた文字列",
      "params": {
        "num": "Number|String: フォーマットする数値",
        "right": "Integer|String: (オプション) 小数点の右の桁数",
        "nums": "Array: フォーマットする数値"
      }
    },
    "nfp": {
      "description": [
        "数値を文字列にフォーマットするユーティリティ関数。<a href=\"#/p5/nf\">nf()</a>と似ていますが、正の数の前に「+」を付け、負の数の前に「-」を付けます。float用のバージョンとint用のバージョンの2つがあります。leftとrightパラメータの値は常に正の整数である必要があります。"
      ],
      "returns": "String: フォーマットされた文字列",
      "params": {
        "num": "Number: フォーマットする数値",
        "left": "Integer: (オプション) 小数点の左の桁数",
        "right": "Integer: (オプション) 小数点の右の桁数",
        "nums": "Number[]: フォーマットする数値"
      }
    },
    "nfs": {
      "description": [
        "数値を文字列にフォーマットするユーティリティ関数。<a href=\"#/p5/nf\">nf()</a>と似ていますが、正の数の前に追加の「_」（スペース）を付けて、マイナス記号を含む負の数と整列させます。",
        "nfs()の主な使用例は、非負数の桁（位）を負数と整列させたい場合に見られます（例を参照して明確なイメージを得てください）。float用のバージョンとint用のバージョンの2つがあります。",
        "digits、left、rightパラメータの値は常に正の整数である必要があります。",
        "（重要）:キャンバス上の結果、つまり期待される整列は、使用している書体によって異なる場合があります。",
        "（注意）:leftとrightパラメータを使用する際には注意してください。パラメータが現在の数値の長さよりも大きい場合、0の数が前に付加されます。",
        "例えば、数値が123.2で、leftパラメータに4（123（整数部分）の長さよりも大きい3）が渡された場合、結果は0123.2になります。rightパラメータについても同様で、rightが3の場合、結果は123.200になります。"
      ],
      "returns": "String: フォーマットされた文字列",
      "params": {
        "num": "Number: フォーマットする数値",
        "left": "Integer: (オプション) 小数点の左の桁数",
        "right": "Integer: (オプション) 小数点の右の桁数",
        "nums": "Array: フォーマットする数値"
      }
    },
    "split": {
      "description": [
        "<a href=\"#/p5/split\">split()</a>関数は、String.split()にマップされ、区切り文字または文字列を使用してテキストを分割します。delimパラメータは、各部分の境界を示す文字または文字列を指定します。分割された各部分を含むString[]配列が返されます。",
        "<a href=\"#/p5/splitTokens\">splitTokens()</a>関数も同様に機能しますが、特定の文字やシーケンスではなく、複数の文字を使って分割します。"
      ],
      "returns": "String[]: 文字列の配列",
      "params": {
        "value": "String: 分割される文字列",
        "delim": "String: データを分割するために使用される文字列"
      }
    },
    "splitTokens": {
      "description": [
        "<a href=\"#/p5/splitTokens\">splitTokens()</a>関数は、1つまたは複数の文字区切り（トークン）で文字列を分割します。delimパラメータは、境界として使用される文字または文字列を指定します。",
        "delim文字が指定されていない場合、任意の空白文字が分割に使用されます。空白文字には、タブ（\t）、改行（\n）、キャリッジリターン（\r）、フォームフィード（\f）、およびスペースが含まれます。"
      ],
      "returns": "String[]: 文字列の配列",
      "params": {
        "value": "String: 分割される文字列",
        "delim": "String: (オプション) セパレータとして使用される個々の文字列のリスト"
      }
    },
    "trim": {
      "description": [
        "文字列の先頭と末尾から空白文字を削除します。スペース、キャリッジリターン、タブなどの標準的な空白文字に加えて、この関数はUnicodeの「nbsp」文字も削除します。"
      ],
      "returns": "String: トリミングされた文字列",
      "params": {
        "str": "String: トリミングする文字列",
        "strs": "Array: トリミングする文字列の配列"
      }
    },
    "day": {
      "description": [
        "p5.jsはコンピュータ上の時計と通信します。 <a href=\"#/p5/day\">day()</a> 関数は、現在の日付を1から31までの値として返します。"
      ],
      "returns": "Integer: 現在の日付"
    },
    "hour": {
      "description": [
        "p5.jsはコンピュータ上の時計と通信します。 <a href=\"#/p5/hour\">hour()</a> 関数は、現在の時刻を0から23までの値として返します。"
      ],
      "returns": "Integer: 現在の時刻"
    },
    "minute": {
      "description": [
        "p5.jsはコンピュータ上の時計と通信します。 <a href=\"#/p5/minute\">minute()</a> 関数は、現在の分を0から59までの値として返します。"
      ],
      "returns": "Integer: 現在の分"
    },
    "millis": {
      "description": [
        "スケッチの開始時からのミリ秒（1秒の千分の1）を返します（<code>setup()</code>が呼ばれる時点）。この情報は、イベントやアニメーションシーケンスのタイミングによく使われます。"
      ],
      "returns": "Number: スケッチ開始からのミリ秒数"
    },
    "month": {
      "description": [
        "p5.jsはコンピュータ上の時計と通信します。 <a href=\"#/p5/month\">month()</a> 関数は、現在の月を1から12までの値として返します。"
      ],
      "returns": "Integer: 現在の月"
    },
    "second": {
      "description": [
        "p5.jsはコンピュータ上の時計と通信します。 <a href=\"#/p5/second\">second()</a> 関数は、現在の秒を0から59までの値として返します。"
      ],
      "returns": "Integer: 現在の秒"
    },
    "year": {
      "description": [
        "p5.jsはコンピュータ上の時計と通信します。 <a href=\"#/p5/year\">year()</a> 関数は、現在の年を整数として返します（2014、2015、2016など）。"
      ],
      "returns": "Integer: 現在の年"
    },
    "plane": {
      "description": [
        "指定された幅と高さで平面を描画する"
      ],
      "params": {
        "width": "Number: (オプション) 平面の幅",
        "height": "Number: (オプション) 平面の高さ",
        "detailX": "Integer: (オプション) x次元の三角形の細分割数",
        "detailY": "Integer: (オプション) y次元の三角形の細分割数"
      }
    },
    "box": {
      "description": [
        "指定された幅、高さ、奥行きで箱を描画する"
      ],
      "params": {
        "width": "Number: (オプション) 箱の幅",
        "height": "Number: (オプション) 箱の高さ",
        "depth": "Number: (オプション) 箱の奥行き",
        "detailX": "Integer: (オプション) x次元の三角形の細分割数",
        "detailY": "Integer: (オプション) y次元の三角形の細分割数"
      }
    },
    "sphere": {
      "description": [
        "指定された半径の球を描画する。",
        "DetailX および detailY は、球のx次元およびy次元の細分割数を決定します。細分割が多いほど、球は滑らかに見えます。推奨される最大値は24です。24より大きい値を使用すると、警告が表示されるか、ブラウザが遅くなる可能性があります。"
      ],
      "params": {
        "radius": "Number: (オプション) 円の半径",
        "detailX": "Integer: (オプション) x次元の細分割数",
        "detailY": "Integer: (オプション) y次元の細分割数"
      }
    },
    "cylinder": {
      "description": [
        "指定された半径と高さの円柱を描画する",
        "DetailX および detailY は、円柱のx次元およびy次元の細分割数を決定します。細分割が多いほど、円柱は滑らかに見えます。detailX の推奨される最大値は24です。24より大きい値を使用すると、警告が表示されるか、ブラウザが遅くなる可能性があります。"
      ],
      "params": {
        "radius": "Number: (オプション) 表面の半径",
        "height": "Number: (オプション) 円柱の高さ",
        "detailX": "Integer: (オプション) x次元の細分割数; デフォルトは24",
        "detailY": "Integer: (オプション) y次元の細分割数; デフォルトは1",
        "bottomCap": "Boolean: (オプション) 円柱の底面を描画するかどうか",
        "topCap": "Boolean: (オプション) 円柱の上面を描画するかどうか"
      }
    },
    "cone": {
      "description": [
        "指定された半径と高さの円錐を描画する",
        "DetailX および detailY は、円錐のx次元およびy次元の細分割数を決定します。細分割が多いほど、円錐は滑らかに見えます。detailX の推奨される最大値は24です。24より大きい値を使用すると、警告が表示されるか、ブラウザが遅くなる可能性があります。"
      ],
      "params": {
        "radius": "Number: (オプション) 底面の半径",
        "height": "Number: (オプション) 円錐の高さ",
        "detailX": "Integer: (オプション) セグメント数, セグメントが多いほど、ジオメトリが滑らかになります。デフォルトは24",
        "detailY": "Integer: (オプション) セグメント数, セグメントが多いほど、ジオメトリが滑らかになります。デフォルトは1",
        "cap": "Boolean: (オプション) 円錐の底面を描画するかどうか"
      }
    },
    "ellipsoid": {
      "description": [
        "指定された半径の楕円体を描画する",
        "DetailX および detailY は、楕円体のx次元およびy次元の細分割数を決定します。細分割が多いほど、楕円体は滑らかに見えます。細分割数が150以上にならないようにしてください。それはブラウザがクラッシュする原因になるかもしれません。"
      ],
      "params": {
        "radiusx": "Number: (オプション) 楕円体のx半径",
        "radiusy": "Number: (オプション) 楕円体のy半径",
        "radiusz": "Number: (オプション) 楕円体のz半径",
        "detailX": "Integer: (オプション) セグメント数, セグメントが多いほど、ジオメトリが滑らかになります。デフォルトは24。細分割数が150以上にならないようにしてください。それはブラウザがクラッシュする原因になるかもしれません。",
        "detailY": "Integer: (オプション) セグメント数, セグメントが多いほど、ジオメトリが滑らかになります。デフォルトは16。細分割数が150以上にならないようにしてください。それはブラウザがクラッシュする原因になるかもしれません。"
      }
    },
    "torus": {
      "description": [
        "指定された半径とチューブ半径のトーラスを描画する",
        "DetailX および detailY は、トーラスのx次元およびy次元の細分割数を決定します。細分割が多いほど、トーラスは滑らかに見えます。detailX および detailY のデフォルト値および最大値はそれぞれ24および16です。それらを比較的小さな値に設定することで、トーラス以外の新しい形状を作成できます。"
      ],
      "params": {
        "radius": "Number: (オプション) リング全体の半径",
        "tubeRadius": "Number: (オプション) チューブの半径",
        "detailX": "Integer: (オプション) x次元のセグメント数, セグメントが多いほど、ジオメトリが滑らかになります。デフォルトは24",
        "detailY": "Integer: (オプション) y次元のセグメント数, セグメントが多いほど、ジオメトリが滑らかになります。デフォルトは16"
      }
    },
    "orbitControl": {
      "description": [
        "マウスやトラックパッドを使って3Dスケッチの周りを移動できます。左クリックしてドラッグすると、カメラ位置がスケッチの中心を中心に回転し、右クリックしてドラッグすると、カメラ位置が回転せずに移動します。マウスホイール（スクロール）を使うと、カメラがスケッチの中心に近づいたり遠ざかったりします。この関数は、X軸とY軸に沿ったマウス移動の感度を指定するパラメータで呼び出すことができます。パラメータなしでこの関数を呼び出すと、orbitControl(1,1)を呼び出すのと同じになります。いずれかの軸の移動方向を逆にするには、感度にマイナスの数値を入力してください。"
      ],
      "params": {
        "sensitivityX": "Number: (オプション) X軸に沿ったマウス移動の感度",
        "sensitivityY": "Number: (オプション) Y軸に沿ったマウス移動の感度",
        "sensitivityZ": "Number: (オプション) Z軸に沿ったスクロール移動の感度"
      }
    },
    "debugMode": {
      "description": [
        "debugMode()は、3D空間を視覚化するのに役立ちます。グリッドを追加してスケッチ内の「地面」の位置を示し、+X、+Y、+Z方向を示す軸アイコンを表示します。この関数は、デフォルトのグリッドと軸アイコンを作成するために引数なしで呼び出すことができますし、上記の例に従ってグリッドおよび/または軸アイコンのサイズと位置をカスタマイズするために呼び出すことができます。グリッドは、最も最近設定されたストロークの色と太さで描画されます。これらのパラメータを指定するには、draw()ループの直前にstroke()およびstrokeWeight()を追加してください。",
        "デフォルトでは、グリッドはスケッチの原点(0,0,0)を中心にXZ平面に沿って走り、軸アイコンは原点からオフセットされます。グリッドと軸アイコンの両方が、現在のキャンバスサイズに応じてサイズが調整されます。グリッドがデフォルトのカメラビューに平行して走るため、グリッドを完全に表示できるようにdebugModeとorbitControlを一緒に使用することがよく役立ちます。"
      ],
      "params": {
        "mode": "Constant: GRID または AXES",
        "gridSize": "Number: (オプション) グリッドの一辺のサイズ",
        "gridDivisions": "Number: (オプション) グリッドの分割数",
        "xOff": "Number: (オプション) 原点 (0,0,0) からの X 軸オフセット",
        "yOff": "Number: (オプション) 原点 (0,0,0) からの Y 軸オフセット",
        "zOff": "Number: (オプション) 原点 (0,0,0) からの Z 軸オフセット",
        "axesSize": "Number: (オプション) 軸アイコンのサイズ",
        "gridXOff": "Number (オプション)",
        "gridYOff": "Number (オプション)",
        "gridZOff": "Number (オプション)",
        "axesXOff": "Number (オプション)",
        "axesYOff": "Number (オプション)",
        "axesZOff": "Number (オプション)"
      }
    },
    "noDebugMode": {
      "description": [
        "3DスケッチでdebugMode()をオフにします。"
      ]
    },
    "ambientLight": {
      "description": [
        "与えられた色でアンビエントライトを作成します。",
        "アンビエントライトは特定の方向から来るものではありません。オブジェクトはすべての面から均等に照らされます。アンビエントライトは、ほとんどの場合、他の種類のライトと組み合わせて使用されます。",
        "注意: ループするプログラムでライトが持続するためには、draw() 内で（直接的または間接的に）呼び出す必要があります。setup() に配置すると、ループの最初のサイクルでのみ効果があります。"
      ],
      "params": {
        "v1": "Number: 現在のカラーレンジに対する赤または色相の値",
        "v2": "Number: 現在のカラーレンジに対する緑または彩度の値",
        "v3": "Number: 現在のカラーレンジに対する青または明るさの値",
        "alpha": "Number: (オプション) 現在のカラーレンジに対するアルファ値 (デフォルトは 0-255)",
        "gray": "Number: 白と黒の間の値を指定する数値",
        "value": "String: 色を表す文字列",
        "values": "Number[]: 色の赤、緑、青、アルファ成分を含む配列",
        "color": "p5.Color: <a href=\"#/p5.Color\">p5.Color</a> としての色"
      }
    },
    "specularColor": {
      "description": [
        "非環境光（つまり、<a href=\"#/p5/ambientLight\">ambientLight()</a>を除くすべての光）のスペキュラハイライトの色を設定します。",
        "specularColor() は、コード内でそれ以降に作成される光にのみ影響します。",
        "この関数は、<a href=\"#/p5/specularMaterial\">specularMaterial()</a>と組み合わせて使用されます。ジオメトリがspecularMaterial()を使用しない場合、この関数は効果がありません。",
        "デフォルトの色は白（255, 255, 255）で、specularColor()が明示的に呼び出されない場合に使用されます。",
        "注: specularColorは、Processing関数の<a href=\"https://processing.org/reference/lightSpecular_.html\">lightSpecular</a>と同等です。"
      ],
      "params": {
        "v1": "Number: 現在のカラーレンジに対する赤または色相の値",
        "v2": "Number: 現在のカラーレンジに対する緑または彩度の値",
        "v3": "Number: 現在のカラーレンジに対する青または明度の値",
        "gray": "Number: 白と黒の間の値を指定する数",
        "value": "String: CSS文字列としての色",
        "values": "Number[]: 赤、緑、青の成分を含む配列としての色",
        "color": "p5.Color: <a href=\"#/p5.Color\">p5.Color</a>としての色"
      }
    },
    "directionalLight": {
      "description": [
        "指定された色と方向の指向性光を作成します。",
        "指向性光は一つの方向から来ます。方向は、-1から1までの数字で指定されます。たとえば、方向を(0, -1, 0)に設定すると、ジオメトリが下から照らされます（光が真上を向いているため）。同様に、方向を(1, 0, 0)に設定すると、ジオメトリが左から照らされます（光が真右を向いているため）。",
        "指向性光には特定の発光源がないため、ジオメトリから遠ざけたり近づけたりすることはできません。",
        "一度にアクティブにできる指向性光は<strong>5</strong>つまでです。",
        "注: ループプログララム内でライトを持続させるためには、draw()内でライトを呼び出す必要があります（直接または間接的に）。setup()に配置すると、ループの最初の通過でのみ効果があります。"
      ],
      "params": {
        "v1": "Number: 現在のカラーレンジに対する赤または色相の値",
        "v2": "Number: 現在のカラーレンジに対する緑または彩度の値",
        "v3": "Number: 現在のカラーレンジに対する青または明度の値",
        "x": "Number: 方向のx成分（-1から1の範囲を含む）",
        "y": "Number: 方向のy成分（-1から1の範囲を含む）",
        "z": "Number: 方向のz成分（-1から1の範囲を含む）",
        "direction": "p5.Vector: <a href=\"#/p5.Vector\">p5.Vector</a>としての光の方向",
        "color": "p5.Color|Number[]|String: <a href=\"#/p5.Color\">p5.Color</a>、配列、またはCSS文字列としての色"
      }
    },
    "pointLight": {
      "description": [
        "指定された色と位置で点光源を作成します。",
        "点光源は、単一の点からすべての方向に光を放射します。光は特定の点（位置）から放射されるため、オブジェクトに対して遠くまたは近くに配置すると効果が異なります。",
        "一度にアクティブにできる点光源は<strong>5</strong>つまでです。",
        "注: ループプログラム内でライトを持続させるためには、draw()内でライトを呼び出す必要があります（直接または間接的に）。setup()に配置すると、ループの最初の通過でのみ効果があります。"
      ],
      "params": {
        "v1": "Number: 現在のカラーレンジに対する赤または色相の値",
        "v2": "Number: 現在のカラーレンジに対する緑または彩度の値",
        "v3": "Number: 現在のカラーレンジに対する青または明度の値",
        "x": "Number: 位置のx成分",
        "y": "Number: 位置のy成分",
        "z": "Number: 位置のz成分",
        "position": "p5.Vector: <a href=\"#/p5.Vector\">p5.Vector</a>としての光の位置",
        "color": "p5.Color|Number[]|String: <a href=\"#/p5.Color\">p5.Color</a>、配列、またはCSS文字列としての色"
      }
    },
    "lights": {
      "description": [
        "シーンにアンビエントライトとディレクショナルライトを配置します。ライトは、ambientLight(128, 128, 128)およびdirectionalLight(128, 128, 128, 0, 0, -1)に設定されます。",
        "注: ループプログラム内でライトを持続させるためには、draw()内でライトを呼び出す必要があります（直接または間接的に）。setup()に配置すると、ループの最初の通過でのみ効果があります。"
      ]
    },
    "lightFalloff": {
      "description": [
        "<a href=\"#/p5/pointLight\">pointLight()</a>および<a href=\"#/p5/spotLight\">spotLight()</a>の減衰率を設定します。",
        "lightFalloff()は、コード内でそれ以降に作成されたライトにのみ影響します。",
        "<code>constant</code>、<code>linear</code>、および<code>quadratic</code>パラメータは、次のように減衰を計算するために使用されます:",
        "d = 光の位置から頂点位置までの距離",
        "減衰 = 1 / (CONSTANT + d * LINEAR + (d * d) * QUADRATIC)"
      ],
      "params": {
        "constant": "Number: 減衰を決定するCONSTANT値",
        "linear": "Number: 減衰を決定するLINEAR値",
        "quadratic": "Number: 減衰を決定するQUADRATIC値"
      }
    },
    "spotLight": {
      "description": [
        "指定された色、位置、光の方向、角度、および集中度でスポットライトを作成します。",
        "<a href=\"#/p5/pointLight\">pointLight()</a>と同様に、spotLight()は特定の点（位置）から光を放射します。オブジェクトに対して遠くまたは近くに配置すると効果が異なります。",
        "ただし、pointLight()とは異なり、光は<strong>一方向</strong>に沿って円錐状に放射されます。円錐の形状は、<code>angle</code>および<code>concentration</code>パラメータを使用して制御できます。",
        "<code>angle</code>パラメータは、円錐の半径を決定するために使用されます。そして、<code>concentration</code>パラメータは、円錐の中心に向かって光を集めるために使用されます",
        "両方のパラメータはオプションですが、<code>concentration</code>を指定する場合は、<code>angle</code>も指定する必要があります。最小集中値は1です。一度に最大<strong>5</strong>つのスポットライトがアクティブにできます。",
        "注意: ループプログラム内でライトを持続させるためには、draw()内でライトを呼び出す必要があります（直接または間接的に）。setup()に配置すると、ループの最初の通過でのみ効果があります。"
      ],
      "params": {
        "v1": "Number: 現在の色範囲に対する赤または色相値",
        "v2": "Number: 現在の色範囲に対する緑または彩度値",
        "v3": "Number: 現在の色範囲に対する青または明るさ値",
        "x": "Number: 位置のx成分",
        "y": "Number: 位置のy成分",
        "z": "Number: 位置のz成分",
        "rx": "Number: 光の方向のx成分（-1から1までの範囲を含む）",
        "ry": "Number: 光の方向のy成分（-1から1までの範囲を含む）",
        "rz": "Number: 光の方向のz成分（-1から1までの範囲を含む）",
        "angle": "Number:  (オプション)円錐の角度。デフォルトはPI/3",
        "concentration": "Number:  (オプション)円錐の集中度。デフォルトは100",
        "color": "p5.Color|Number[]|String: <a href=\"#/p5.Color\">p5.Color</a>としての色、配列として、またはCSS文字列として",
        "position": "p5.Vector: <a href=\"#/p5.Vector\">p5.Vector</a>としてのライトの位置",
        "direction": "p5.Vector: <a href=\"#/p5.Vector\">p5.Vector</a>としてのライトの方向"
      }
    },
    "noLights": {
      "description": [
        "スケッチ内のすべての光を取り除きます。",
        "その後のジオメトリは、新しい光が照明関数(<a href=\"#/p5/lights\">lights()</a>、<a href=\"#/p5/ambientLight\">ambientLight()</a>、<a href=\"#/p5/directionalLight\">directionalLight()</a>、<a href=\"#/p5/pointLight\">pointLight()</a>、<a href=\"#/p5/spotLight\">spotLight()</a> など)で作成されるまで、照明なしでレンダリングされます。"
      ]
    },
    "loadModel": {
      "description": [
        "OBJまたはSTLファイルから3Dモデルを読み込みます。",
        "<a href=\"#/p5/loadModel\">loadModel()</a>は、<a href=\"#/p5/preload\">preload()</a>の中に配置する必要があります。これにより、モデルが他のコードが実行される前に完全に読み込まれます。",
        "OBJおよびSTL形式の制約の1つは、スケールの組み込み概念がないことです。これは、異なるプログラムからエクスポートされたモデルが非常に異なるサイズになる可能性があることを意味します。モデルが表示されない場合は、正規化パラメータをtrueに設定して<a href=\"#/p5/loadModel\">loadModel()</a>を呼び出してみてください。これにより、モデルがp5に適したスケールにリサイズされます。<a href=\"#/p5/scale\">scale()</a>関数を使ってモデルの最終サイズにさらに変更を加えることもできます。",
        "また、カラー付きSTLファイルのサポートはありません。カラー付きのSTLファイルは、カラープロパティなしでレンダリングされます。"
      ],
      "returns": "p5.Geometry: <a href=\"#/p5.Geometry\">p5.Geometry</a>オブジェクト",
      "params": {
        "path": "String: 読み込むモデルのパス",
        "normalize": "Boolean: true の場合、読み込み時にモデルを標準化されたサイズにスケールします",
        "successCallback": "function(p5.Geometry): (オプション) モデルが読み込まれた後に呼び出される関数。3Dモデルオブジェクトが渡されます。",
        "failureCallback": "Function(Event): (オプション) モデルの読み込みに失敗した場合にイベントエラーと共に呼び出される関数。",
        "fileType": "String: (オプション) モデルのファイル拡張子（<code>.stl</code>, <code>.obj</code>）"
      }
    },
    "model": {
      "description": [
        "3Dモデルを画面にレンダリングします。"
      ],
      "params": {
        "model": "p5.Geometry: レンダリングされるロード済みの3Dモデル"
      }
    },
    "loadShader": {
      "description": [
        "提供された頂点シェーダとフラグメントシェーダファイルから新しい<a href=\"#/p5.Shader\">p5.Shader</a>オブジェクトを作成します。",
        "シェーダファイルはバックグラウンドで非同期にロードされるため、このメソッドは<a href=\"#/p5/preload\">preload()</a>で使用する必要があります。",
        "注意:シェーダはWEBGLモードでのみ使用できます。"
      ],
      "returns": "p5.Shader: 提供された頂点シェーダとフラグメントシェーダファイルから作成されたシェーダオブジェクト。",
      "params": {
        "vertFilename": "String: 頂点シェーダソースコードが含まれるファイルへのパス",
        "fragFilename": "String: フラグメントシェーダソースコードが含まれるファイルへのパス",
        "callback": "Function: (オプション) loadShaderが完了した後に実行されるコールバック。成功時には、p5.Shaderオブジェクトが最初の引数として渡されます。",
        "errorCallback": "Function: (オプション) loadShader内でエラーが発生した場合に実行されるコールバック。エラー発生時には、エラーが最初の引数として渡されます。"
      }
    },
    "createShader": {
      "description": [
        "提供された頂点シェーダとフラグメントシェーダのコードから新しい<a href=\"#/p5.Shader\">p5.Shader</a>オブジェクトを作成します。",
        "注意:シェーダはWEBGLモードでのみ使用できます。"
      ],
      "returns": "p5.Shader: 提供された頂点シェーダとフラグメントシェーダから作成されたシェーダオブジェクト。",
      "params": {
        "vertSrc": "String: 頂点シェーダのソースコード",
        "fragSrc": "String: フラグメントシェーダのソースコード"
      }
    },
    "shader": {
      "description": [
        "次に描画される図形に使用される<a href=\"#/p5.Shader\">p5.Shader</a>オブジェクトを設定します。",
        "カスタムシェーダは、<a href=\"#/p5/createShader\">createShader()</a>および<a href=\"#/p5/loadShader\">loadShader()</a>関数を使用して作成できます。",
        "デフォルトのシェーダを復元するには、<a href=\"#/p5/resetShader\">resetShader()</a>を使用してください。",
        "注意:シェーダはWEBGLモードでのみ使用できます。"
      ],
      "params": {
        "s": "p5.Shader: 図形の描画に使用する<a href=\"#/p5.Shader\">p5.Shader</a>オブジェクト。"
      }
    },
    "resetShader": {
      "description": [
        "デフォルトのシェーダを復元します。resetShader()の後に実行されるコードは、<a href=\"#/p5/shader\">shader()</a>で設定されたシェーダには影響されません。"
      ]
    },
    "texture": {
      "description": [
        "これ以降に描画される図形に使用されるテクスチャを設定します。",
        "テクスチャは、3Dジオメトリを覆う「皮膚」のようなものです。現在サポートされているテクスチャは画像、ビデオ、オフスクリーンレンダリングです。",
        "<a href=\"#/p5/beginShape\">beginShape()</a>で作成されたジオメトリにテクスチャを適用するには、<a href=\"#/p5/vertex\">vertex()</a>でuv座標を指定する必要があります。",
        "なお、texture()はWEBGLモードでのみ使用できます。",
        "この<a href=\"https://p5js.org/examples/3d-materials.html\">例</a>でさらに多くの素材を見ることができます。"
      ],
      "params": {
        "tex": "p5.Image|p5.MediaElement|p5.Graphics|p5.Texture: テクスチャとして使用する画像"
      }
    },
    "textureMode": {
      "description": [
        "テクスチャマッピングの座標空間を設定します。デフォルトモードはIMAGEで、画像の実際の座標を指します。NORMALは、0から1の範囲の正規化された値の空間を指します。",
        "IMAGEでは、画像が100×200ピクセルの場合、画像をクワッド全体のサイズにマッピングするには、点(0,0) (100, 0) (100,200) (0,200)が必要です。NORMALでは、同じマッピングが(0,0) (1,0) (1,1) (0,1)になります。"
      ],
      "params": {
        "mode": "Constant: IMAGEまたはNORMALのいずれか"
      }
    },
    "textureWrap": {
      "description": [
        "グローバルなテクスチャラッピングモードを設定します。これにより、uvが0から1の範囲外になった場合のテクスチャの動作が制御されます。選択肢はCLAMP、REPEAT、MIRRORの3つです。",
        "CLAMPは、テクスチャの端にあるピクセルが境界まで伸びるようになります。REPEATは、テクスチャが境界に達するまで繰り返しタイルされます。MIRRORは、REPEATと同様に動作しますが、新しいタイルごとにテクスチャが反転します。",
        "REPEATとMIRRORは、テクスチャのサイズが2の累乗である場合（128、256、512、1024など）にのみ利用可能です。",
        "このメソッドは、次のtextureWrap()呼び出しが行われるまで、スケッチ内のすべてのテクスチャに影響します。",
        "引数が1つだけ指定された場合、水平軸と垂直軸の両方に適用されます。"
      ],
      "params": {
        "wrapX": "Constant: CLAMP、REPEAT、またはMIRRORのいずれか",
        "wrapY": "Constant: (オプション) CLAMP、REPEAT、またはMIRRORのいずれか"
      }
    },
    "normalMaterial": {
      "description": [
        "現在の素材を通常の素材として設定します。",
        "通常の素材は光の影響を受けません。デバッグ時にプレースホルダー素材としてよく使われます。",
        "X軸に面した面は赤くなり、Y軸に面した面は緑になり、Z軸に面した面は青になります。",
        "他の素材は、この<a href=\"https://p5js.org/examples/3d-materials.html\">例</a>で見ることができます。"
      ]
    },
    "ambientMaterial": {
      "description": [
        "素材のアンビエントカラーを設定します。",
        "ambientMaterial()カラーは、物体が<strong>どのような</strong>照明下でも反射する色です。",
        "色が黄色(255, 255, 0)のambientMaterial()を考えてみましょう。光が白色(255, 255, 255)を放つ場合、物体は赤と緑の成分を反射するので、黄色に見えます。光が赤色(255, 0, 0)を放つ場合、物体は光の赤色成分を反射するので、赤色に見えます。光が青色(0, 0, 255)を放つ場合、物体は光の成分を反射できないので、黒色に見えます。",
        "他の素材は、この<a href=\"https://p5js.org/examples/3d-materials.html\">例</a>で見ることができます。"
      ],
      "params": {
        "v1": "Number: 現在のカラーレンジに対する赤または色相値",
        "v2": "Number: 現在のカラーレンジに対する緑または彩度値",
        "v3": "Number: 現在のカラーレンジに対する青または明度値",
        "gray": "Number: 白と黒の間の値を指定する数値",
        "color": "p5.Color|Number[]|String: <a href=\"#/p5.Color\">p5.Color</a>としての色、配列としての色、またはCSS文字列としての色"
      }
    },
    "emissiveMaterial": {
      "description": [
        "素材のエミッシブカラーを設定します。",
        "エミッシブ素材は、照明に関係なくエミッシブカラーを最大強度で表示します。これにより、オブジェクトが光っているように見える効果が得られます。",
        "ただし、「エミッシブ」という言葉は、素材が周囲のオブジェクトに影響を与える光を実際に放射しないという意味では誤解を招くものです。",
        "他の素材は、この<a href=\"https://p5js.org/examples/3d-materials.html\">例</a>で見ることができます。"
      ],
      "params": {
        "v1": "Number: 現在のカラーレンジに対する赤または色相値",
        "v2": "Number: 現在のカラーレンジに対する緑または彩度値",
        "v3": "Number: 現在のカラーレンジに対する青または明度値",
        "alpha": "Number: (オプション) 現在のカラーレンジに対するアルファ値 (デフォルトは 0-255)",
        "gray": "Number: 白と黒の間の値を指定する数値",
        "color": "p5.Color|Number[]|String: <a href=\"#/p5.Color\">p5.Color</a>としての色、配列としての色、またはCSS文字列としての色"
      }
    },
    "specularMaterial": {
      "description": [
        "素材のスペキュラーカラーを設定します。",
        "スペキュラー素材は反射性（光沢）があります。<a href=\"#/p5/shininess\">shininess()</a>関数で光沢度を調整できます。",
        "<a href=\"#/p5/ambientMaterial\">ambientMaterial()</a>と同様に、specularMaterial()カラーは、物体が<a href=\"#/p5/ambientLight\">ambientLight()</a>下で反射する色です。ただし、ambientMaterial()とは異なり、他のすべてのタイプの光源（<a href=\"#/p5/directionalLight\">directionalLight()</a>、<a href=\"#/p5/pointLight\">pointLight()</a>、<a href=\"#/p5/spotLight\">spotLight()</a>）に対して、スペキュラー素材は<strong>光源の色</strong>を反射します。これが「光沢」のある外観を与える理由です。",
        "他の素材は、この<a href=\"https://p5js.org/examples/3d-materials.html\">例</a>で見ることができます。"
      ],
      "params": {
        "gray": "Number: 白と黒の間の値を指定する数値。",
        "alpha": "Number: (オプション) 現在のカラーレンジに対するアルファ値 (デフォルトは 0-255)",
        "v1": "Number: 現在のカラーレンジに対する赤または色相値",
        "v2": "Number: 現在のカラーレンジに対する緑または彩度値",
        "v3": "Number: 現在のカラーレンジに対する青または明度値",
        "color": "p5.Color|Number[]|String: <a href=\"#/p5.Color\">p5.Color</a>としての色、配列としての色、またはCSS文字列としての色"
      }
    },
    "shininess": {
      "description": [
        "<a href=\"#/p5/specularMaterial\">specularMaterial()</a>の光沢度（「光沢」）を設定します。",
        "デフォルト値および最小値は1です。"
      ],
      "params": {
        "shine": "Number: 光沢度"
      }
    },
    "camera": {
      "description": [
        "3Dスケッチ内の現在のカメラの位置を設定します。この関数のパラメータは、カメラの位置、スケッチの中心（カメラが指している場所）、および上方向（カメラの向き）を定義します。",
        "この関数はカメラの動きをシミュレートし、オブジェクトをさまざまな角度から見ることができます。覚えておいてください、オブジェクト自体を移動させるのではなく、カメラを移動させます。例えば、centerXの値が正であり、カメラがスケッチの右側に回転する場合、オブジェクトは左に移動しているように見えます。",
        "この<a href = \"https://www.openprocessing.org/sketch/740258\">例</a>を参照して、カメラの位置を確認してください。",
        "パラメータが指定されていない場合、デフォルトで次のようになります: camera(0, 0, (height/2) / tan(PI/6), 0, 0, 0, 0, 1, 0)"
      ],
      "params": {
        "x": "Number: (オプション) x軸上のカメラ位置の値",
        "y": "Number: (オプション) y軸上のカメラ位置の値",
        "z": "Number: (オプション) z軸上のカメラ位置の値",
        "centerX": "Number: (オプション) スケッチの中心を表すx座標",
        "centerY": "Number: (オプション) スケッチの中心を表すy座標",
        "centerZ": "Number: (オプション) スケッチの中心を表すz座標",
        "upX": "Number: (オプション) カメラからの'上'の方向のx成分",
        "upY": "Number: (オプション) カメラからの'上'の方向のy成分",
        "upZ": "Number: (オプション) カメラからの'上'の方向のz成分"
      }
    },
    "perspective": {
      "description": [
        "3Dスケッチの現在のカメラに対して透視投影を設定します。この投影は、縮尺を通じて奥行きを表現します。カメラに近いオブジェクトは実際のサイズで表示され、カメラから離れたオブジェクトは小さく表示されます。",
        "この関数のパラメータは、垂直視野角、アスペクト比（通常は幅/高さ）、および、近距離および遠距離クリッピング平面を通じて、視錐台（カメラによってオブジェクトが見られる切り取られたピラミッド）を定義します。",
        "パラメータが指定されていない場合、デフォルトで次のようになります: perspective(PI/3, width/height, eyeZ/10, eyeZ*10)。ここで、eyeZは((height/2) / tan(PI/6))と等しいです。"
      ],
      "params": {
        "fovy": "Number: (オプション) カメラの視錐台の垂直視野角、ビューの下から上まで、<a href=\"#/p5/angleMode\">angleMode</a>の単位で",
        "aspect": "Number: (オプション) カメラの視錐台のアスペクト比",
        "near": "Number: (オプション) 視錐台の近距離平面の長さ",
        "far": "Number: (オプション) 視錐台の遠距離平面の長さ"
      }
    },
    "ortho": {
      "description": [
        "3Dスケッチの現在のカメラに対して正射影を設定し、オブジェクトが見られる箱型の視錐台を定義します。この投影では、同じ次元のすべてのオブジェクトは、カメラに近いか遠いかに関係なく、同じサイズで表示されます。",
        "この関数のパラメータは、左と右が最小および最大のx値、上と下が最小および最大のy値、および近くと遠くが最小および最大のz値である視錐台を指定します。",
        "パラメータが指定されていない場合、デフォルトで次のようになります: ortho(-width/2, width/2, -height/2, height/2)。"
      ],
      "params": {
        "left": "Number: (オプション) カメラの視錐台の左平面",
        "right": "Number: (オプション) カメラの視錐台の右平面",
        "bottom": "Number: (オプション) カメラの視錐台の下平面",
        "top": "Number: (オプション) カメラの視錐台の上平面",
        "near": "Number: (オプション) カメラの視錐台の近平面",
        "far": "Number: (オプション) カメラの視錐台の遠平面"
      }
    },
    "frustum": {
      "description": [
        "現在のカメラの視錐台を、パラメータで定義されたものに設定します。",
        "視錐台とは、切り落とされた頂点のあるピラミッドの形状をした図形です。視点が想定されるピラミッドの頂点にあるとき、視錐台の6つの面は、3Dビューをレンダリングするときのクリッピング面として機能します。つまり、クリッピング面の内側にある図形は見え、それ以外のものは見えません。",
        "視錐台を設定することで、レンダリングされるシーンの透視図法が変更されます。多くの場合、<a href=\"https://p5js.org/reference/#/p5/perspective\">perspective()</a> を使用することで、より簡単に実現できます。",
        "パラメータが指定されなかった場合、次のデフォルトが使用されます: frustum(-width/2, width/2, -height/2, height/2, 0, max(width, height))。"
      ],
      "params": {
        "left": "Number: (オプション) カメラの視錐台の左面",
        "right": "Number: (オプション) カメラの視錐台の右面",
        "bottom": "Number: (オプション) カメラの視錐台の底面",
        "top": "Number: (オプション) カメラの視錐台の上面",
        "near": "Number: (オプション) カメラの視錐台の近面",
        "far": "Number: (オプション) カメラの視錐台の遠面"
      }
    },
    "createCamera": {
      "description": [
        "新しい<a href=\"#/p5.Camera\">p5.Camera</a>オブジェクトを作成し、現在の(アクティブな)カメラとして設定します。",
        "新しいカメラは、デフォルトの位置( <a href=\"#/p5.Camera/camera\">camera()</a>を参照)とデフォルトの遠近法プロジェクション( <a href=\"#/p5.Camera/perspective\">perspective()</a>を参照)で初期化されます。プロパティは<a href=\"#/p5.Camera\">p5.Camera</a>のメソッドで制御できます。",
        "注:すべての3Dスケッチは、デフォルトのカメラで初期化されます。このカメラは、シーン内で唯一のカメラである場合、グローバルなメソッド<a href=\"#/p5/camera\">camera()</a>、<a href=\"#/p5/perspective\">perspective()</a>、<a href=\"#/p5/ortho\">ortho()</a>、および<a href=\"#/p5/frustum\">frustum()</a>で制御できます。"
      ],
      "returns": "p5.Camera: 新しく作成されたカメラオブジェクト。"
    },
    "setCamera": {
      "description": [
        "3Dスケッチの現在の(アクティブな)カメラを設定します。複数のカメラ間を切り替えることができます。"
      ],
      "params": {
        "cam": "p5.Camera: p5.Cameraオブジェクト"
      }
    },
    "setAttributes": {
      "description": [
        "WebGL Drawing contextの属性を設定します。これは、WebGLレンダラーの表示とパフォーマンスを調整する方法です。",
        "注意: WebGLキャンバスが作成された後に呼び出されると、描画コンテキストが再初期化されます。",
        "パラメータとしてオブジェクトが渡された場合、オブジェクトで宣言されていない属性はすべてデフォルト値に設定されます。",
        "利用可能な属性は以下の通りです: alpha - キャンバスにアルファバッファが含まれているかどうかを示します。デフォルトはtrueです。",
        "depth - 描画バッファに少なくとも16ビットの深度バッファがあるかどうかを示します。デフォルトはtrueです。",
        "stencil - 描画バッファに少なくとも8ビットのステンシルバッファがあるかどうかを示します。",
        "antialias - アンチエイリアシングを実行するかどうかを示します。デフォルトはfalse（Safariではtrue）です。",
        "premultipliedAlpha - ページコンポジターが、描画バッファにプレ乗算アルファの色が含まれていると仮定することを示します。デフォルトはtrueです。",
        "preserveDrawingBuffer - trueの場合、バッファはクリアされず、著者によってクリアまたは上書きされるまで値が保持されます（p5は自動的にdrawループでクリアします）。デフォルトはtrueです。",
        "perPixelLighting - trueの場合、ライティングシェーダーでピクセルごとのライティングが使用され、そうでない場合は頂点ごとのライティングが使用されます。デフォルトはtrueです。"
      ],
      "params": {
        "key": "String: 属性名",
        "value": "Boolean: 属性の新しい値",
        "obj": "Object: キーと値のペアを持つオブジェクト"
      }
    },
    "getAudioContext": {
      "description": [
        "このスケッチのためのAudioContextを返します。 <a target='_blank' href= 'http://webaudio.github.io/web-audio-api/'>Web Audio API</a> について深く掘り下げたいユーザーにとって役立ちます。",
        "一部のブラウザは、touchStarted（以下の例）などのユーザージェスチャーでstartAudioContextを実行する必要があります。"
      ],
      "returns": "Object: このスケッチのためのAudioContext"
    },
    "userStartAudio": {
      "description": [
        "ユーザーにオーディオの開始制御を与えることは良い慣習だけでなく、iOSや<a href=\"https://goo.gl/7K7WLu\" title=\"Google Chrome's autoplay policy\">Google Chrome</a>などの多くのWebブラウザーによって強制されるポリシーです。これらのブラウザ固有のポリシーでは、Web Audio APIの<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/AudioContext\" title=\"Audio Context @ MDN\">Audio Context</a>は一時停止状態で作成されます。",
        "これらの場合、ユーザーが操作イベント（例: <code>mousePressed()</code>）を明示的に再開するか、オーディオノードを開始するまで、サウンドは再生されません。これは、<code>p5.Oscillator</code>の <code>start()</code>、<code>p5.SoundFile</code>の<code>play()</code>、または<code>userStartAudio()</code>を呼び出すことで達成できます。",
        "<code>userStartAudio()</code>は、ユーザージェスチャーでAudioContextを開始します。デフォルトの動作では、どのmouseUpまたはtouchEndイベントでもオーディオが有効になります。下の例のように、<code>mousePressed()</code>などの特定のインタラクション関数に配置することもできます。この方法では、Yotam Mannによる<a href=\"https://github.com/tambien/StartAudioContext\">StartAudioContext </a>ライブラリ（MITライセンス、2016年）を使用します。"
      ],
      "returns": "Promise: AudioContextの状態が「実行中」になったときに解決されるPromiseを返します",
      "params": {
        "elements": "Element|Array:  (オプション)この引数はElement、Selector String、NodeList、p5.Element、jQuery Element、またはそれらのいずれかの配列である必要があります。",
        "callback": "Function:  (オプション)AudioContextが開始されたときに呼び出すコールバック関数"
      }
    },
    "getOutputVolume": {
      "description": [
        "このスケッチの音の出力ボリュームを表す数値を返します。"
      ],
      "returns": "Number: このスケッチの音の出力ボリューム。0.0（無音）から1.0の範囲内である必要があります。"
    },
    "outputVolume": {
      "description": [
        "このスケッチ内のすべての音の出力をスケール化し、0.0（無音）から1.0（最大音量）の範囲で表します。デジタル音の最大振幅は1.0なので、1.0以上を掛けるとデジタル歪みが発生する可能性があります。フェードするには、<code>rampTime</code>パラメータを指定します。より複雑なフェードには、Envelopeクラスを使用してください。",
        "また、オシレータなどの信号源を渡すことで、オーディオ信号による振幅変調を行うことができます。",
        "<b>動作の概要</b>: p5.soundモジュールをロードすると、p5soundの単一のインスタンスが作成されます。このモジュール内のすべての音オブジェクトは、コンピューターの出力に到達する前に、p5soundに出力されます。したがって、p5soundの振幅を変更すると、このモジュール内のすべての音に影響します。",
        "値を指定しない場合は、Web Audio API Gain Nodeが返されます。"
      ],
      "params": {
        "volume": "Number|Object: 0.0から1.0の間のボリューム（振幅）または変調信号/オシレータ",
        "rampTime": "Number:  (オプション)t秒間フェードします。",
        "timeFromNow": "Number:  (オプション)このイベントを、t秒後にスケジュールします。"
      }
    },
    "soundOut": {
      "description": [
        "<code>p5.soundOut</code> は p5.sound の最終出力バスです。このウィンドウの Web Audio コンテキストの出力先に出力します。それには Web Audio API ノードが含まれており、<code>.limiter</code> のためのダイナミクスコンプレッサと <code>.input</code> と <code>.output</code> のためのゲインノードが含まれています。"
      ]
    },
    "sampleRate": {
      "description": [
        "全てのサウンドオブジェクトのサンプルレートを表す、1秒あたりのサンプル数を返します。これはオペレーティングシステムのサウンドカードのサンプリングレートによって決定され、現在は変更できません。通常、44100 であり、人間の聴覚範囲の2倍です。"
      ],
      "returns": "Number: サンプルレート (1秒あたりのサンプル数)"
    },
    "freqToMidi": {
      "description": [
        "指定された周波数に最も近い MIDI ノート値を返します。"
      ],
      "returns": "Number: MIDI ノート値",
      "params": {
        "frequency": "Number: 周波数。たとえば、中央ドの上の「A」は440Hzです。"
      }
    },
    "midiToFreq": {
      "description": [
        "指定された MIDI ノート値の周波数値を返します。General MIDI では、ノートを整数で扱います。中央ドは60、C#は61、Dは62などです。オシレーターで音階を生成するのに役立ちます。"
      ],
      "returns": "Number: 指定された MIDI ノートの周波数値",
      "params": {
        "midiNote": "Number: MIDI ノート番号"
      }
    },
    "soundFormats": {
      "description": [
        "SoundFileフォーマットをリストアップし、クライアントのWebブラウザに適合するフォーマットを探します。LoadSoundはこれらの拡張子を検索し、変換が必要な場合は<a href=\"http://media.io/\">こちら</a>の無料のオンラインファイルコンバーターを使用してください。"
      ],
      "params": {
        "formats": "String: (オプション) 例: 'mp3', 'wav', 'ogg'"
      }
    },
    "saveSound": {
      "description": [
        "p5.SoundFileを.wavファイルとして保存します。ブラウザはユーザーにファイルをダウンロードするように促します。サーバーにオーディオをアップロードする場合は、<a href=\"/docs/reference/#/p5.SoundFile/saveBlob\"><code>p5.SoundFile.saveBlob</code></a>を使用してください。"
      ],
      "params": {
        "soundFile": "p5.SoundFile: 保存したいp5.SoundFile",
        "fileName": "String: .wavファイルの名前。"
      }
    },
    "loadSound": {
      "description": [
        "指定されたパスから新しいp5.SoundFileを返します。preload()中に呼び出された場合、p5.SoundFileはsetup()およびdraw()の実行前に再生準備ができます。preload()の外で呼び出された場合、p5.SoundFileはすぐに再生準備ができないため、loadSoundにはコールバック関数が第二引数として渡されます。外部ファイルをロードする場合は、<a href=\"https://github.com/processing/p5.js/wiki/Local-server\">local server</a>を使用することをお勧めします。"
      ],
      "returns": "SoundFile: p5.SoundFileを返します。",
      "params": {
        "path": "String|Array: 音声ファイルへのパス、または複数の形式の音声ファイルへのパスを含む配列、例: ['sound.ogg', 'sound.mp3']。また、HTML5 File APIまたはp5.Fileからのオブジェクトも受け入れます。",
        "successCallback": "Function: (オプション) ファイルの読み込みが完了したときに呼び出す関数の名前",
        "errorCallback": "Function: (オプション) ファイルの読み込み中にエラーが発生した場合に呼び出す関数の名前。",
        "whileLoading": "Function: (オプション) ファイルの読み込み中に呼び出す関数の名前。現在読み込まれているパーセンテージ（0.0〜1.0）が渡されます。"
      }
    },
    "createConvolver": {
      "description": [
        "p5.Convolverを作成します。インパルス応答を生成するために使用される音声ファイルへのパスを受け入れます。"
      ],
      "returns": "p5.Convolver:",
      "params": {
        "path": "String: 音声ファイルへのパス",
        "callback": "Function: (オプション) 読み込みが成功した場合に呼び出す関数。オブジェクトは、コールバック関数に引数として渡されます。",
        "errorCallback": "Function: (オプション) 読み込みに失敗した場合に呼び出す関数。カスタムエラーがコールバック関数の引数として渡されます。"
      }
    },
    "setBPM": {
      "description": [
        "すべてのp5.Partsのグローバルテンポ（1分あたりの拍数）を設定します。このメソッドは、すべてのアクティブなp5.Partsに影響を与えます。"
      ],
      "params": {
        "BPM": "Number: 拍数(分あたり)",
        "rampTime": "Number: 現在からの秒数"
      }
    }
  },
  "p5.Color": {
    "description": [
      "各色は、その構築時に適用されたカラーモードとレベル最大値を格納します。これらは、入力引数の解釈（構築時およびそのインスタンスの後で）および出力の書式設定（<a href=\"#/p5/saturation\">saturation()</a> の要求時など）に使用されます。",
      "内部的に、理想的なRGBA値を表す浮動小数点配列を、0から1に正規化して格納しています。これから、最も近いスクリーンカラー（0から255のRGBAレベル）を計算し、レンダラーに公開します。",
      "また、計算された様々な表現の正規化された浮動小数点カラーのコンポーネントをキャッシュしています。これは、既に実行された変換を繰り返さないようにするために行われます。"
    ],
    "toString": {
      "description": [
        "このメソッドは、カラーを文字列としてフォーマットして返します。これはデバッグに役立つことがあります。また、p5.jsを他のライブラリと一緒に使用する場合にも役立ちます。"
      ],
      "returns": "String: フォーマットされた文字列",
      "params": {
        "format": "String: (オプション)カラー文字列の書式設定方法。空白にすると、rgba(r、g、b、a)として文字列をフォーマットします。 '#rgb'、 '#rgba'、 '#rrggbb'、および'#rrggbbaa'は16進数のカラーコードとしてフォーマットされます。 'rgb'、 'hsb'、および'hsl'は、指定されたカラーモードでフォーマットされたカラーを返します。 'rgba'、 'hsba'、および'hsla'は、上記と同じですがアルファチャネルが含まれます。 'rgb%'、 'hsb%'、 'hsl%'、 'rgba%'、 'hsba%'、および'hsla%'はパーセントとしてフォーマットされます。"
      }
    },
    "setRed": {
      "description": [
        "setRedメソッドは、カラーの赤の成分を設定します。範囲は、カラーモードによって異なります。デフォルトのRGBモードでは、0から255の範囲です。"
      ],
      "params": {
        "red": "Number: 新しい赤の値"
      }
    },
    "setGreen": {
      "description": [
        "setGreenメソッドは、色の緑成分を設定します。範囲はカラーモードによって異なり、デフォルトのRGBモードでは0から255の間です。"
      ],
      "params": {
        "green": "Number: 新しい緑の値"
      }
    },
    "setBlue": {
      "description": [
        "setBlueメソッドは、色の青成分を設定します。範囲はカラーモードによって異なり、デフォルトのRGBモードでは0から255の間です。"
      ],
      "params": {
        "blue": "Number: 新しい青の値"
      }
    },
    "setAlpha": {
      "description": [
        "setAlphaメソッドは、色の透明度（アルファ）値を設定します。範囲はカラーモードによって異なり、デフォルトのRGBモードでは0から255の間です。"
      ],
      "params": {
        "alpha": "Number: 新しいアルファ値"
      }
    }
  },
  "p5.Element": {
    "description": [
      "スケッチに追加されるすべての要素の基底クラスで、キャンバス、グラフィックスバッファ、およびその他のHTML要素が含まれます。直接呼び出されることはありませんが、<a href=\"#/p5.Element\">p5.Element</a>オブジェクトは、<a href=\"#/p5/createCanvas\">createCanvas()</a>、<a href=\"#/p5/createGraphics\">createGraphics()</a>、<a href=\"#/p5/createDiv\">createDiv()</a>、<a href=\"#/p5/createImg\">createImg()</a>、<a href=\"#/p5/createInput\">createInput()</a>などを呼び出すことで作成されます。"
    ],
    "params": {
      "elt": "String: ラップされたDOMノード",
      "pInst": "P5: (オプション) p5インスタンスへのポインタ"
    },
    "elt": {
      "description": [
        "基礎となるHTML要素。これに対してすべての通常のHTMLメソッドを呼び出すことができます。"
      ]
    },
    "parent": {
      "description": [
        "指定された親要素に要素をアタッチします。要素のコンテナを設定する方法です。文字列ID、DOMノード、または<a href=\"#/p5.Element\">p5.Element</a>を受け入れます。引数がない場合、親ノードが返されます。キャンバスの位置を決める他の方法については、<a href='https://github.com/processing/p5.js/wiki/Positioning-your-canvas'>キャンバスの配置</a>のwikiページを参照してください。"
      ],
      "params": {
        "parent": "String|p5.Element|Object: 望ましい親要素のID、DOMノード、または<a href=\"#/p5.Element\">p5.Element</a>"
      }
    },
    "id": {
      "description": [
        "要素のIDを設定します。ID引数が渡されない場合は、代わりに要素の現在のIDが返されます。ページ内で特定のIDを持つ要素は1つだけであることに注意してください。<a href=\"#/p5.Element/class\">class()</a>メソッドは、同じクラス名を持つ複数の要素を識別するために使用できます。"
      ],
      "params": {
        "id": "String: 要素のID"
      }
    },
    "class": {
      "description": [
        "指定されたクラスを要素に追加します。クラス引数が渡されない場合は、代わりに要素の現在のクラスを含む文字列が返されます。"
      ],
      "params": {
        "class": "String: 追加するクラス"
      }
    },
    "mousePressed": {
      "description": [
        "<a href=\"#/p5.Element/mousePressed\">mousePressed()</a>メソッドは、要素の上でマウスボタンが押されるたびに1回呼び出されます。一部のモバイルブラウザでは、ユーザーが素早くタップすると、タッチスクリーンでもこのイベントがトリガーされる場合があります。これは、要素固有のイベントリスナーをアタッチするために使用できます。"
      ],
      "params": {
        "fxn": "Function|Boolean: 要素の上でマウスが押されたときに発火する関数。代わりに<code>false</code>が渡された場合、以前の発火関数はもう発火しなくなります。"
      }
    },
    "doubleClicked": {
      "description": [
        "<a href=\"#/p5.Element/doubleClicked\">doubleClicked()</a>メソッドは、要素の上でマウスボタンが2回押されるたびに1回呼び出されます。これは、要素とアクション固有のイベントリスナーをアタッチするために使用できます。"
      ],
      "returns": "p5.Element:",
      "params": {
        "fxn": "Function|Boolean: 要素の上でマウスがダブルクリックされたときに発火する関数。代わりに<code>false</code>が渡された場合、以前の発火関数はもう発火しなくなります。"
      }
    },
    "mouseWheel": {
      "description": [
        "要素の上でマウスホイールがスクロールされるたびに、<a href=\"#/p5.Element/mouseWheel\">mouseWheel()</a>メソッドが1回呼び出されます。これは、要素固有のイベントリスナーをアタッチするために使用できます。",
        "このメソッドは、コールバック関数を引数として受け入れ、要素で<code>wheel</code>イベントがトリガーされると実行されます。コールバック関数には、<code>event</code>という1つの引数が渡されます。<code>event.deltaY</code>プロパティは、マウスホイールが上に回転するか、ユーザーから離れる方向に回転すると負の値を返し、他の方向では正の値を返します。<code>event.deltaX</code>は、<code>event.deltaY</code>と同様のことを行いますが、マウスホイールの水平方向のスクロールを読み取ります。",
        "macOSで「ナチュラル」スクロールが有効になっている場合、<code>event.deltaY</code>の値は反転します。"
      ],
      "params": {
        "fxn": "Function|Boolean: 要素の上でマウスがスクロールされたときに発火する関数。代わりに<code>false</code>が渡された場合、以前の発火関数はもう発火しなくなります。"
      }
    },
    "mouseReleased": {
      "description": [
        "要素の上でマウスボタンが離されるたびに、<a href=\"#/p5.Element/mouseReleased\">mouseReleased()</a>メソッドが1回呼び出されます。一部のモバイルブラウザでは、ユーザーが素早くタップすると、タッチスクリーンでもこのイベントがトリガーされる場合があります。これは、要素固有のイベントリスナーをアタッチするために使用できます。"
      ],
      "params": {
        "fxn": "Function|Boolean: 要素の上でマウスが離されたときに発火する関数。代わりに<code>false</code>が渡された場合、以前の発火関数はもう発火しなくなります。"
      }
    },
    "mouseClicked": {
      "description": [
        "要素の上でマウスボタンが押されて離された後、<a href=\"#/p5.Element/mouseClicked\">mouseClicked()</a>メソッドが1回呼び出されます。一部のモバイルブラウザでは、ユーザーが素早くタップすると、タッチスクリーンでもこのイベントがトリガーされる場合があります。これは、要素固有のイベントリスナーをアタッチするために使用できます。"
      ],
      "params": {
        "fxn": "Function|Boolean: 要素の上でマウスがクリックされたときに発火する関数。代わりに<code>false</code>が渡された場合、以前の発火関数はもう発火しなくなります。"
      }
    },
    "mouseMoved": {
      "description": [
        "マウスが要素の上を移動するたびに、<a href=\"#/p5.Element/mouseMoved\">mouseMoved()</a>メソッドが1回呼び出されます。これは、要素固有のイベントリスナーをアタッチするために使用できます。"
      ],
      "params": {
        "fxn": "Function|Boolean: マウスが要素の上を移動したときに発火する関数。代わりに<code>false</code>が渡された場合、以前の発火関数はもう発火しなくなります。"
      }
    },
    "mouseOver": {
      "description": [
        "マウスが要素に移動するたびに、<a href=\"#/p5.Element/mouseOver\">mouseOver()</a>メソッドが1回呼び出されます。これは、要素固有のイベントリスナーをアタッチするために使用できます。"
      ],
      "params": {
        "fxn": "Function|Boolean: マウスが要素に移動したときに発火する関数。代わりに<code>false</code>が渡された場合、以前の発火関数はもう発火しなくなります。"
      }
    },
    "mouseOut": {
      "description": [
        "マウスが要素から離れるたびに、<a href=\"#/p5.Element/mouseOut\">mouseOut()</a>メソッドが1回呼び出されます。これは、要素固有のイベントリスナーをアタッチするために使用できます。"
      ],
      "params": {
        "fxn": "Function|Boolean: マウスが要素から離れたときに発火する関数。代わりに<code>false</code>が渡された場合、以前の発火関数はもう発火しなくなります。"
      }
    },
    "touchStarted": {
      "description": [
        "タッチが登録されるたびに、<a href=\"#/p5.Element/touchStarted\">touchStarted()</a>メソッドが1回呼び出されます。これは、要素固有のイベントリスナーをアタッチするために使用できます。"
      ],
      "params": {
        "fxn": "Function|Boolean: 要素上でタッチが開始されたときに発火する関数。代わりに<code>false</code>が渡された場合、以前の発火関数はもう発火しなくなります。"
      }
    },
    "touchMoved": {
      "description": [
        "touchMoved()メソッドは、タッチが移動するたびに一度呼び出されます。これは、要素固有のイベントリスナーをアタッチするために使用できます。"
      ],
      "params": {
        "fxn": "Function|Boolean: タッチが要素の上を移動するときに発火する関数。代わりに<code>false</code>を渡すと、以前に発火していた関数はもう発火しなくなります。"
      }
    },
    "touchEnded": {
      "description": [
        "touchEnded()メソッドは、タッチが終了するたびに一度呼び出されます。これは、要素固有のイベントリスナーをアタッチするために使用できます。"
      ],
      "params": {
        "fxn": "Function|Boolean: タッチが要素の上で終了するときに発火する関数。代わりに<code>false</code>を渡すと、以前に発火していた関数はもう発火しなくなります。"
      }
    },
    "dragOver": {
      "description": [
        "dragOver()メソッドは、ファイルが要素の上にドラッグされるたびに一度呼び出されます。これは、要素固有のイベントリスナーをアタッチするために使用できます。"
      ],
      "params": {
        "fxn": "Function|Boolean: ファイルが要素の上にドラッグされるときに発火する関数。代わりに<code>false</code>を渡すと、以前に発火していた関数はもう発火しなくなります。"
      }
    },
    "dragLeave": {
      "description": [
        "dragLeave()メソッドは、ドラッグされたファイルが要素領域を離れるたびに一度呼び出されます。これは、要素固有のイベントリスナーをアタッチするために使用できます。"
      ],
      "params": {
        "fxn": "Function|Boolean: ファイルが要素からドラッグされたときに発火する関数。代わりに<code>false</code>を渡すと、以前に発火していた関数はもう発火しなくなります。"
      }
    },
    "addClass": {
      "description": [
        "指定されたクラスを要素に追加します。"
      ],
      "params": {
        "class": "String: 追加するクラスの名前"
      }
    },
    "removeClass": {
      "description": [
        "指定されたクラスを要素から削除します。"
      ],
      "params": {
        "class": "String: 削除するクラスの名前"
      }
    },
    "hasClass": {
      "description": [
        "指定されたクラスが既に要素に適用されているかどうかを確認します。"
      ],
      "returns": "Boolean: 要素が指定されたクラスを持っているかどうかの真偽値",
      "params": {
        "c": "String: 確認するクラスのクラス名"
      }
    },
    "toggleClass": {
      "description": [
        "要素のクラスを切り替えます。"
      ],
      "params": {
        "c": "String: 切り替えるクラス名"
      }
    },
    "child": {
      "description": [
        "要素を指定された親に子としてアタッチします。文字列ID、DOMノード、または<a href=\"#/p5.Element\">p5.Element</a>を受け入れます。引数が指定されていない場合、子DOMノードの配列が返されます。"
      ],
      "returns": "Node[]: 子ノードの配列",
      "params": {
        "child": "String|p5.Element: (オプション) 現在の要素に追加するID、DOMノード、または<a href=\"#/p5.Element\">p5.Element</a>"
      }
    },
    "center": {
      "description": [
        "p5.Elementを親に対して垂直方向、水平方向、または両方で中央に配置します。親がない場合は、ボディに対して中央に配置されます。引数が渡されない場合、p5.Elementは垂直方向と水平方向の両方で整列されます。"
      ],
      "params": {
        "align": "String: (オプション) 'vertical'、'horizontal'を渡すと、要素がそれに応じて整列されます"
      }
    },
    "html": {
      "description": [
        "引数が与えられた場合、要素の内部HTMLを設定し、既存のHTMLを置き換えます。trueが2番目の引数として含まれている場合、HTMLは既存のHTMLを置き換えるのではなく追加されます。引数が与えられない場合、要素の内部HTMLが返されます。"
      ],
      "returns": "String: 要素の内部HTML",
      "params": {
        "html": "String: (オプション) 要素内に配置されるHTML",
        "append": "Boolean: (オプション) HTMLを既存のものに追加するかどうか"
      }
    },
    "position": {
      "description": [
        "要素の位置を設定します。位置タイプの引数が与えられない場合、位置はウィンドウの(0, 0)に対して相対的になります。基本的に、これによりposition:absoluteおよびstyleのleftおよびtopプロパティが設定されます。位置タイプを指定するオプションの第3引数が与えられた場合、x座標とy座標は<a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/position\">位置決めスキーム</a>に基づいて解釈されます。引数が与えられない場合、関数は要素のxおよびy位置を返します。"
      ],
      "returns": "Object: 要素の位置を含むオブジェクト { x: 0, y: 0 } 形式のオブジェクト",
      "params": {
        "x": "Number: (オプション) ウィンドウの左上を基準としたx位置(オプション)",
        "y": "Number: (オプション) ウィンドウの左上を基準としたy位置(オプション)",
        "positionType": "String: (オプション) static, fixed, relative, sticky, initial, inherit のいずれか(オプション)"
      }
    },
    "style": {
      "description": [
        "与えられたスタイル（CSS）プロパティ（第1引数）を、与えられた値（第2引数）で要素に設定します。単一の引数が与えられた場合、.style()は指定されたプロパティの値を返します。ただし、単一の引数がCSS構文（'text-align:center'）で与えられた場合、.style()は適切にCSSを設定します。"
      ],
      "returns": "String: プロパティの値",
      "params": {
        "property": "String: 設定するプロパティ",
        "value": "String|p5.Color: プロパティに割り当てる値"
      }
    },
    "attribute": {
      "description": [
        "指定された要素に新しい属性を追加するか、既存の属性の値を変更します。値が指定されていない場合、指定された属性の値を返すか、属性が設定されていない場合はnullを返します。"
      ],
      "returns": "String: 属性の値",
      "params": {
        "attr": "String: 設定する属性",
        "value": "String: 属性に割り当てる値"
      }
    },
    "removeAttribute": {
      "description": [
        "指定された要素の属性を削除します。"
      ],
      "params": {
        "attr": "String: 削除する属性"
      }
    },
    "value": {
      "description": [
        "引数が与えられない場合は要素の値を返すか、要素の値を設定します。"
      ],
      "returns": "String|Number: 要素の値",
      "params": {
        "value": "String|Number"
      }
    },
    "show": {
      "description": [
        "現在の要素を表示します。基本的に、styleにdisplay:blockを設定します。"
      ]
    },
    "hide": {
      "description": [
        "現在の要素を非表示にします。基本的に、styleにdisplay:noneを設定します。"
      ]
    },
    "size": {
      "description": [
        "要素の幅と高さを設定します。AUTOを使用して、一度に1つの次元だけを調整することもできます。引数が与えられない場合、オブジェクトで要素の幅と高さを返します。画像など、読み込む必要のある要素の場合は、要素の読み込みが完了した後に関数を呼び出すことをお勧めします。"
      ],
      "returns": "Object: オブジェクト内の要素の幅と高さ",
      "params": {
        "w": "Number|Constant: 要素の幅で、AUTOまたは数値",
        "h": "Number|Constant: (オプション) 要素の高さで、AUTOまたは数値"
      }
    },
    "remove": {
      "description": [
        "要素を削除し、すべてのメディアストリームを停止し、すべてのリスナーを登録解除します。"
      ]
    },
    "drop": {
      "description": [
        "要素にドロップされたファイルがすべて読み込まれるたびに呼び出されるコールバックを登録します。p5は、ドロップされたすべてのファイルをメモリに読み込み、p5.Fileオブジェクトとしてコールバックに渡します。同時にドロップされた複数のファイルは、コールバックが複数回呼び出される結果となります。",
        "必要に応じて、2つ目のコールバックを渡すこともできます。これは、生の<a href=\"https://developer.mozilla.org/en-US/docs/Web/Events/drop\">drop</a>イベントに登録されます。そのため、コールバックは元の<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DragEvent\">DragEvent</a>が提供されます。同時に複数のファイルをドロップすると、2つ目のコールバックは1回のドロップごとにトリガーされますが、最初のコールバックはロードされたファイルごとにトリガーされます。"
      ],
      "params": {
        "callback": "Function: 読み込まれたファイルを受け取るコールバックで、ドロップされた各ファイルに対して呼び出されます。",
        "fxn": "Function: (オプション) ファイルがドロップされたときに、ドロップイベントでトリガーされるコールバック。"
      }
    }
  },
  "p5.Graphics": {
    "description": [
      "レンダラーを薄くラップするために使用される、グラフィックスバッファオブジェクトを作成するためのクラスです。オフスクリーングラフィックスバッファに描画する必要がある場合は、このクラスを使用してください。2つのパラメータは、ピクセル単位での幅と高さを定義します。このクラスのフィールドとメソッドは多岐にわたりますが、p5の通常の描画APIを反映しています。"
    ],
    "params": {
      "w": "Number: 幅",
      "h": "Number: 高さ",
      "renderer": "Constant: 使用するレンダラーで、P2DまたはWEBGLのいずれか",
      "pInst": "P5: (オプション) p5インスタンスへのポインタ"
    },
    "reset": {
      "description": [
        "グラフィックスバッファオブジェクトで自動的にリセットされない、変換カテゴリやライトカテゴリの関数によって変更された値などをリセットします。<a href='#/p5/draw'>draw()</a>でこれを呼び出すと、標準キャンバスの動作がコピーされます。"
      ]
    },
    "remove": {
      "description": [
        "グラフィックスオブジェクトをページから削除し、関連するリソースを解放します。"
      ]
    }
  },
  "p5.Renderer": {
    "description": [
      "p5.js「コア」の主要なグラフィックスとレンダリングコンテキスト、および基本API実装です。Renderer2DおよびRenderer3Dクラスのそれぞれのスーパークラスとして使用されます。"
    ],
    "params": {
      "elt": "String: ラップされたDOMノード",
      "pInst": "P5: (オプション) p5インスタンスへのポインタ",
      "isMainCanvas": "Boolean: (オプション) メインキャンバスとして使用するかどうか"
    }
  },
  "JSON": {
    "stringify": {
      "description": [
        "<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\">MDNエントリ</a>から: JSON.stringify()メソッドは、JavaScriptオブジェクトまたは値をJSON<a href=\"#/p5/string\">文字列</a>に変換します。"
      ],
      "params": {
        "object": "Object: JSONに変換したいJavaScriptオブジェクト"
      }
    }
  },
  "console": {
    "log": {
      "description": [
        "メッセージをブラウザのウェブコンソールに出力します。p5を使用する場合、<a href=\"#/p5/print\">print</a>と<a href=\"#/p5/console/log\">console.log</a>を互換性があります。",
        "コンソールは、使用しているブラウザによって異なる方法で開きます。以下は、<a href=\"https://developer.mozilla.org/en-US/docs/Tools/Web_Console/Opening_the_Web_Console\">Firefox</a>、<a href=\"https://developers.google.com/web/tools/chrome-devtools/open\">Chrome</a>、<a href=\"https://docs.microsoft.com/en-us/microsoft-edge/devtools-guide/console\">Edge</a>、および<a href=\"https://support.apple.com/en-ca/guide/safari/sfri20948/mac\">Safari</a>でコンソールを開く方法に関するリンクです。 <a href=\"https://editor.p5js.org/\">オンラインp5エディタ</a>では、コンソールはコードエディタの下に直接埋め込まれています。",
        "<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Console/log\">MDNエントリ</a>から: Consoleメソッドlog()は、ウェブコンソールにメッセージを出力します。メッセージは、単一の<a href=\"#/p5/string\">文字列</a>（オプションの置換値付き）であっても、1つ以上のJavaScript <a href=\"#/p5/object\">オブジェクト</a>であっても構いません。"
      ],
      "params": {
        "message": "String|Expression|Object: コンソールに出力したいメッセージ"
      }
    }
  },
  "p5.TypedDict": {
    "description": [
      "すべてのp5.Dictionaryタイプの基本クラス。具体的な型付きDictionaryクラスは、このクラスから継承されます。"
    ],
    "size": {
      "description": [
        "現在Dictionaryに格納されているキーと値のペアの数を返します。"
      ],
      "returns": "Integer: Dictionary内のキーと値のペアの数"
    },
    "hasKey": {
      "description": [
        "指定されたキーがDictionaryに存在する場合はtrueを返し、それ以外の場合はfalseを返します。"
      ],
      "returns": "Boolean: そのキーがDictionaryに存在するかどうか",
      "params": {
        "key": "Number|String: 調べたいキー"
      }
    },
    "get": {
      "description": [
        "指定されたキーに格納されている値を返します。"
      ],
      "returns": "Number|String: そのキーに格納されている値",
      "params": {
        "the": "Number|String: アクセスしたいキー"
      }
    },
    "set": {
      "description": [
        "指定されたキーがDictionaryにすでに存在する場合、そのキーに関連付けられた値を更新します。それ以外の場合は、新しいキーと値のペアが追加されます。"
      ],
      "params": {
        "key": "Number|String",
        "value": "Number|String"
      }
    },
    "create": {
      "description": [
        "Dictionaryに新しいキーと値のペアを作成します。"
      ],
      "params": {
        "key": "Number|String",
        "value": "Number|String",
        "obj": "Object: キー/値のペア"
      }
    },
    "clear": {
      "description": [
        "Dictionaryから以前に格納されたすべてのキーと値のペアを削除します。"
      ]
    },
    "remove": {
      "description": [
        "指定されたキーで格納されているキーと値のペアをDictionaryから削除します。"
      ],
      "params": {
        "key": "Number|String: 削除するペアのキー"
      }
    },
    "print": {
      "description": [
        "現在Dictionaryに格納されているアイテムのセットをコンソールにログします。"
      ]
    },
    "saveTable": {
      "description": [
        "DictionaryをCSVファイルに変換してローカルにダウンロードします。"
      ]
    },
    "saveJSON": {
      "description": [
        "DictionaryをJSONファイルに変換してローカルにダウンロードします。"
      ]
    }
  },
  "p5.StringDict": {
    "description": [
      "文字列用のシンプルなDictionaryクラス。"
    ]
  },
  "p5.NumberDict": {
    "description": [
      "数値用のシンプルなDictionaryクラス。"
    ],
    "add": {
      "description": [
        "指定されたキーで現在保存されている値に指定された数値を追加します。合計は、以前に辞書に保存されていた値を置き換えます。"
      ],
      "params": {
        "Key": "Number: 追加したい値のキー",
        "Number": "Number: 値に追加する数"
      }
    },
    "sub": {
      "description": [
        "指定されたキーで現在保存されている値から指定された数値を減算します。差は、以前に辞書に保存されていた値を置き換えます。"
      ],
      "params": {
        "Key": "Number: 減算したい値のキー",
        "Number": "Number: 値から減算する数"
      }
    },
    "mult": {
      "description": [
        "指定されたキーで現在保存されている値に指定された数値を乗算します。積は、以前に辞書に保存されていた値を置き換えます。"
      ],
      "params": {
        "Key": "Number: 乗算したい値のキー",
        "Amount": "Number: 値に乗算する数"
      }
    },
    "div": {
      "description": [
        "指定されたキーで現在保存されている値に指定された数値で除算します。商は、以前に辞書に保存されていた値を置き換えます。"
      ],
      "params": {
        "Key": "Number: 除算したい値のキー",
        "Amount": "Number: 値を除算する数"
      }
    },
    "minValue": {
      "description": [
        "辞書に現在保存されている最小の数値を返します。"
      ],
      "returns": "Number:"
    },
    "maxValue": {
      "description": [
        "辞書に現在保存されている最大の数値を返します。"
      ],
      "returns": "Number:"
    },
    "minKey": {
      "description": [
        "辞書で現在使用されている最小のキーを返します。"
      ],
      "returns": "Number:"
    },
    "maxKey": {
      "description": [
        "辞書で現在使用されている最大のキーを返します。"
      ],
      "returns": "Number:"
    }
  },
  "p5.MediaElement": {
    "description": [
      "<a href=\"#/p5.Element\">p5.Element</a>を拡張してオーディオとビデオを処理します。 <a href=\"#/p5.Element\">p5.Element</a>のメソッドに加えて、メディアを制御するメソッドも含まれています。直接呼び出されることはありませんが、<a href=\"#/p5/createVideo\">createVideo</a>、<a href=\"#/p5/createAudio\">createAudio</a>、および<a href=\"#/p5/createCapture\">createCapture</a>を呼び出すことで<a href=\"#/p5.MediaElement\">p5.MediaElement</a>が作成されます。"
    ],
    "params": {
      "elt": "String: ラップされるDOMノード"
    },
    "src": {
      "description": [
        "メディア要素のソースへのパス。"
      ],
      "returns": "String: src"
    },
    "play": {
      "description": [
        "HTML5メディア要素を再生します。"
      ]
    },
    "stop": {
      "description": [
        "HTML5メディア要素を停止します（現在の時間をゼロに設定）。"
      ]
    },
    "pause": {
      "description": [
        "HTML5メディア要素を一時停止します。"
    ]
    },
    "loop": {
      "description": [
        "HTML5メディア要素の'loop'をtrueに設定し、再生を開始します。"
      ]
    },
    "noLoop": {
      "description": [
        "HTML5メディア要素の'loop'をfalseに設定します。要素は最後に達すると停止します。"
      ]
    },
    "autoplay": {
      "description": [
        "HTML5メディア要素を自動再生するかどうかを設定します。引数が指定されていない場合、デフォルトで自動再生されます。"
      ],
      "params": {
        "shouldAutoplay": "Boolean: 要素が自動再生すべきかどうか"
      }
    },
    "volume": {
      "description": [
        "このHTML5メディア要素の音量を設定します。引数が与えられていない場合、現在の音量を返します。"
      ],
      "returns": "Number: 現在の音量",
      "params": {
        "val": "Number: 0.0から1.0の間の音量"
      }
    },
    "speed": {
      "description": [
        "引数が与えられていない場合、要素の現在の再生速度を返します。speedパラメータは、2.0で要素を2倍の速度で再生し、0.5で半分の速度で再生し、-1で通常の速度で逆再生します。（すべてのブラウザが後方再生をサポートしているわけではなく、サポートしていても再生がスムーズでない場合があります。）"
      ],
      "returns": "Number: 要素の現在の再生速度",
      "params": {
        "speed": "Number: 要素の再生速度の乗数"
      }
    },
    "time": {
      "description": [
        "引数が与えられていない場合、要素の現在の時間を返します。引数が与えられた場合、要素の現在の時間がそれに設定されます。"
      ],
      "returns": "Number: 現在の時間（秒単位）",
      "params": {
        "time": "Number: 移動する時間（秒単位）"
      }
    },
    "duration": {
      "description": [
        "HTML5メディア要素の再生時間を返します。"
      ],
      "returns": "Number: 再生時間"
    },
    "onended": {
      "description": [
        "オーディオまたはビデオ要素が終了したときに呼び出されるイベントをスケジュールします。要素がループしている場合、これは呼び出されません。要素は、onendedコールバックの引数として渡されます。"
      ],
      "params": {
        "callback": "Function: サウンドファイルが終了したときに呼び出す関数。メディア要素がコールバックの引数として渡されます。"
      }
    },
    "connect": {
      "description": [
        "この要素のオーディオ出力を指定されたaudioNodeまたはp5.soundオブジェクトに送信します。要素が指定されていない場合、p5のメイン出力に接続します。その接続は、このメソッドが最初に呼び出されたときに確立されます。すべての接続は、.disconnect()メソッドによって削除されます。",
        "このメソッドは、p5.sound.jsアドオンライブラリと一緒に使用することを目的としています。"
      ],
      "params": {
        "audioNode": "AudioNode|Object: Web Audio APIのAudioNode、またはp5.soundライブラリのオブジェクト"
      }
    },
    "disconnect": {
      "description": [
        "メイン出力を含むすべてのWeb Audioルーティングを切断します。これは、たとえば、出力をオーディオエフェクトを介して再ルーティングしたい場合に便利です。"
      ]
    },
    "showControls": {
      "description": [
        "ウェブブラウザによって決定されるデフォルトのMediaElementコントロールを表示します。"
      ]
    },
    "hideControls": {
      "description": [
        "デフォルトのmediaElementコントロールを非表示にします。"
      ]
    },
    "addCue": {
      "description": [
        "MediaElement（オーディオ/ビデオ）が再生キューポイントに到達するたびにトリガーされるイベントをスケジュールします。",
        "コールバック関数、トリガーする時間（秒単位）、およびコールバックのオプションのパラメータを受け入れます。",
        "時間はコールバック関数の最初のパラメータとして渡され、paramは2番目のパラメータとして渡されます。"
      ],
      "returns": "Number: id このキューのID。removeCue(id)に便利です。",
      "params": {
        "time": "Number: このメディア要素の再生に関連する秒単位の時間。例えば、再生が2秒に達するたびにイベントをトリガーするには、数値2を渡します。これは、コールバック関数に最初のパラメータとして渡されます。",
        "callback": "Function: 指定された時間に呼び出される関数の名前。コールバックは、時間と（オプションで）パラメータを2つのパラメータとして受け取ります。",
        "value": "Object: (オプション)コールバック関数に2番目のパラメータとして渡されるオブジェクト。"
      }
    },
    "removeCue": {
      "description": [
        "IDに基づいてコールバックを削除します。IDはaddCueメソッドによって返されます。"
      ],
      "params": {
        "id": "Number: addCueによって返されるキューのID"
      }
    },
    "clearCues": {
      "description": [
        "addCueメソッドを介して元々スケジュールされていたすべてのコールバックを削除します。"
      ],
      "params": {
        "id": "Number: addCueによって返されるキューのID"
      }
    }
  },
  "p5.File": {
    "description": [
      "ファイルの基本クラス。Element.drop や createFileInput で使用されます。"
    ],
    "params": {
      "file": "File: ラップされたファイル"
    },
    "file": {
      "description": [
        "基礎となる File オブジェクト。このオブジェクトに対して File クラスの通常のメソッドが呼び出せます。"
      ]
    },
    "type": {
      "description": [
        "ファイルの種類（画像、テキストなど）"
      ]
    },
    "subtype": {
      "description": [
        "ファイルのサブタイプ（一般的には拡張子 jpg、png、xml など）"
      ]
    },
    "name": {
      "description": [
        "ファイル名"
      ]
    },
    "size": {
      "description": [
        "ファイルのサイズ"
    ]
    },
    "data": {
      "description": [
        "ファイルが JSON であれば解析されたオブジェクト、XML であれば p5.XML、画像であれば画像データ、テキストであればテキストデータが含まれる URL 文字列"
      ]
    }
  },
  "p5.Image": {
    "description": [
      "<a href=\"#/p5.Image\">p5.Image</a>を新規に作成します。 <a href=\"#/p5.Image\">p5.Image</a>はキャンバスをバックエンドに使用した画像の表現です。",
      "p5は.gif、.jpg、.pngの画像を表示することができます。画像は2Dおよび3Dの空間で表示できます。画像を使用する前に、<a href=\"#/p5/loadImage\">loadImage()</a>関数で画像をロードする必要があります。 <a href=\"#/p5.Image\">p5.Image</a>クラスには、画像の幅と高さを示すフィールドと、画像内のすべてのピクセルの値を含む<a href=\"#/p5.Image/pixels\">pixels[]</a>という配列が含まれています。",
      "以下で説明するメソッドは、画像のピクセルやアルファチャンネルへの簡単なアクセスと合成のプロセスを簡素化します。",
      "<a href=\"#/p5.Image/pixels\">pixels[]</a>配列を使用する前に、画像に対して<a href=\"#/p5.Image/loadPixels\">loadPixels()</a>メソッドを使用して、ピクセルデータが正しくロードされていることを確認してください。"
    ],
    "params": {
      "width": "Number",
      "height": "Number"
    },
    "width": {
      "description": [
        "画像の幅。"
      ]
    },
    "height": {
      "description": [
        "画像の高さ。"
      ]
    },
    "pixels": {
      "description": [
        "ディスプレイウィンドウ内のすべてのピクセルの値を含む配列です。これらの値は数値です。この配列のサイズは、ピクセル密度の適切な係数を含めたディスプレイウィンドウのサイズ×4で、各ピクセルのR、G、B、A値が順番に表示されます。左から右に各行を移動し、各列を下に移動します。Retinaやその他の高密度ディスプレイでは、ピクセルがより多く存在します（pixelDensity^2倍）。「例えば、画像が100×100ピクセルの場合、40000ピクセルがあります。pixelDensity = 2の場合、160000になります。配列内の最初の4つの値（インデックス0〜3）は、（0、0）のピクセルのR、G、B、A値です。次の4つの値（インデックス4〜7）には、（1、0）のピクセルのR、G、B、A値が含まれます。一般的に、（x、y）のピクセルの値を設定するには:<pre><code class=\"language-javascript\">let d = pixelDensity(); for (let i = 0; i < d; i++) {  for (let j = 0; j < d; j++) {  // loop over  index = 4 * ((y * d + j) * width * d + (x * d + i));  pixels[index] = r;  pixels[index+1] = g;  pixels[index+2] = b;  pixels[index+3] = a;  } } </code></pre>",
        "この配列にアクセスする前に、<a href=\"#/p5.Image/loadPixels\">loadPixels()</a>関数でデータを読み込む必要があります。配列データが変更された後、変更内容を反映させるには、<a href=\"#/p5.Image/updatePixels\">updatePixels()</a>関数を実行する必要があります。"
      ]
    },
    "loadPixels": {
      "description": [
        "この画像のピクセルデータを[pixels]属性にロードします。"
      ]
    },
    "updatePixels": {
      "description": [
        "この画像のバッキングキャンバスを[pixels]配列の内容で更新します。",
        "この画像がアニメーションGIFの場合、ピクセルは現在表示されているフレームで更新されます。"
      ],
      "params": {
        "x": "Integer: アンダーラインキャンバスのターゲット更新領域のxオフセット",
        "y": "Integer: アンダーラインキャンバスのターゲット更新領域のyオフセット",
        "w": "Integer: アンダーラインキャンバスのターゲット更新領域の幅",
        "h": "Integer: アンダーラインキャンバスのターゲット更新領域の高さ"
      }
    },
    "get": {
      "description": [
        "画像からピクセルの領域を取得します。",
        "パラメータが指定されていない場合、全体の画像が返されます。xとyだけが渡された場合、単一のピクセルが抽出されます。すべてのパラメータが渡された場合、矩形領域が抽出され、<a href=\"#/p5.Image\">p5.Image</a>が返されます。"
      ],
      "returns": "p5.Image: 矩形<a href=\"#/p5.Image\">p5.Image</a>。",
      "params": {
        "x": "Number:ピクセルのx座標",
        "y": "Number:ピクセルのy座標",
        "w": "Number:幅",
        "h": "Number:高さ"
      }
    },
    "set": {
      "description": [
        "単一のピクセルの色を設定するか、この<a href=\"#/p5.Image\">p5.Image</a>に画像を書き込みます。",
        "多数のピクセルを扱う場合、pixels配列を直接操作し、<a href=\"#/p5.Image/updatePixels\">updatePixels()</a>を呼び出す方が高速です。"
      ],
      "params": {
        "x": "Number:ピクセルのx座標",
        "y": "Number:ピクセルのy座標",
        "a": "Number|Number[]|Object: グレースケール値 | ピクセル配列 | <a href=\"#/p5.Color\">p5.Color</a> | コピーする画像"
      }
    },
    "resize": {
      "description": [
        "画像を新しい幅と高さにリサイズします。画像を比例的にスケーリングするには、wideまたはhighパラメーターの値として0を使用します。たとえば、画像の幅を150ピクセルにし、同じ比率で高さを変更するには、resize(150, 0)を使用します。"
      ],
      "params": {
        "width": "Number: リサイズ後の画像の幅",
        "height": "Number: リサイズ後の画像の高さ"
      }
    },
    "copy": {
      "description": [
        "画像の一部を別の画像にコピーします。srcImageが指定されていない場合は、これがソースとして使用されます。ソースと宛先の領域が同じサイズでない場合、ソースピクセルを自動的に指定されたターゲット領域に合わせてリサイズします。"
      ],
      "params": {
        "srcImage": "p5.Image|p5.Element: ソース画像",
        "sx": "Integer: ソースの左上隅のX座標",
        "sy": "Integer: ソースの左上隅のY座標",
        "sw": "Integer: ソース画像の幅",
        "sh": "Integer: ソース画像の高さ",
        "dx": "Integer: 宛先の左上隅のX座標",
        "dy": "Integer: 宛先の左上隅のY座標",
        "dw": "Integer: 宛先画像の幅",
        "dh": "Integer: 宛先画像の高さ"
      }
    },
    "mask": {
      "description": [
        "他の画像をロードし、そのアルファチャンネルをこの画像のアルファチャンネルとして使用することにより、画像の一部を表示しないようにマスクします。マスクは累積的であり、画像オブジェクトに適用されると、削除することはできません。"
      ],
      "params": {
        "srcImage": "p5.Image: ソース画像"
      }
    },
    "filter": {
      "description": [
        "<a href=\"#/p5.Image\">p5.Image</a>に画像フィルターを適用します。",
        "THRESHOLDは、レベルパラメーターで定義された閾値を基準に、画像を白黒のピクセルに変換します。 パラメーターは0.0（黒）から1.0（白）の間でなければなりません。 レベルが指定されていない場合、0.5が使用されます。",
        "GRAYは、画像内の任意の色をグレースケールに変換します。 パラメーターは使用されません。",
        "OPAQUEは、アルファチャンネルを完全に不透明に設定します。 パラメーターは使用されません。",
        "INVERTは、各ピクセルをその反対値に設定します。 パラメーターは使用されません。",
        "POSTERIZEは、画像の各チャンネルをパラメーターで指定された色数に制限します。 パラメーターは2から255の値を設定できますが、下限の範囲で効果が最も顕著に現れます。",
        "BLURは、レベルパラメーターを使用してガウシアンブラーを実行し、ぼかしの程度を指定します。 パラメーターが使用されていない場合、ぼかしは半径1のガウシアンブラーと同等です。 値が大きくなると、ぼかしが増加します。",
        "ERODEは、明るい領域を減らします。 パラメーターは使用されません。",
        "DILATEは、明るい領域を増やします。 パラメーターは使用されません。",
        "filter（）はWEBGLモードでは機能しません。 WEBGLモードでは、カスタムシェーダーを使用して類似の効果を実現できます。 Adam Ferrissは、フィルターの例に含まれる多くの効果を含む<a href=\"https://github.com/aferriss/p5jsShaderExamples\" target='_blank'>シェーダー例の選択</a>を作成しました。"
      ],
      "params": {
        "filterType": "Constant: THRESHOLD、GRAY、OPAQUE、INVERT、POSTERIZE、ERODE、DILATE、BLURのいずれか。使用可能な各フィルターに関するドキュメントについては、Filters.jsを参照してください。",
        "filterParam": "Number:  (オプション)各フィルターユニークなパラメーター。上記を参照してください。"
      }
    },
    "blend": {
      "description": [
        "指定されたブレンドモードを使用して、1つの画像からピクセルの領域をコピーし、他の画像に貼り付けます。"
      ],
      "params": {
        "srcImage": "p5.Image: コピー元の画像",
        "sx": "Integer: コピー元画像の左上隅のX座標",
        "sy": "Integer: コピー元画像の左上隅のY座標",
        "sw": "Integer: コピー元画像の幅",
        "sh": "Integer: コピー元画像の高さ",
        "dx": "Integer: コピー先画像の左上隅のX座標",
        "dy": "Integer: コピー先画像の左上隅のY座標",
        "dw": "Integer: コピー先画像の幅",
        "dh": "Integer: コピー先画像の高さ",
        "blendMode": "定数: ブレンドモード。BLEND、DARKEST、LIGHTEST、DIFFERENCE、MULTIPLY、EXCLUSION、SCREEN、REPLACE、OVERLAY、HARD_LIGHT、SOFT_LIGHT、DODGE、BURN、ADD、NORMALのいずれか。使用可能なブレンドモードは: normal | multiply | screen | overlay | darken | lighten | color-dodge | color-burn | hard-light | soft-light | difference | exclusion | hue | saturation | color | luminosity<a href=\"http://blogs.adobe.com/webplatform/2013/01/28/blending-features-in-canvas/\">http://blogs.adobe.com/webplatform/2013/01/28/blending-features-in-canvas/</a>"
      }
    },
    "save": {
      "description": [
        "画像をファイルに保存し、ブラウザをダウンロードするように指示します。ファイル名と拡張子の2つの文字列を受け入れます。png（デフォルト）、jpg、およびgifがサポートされています。 p5.ImageがGIFファイルから読み込まれた場合のみ、ファイルはアニメーションGIFとしてダウンロードされます。"
      ],
      "params": {
        "filename": "String:  ファイル名を指定してください",
        "extension": "String:  'png'または'jpg'"
      }
    },
    "reset": {
      "description": [
        "アニメーションGIFを最初の状態から再生します。"
      ]
    },
    "getCurrentFrame": {
      "description": [
        "アニメーションGIFで現在表示されているフレームのインデックスを取得します。"
      ],
      "returns": "Number:  アニメーションGIFで現在表示されているフレームのインデックス"
    },
    "setFrame": {
      "description": [
        "アニメーションGIFで現在表示されているフレームのインデックスを設定します。"
      ],
      "params": {
        "index": "Number:  表示するフレームのインデックス"
      }
    },
    "numFrames": {
      "description": [
        "アニメーションGIFのフレーム数を返します。"
      ],
      "returns": "Number: "
    },
    "play": {
      "description": [
        "<a href=\"#/p5.Image/pause\">pause()</a>で一時停止されたアニメーションGIFを再生します。"
      ]
    },
    "pause": {
      "description": [
        "アニメーションGIFを一時停止します。"
      ]
    },
    "delay": {
      "description": [
        "アニメーションGIFのフレーム間の遅延時間を変更します。2番目のオプションパラメータを指定することで、特定のフレームの遅延時間を変更できます。 インデックスが指定されていない場合、すべてのフレームに新しい遅延時間が適用されます。"
      ],
      "params": {
        "d": "Number:  フレームを切り替える間の遅延時間（ミリ秒単位）",
        "index": "Number:  (オプション) 新しい遅延時間が適用されるフレームのインデックス {オプション}"
      }
    }
  },
  "p5.PrintWriter": {
    "params": {
      "filename": "String",
      "extension": "String (オプション)"
    },
    "write": {
      "description": [
        "PrintWriter ストリームにデータを書き込みます"
      ],
      "params": {
        "data": "Array: PrintWriter によって書き込まれるすべてのデータ"
      }
    },
    "print": {
      "description": [
        "PrintWriter ストリームにデータを書き込み、末尾に改行を追加します"
      ],
      "params": {
        "data": "Array: PrintWriter によって出力されるすべてのデータ"
      }
    },
    "clear": {
      "description": [
        "PrintWriter オブジェクトにすでに書き込まれたデータをクリアします"
      ]
    },
    "close": {
      "description": [
        "PrintWriter を閉じます"
      ]
    }
  },
  "p5.Table": {
    "description": [
      "<a href=\"#/p5.Table\">Table</a>オブジェクトは、伝統的なスプレッドシートのように、複数の行と列でデータを格納します。テーブルは、ゼロから、動的に、または既存のファイルからデータを生成できます。"
    ],
    "params": {
      "rows": "p5.TableRow[]: (オプション) p5.TableRowオブジェクトの配列"
    },
    "columns": {
      "description": [
        "\"header\"パラメータでテーブルがロードされた場合、テーブル内の列の名前が含まれる配列です。"
      ]
    },
    "rows": {
      "description": [
        "テーブルの行を構成する<a href=\"#/p5.Table\">p5.TableRow</a>オブジェクトが含まれる配列です。<a href=\"#/p5/getRows\">getRows()</a>を呼び出した場合と同じ結果が得られます。"
      ]
    },
    "addRow": {
      "description": [
        "<a href=\"#/p5.Table\">p5.Table</a>オブジェクトに新しいデータ行を追加するには、<a href=\"#/p5/addRow\">addRow()</a>を使用します。デフォルトでは、空の行が作成されます。通常、新しい行の参照をTableRowオブジェクトに格納し（上記のnewRowを参照）、その後<a href=\"#/p5/set\">set()</a>を使用して個々の値を設定します。",
        "パラメータとして<a href=\"#/p5.TableRow\">p5.TableRow</a>オブジェクトが含まれている場合、その行は複製され、テーブルに追加されます。"
      ],
      "returns": "p5.TableRow: 追加された行",
      "params": {
        "row": "p5.TableRow: (オプション) テーブルに追加する行"
      }
    },
    "removeRow": {
      "description": [
        "テーブルオブジェクトから行を削除します。"
      ],
      "params": {
        "id": "Integer: 削除する行のID番号"
      }
    },
    "getRow": {
      "description": [
        "指定された<a href=\"#/p5.TableRow\">p5.TableRow</a>への参照を返します。参照は、選択した行の値を取得および設定するために使用できます。"
      ],
      "returns": "p5.TableRow: <a href=\"#/p5.TableRow\">p5.TableRow</a>オブジェクト",
      "params": {
        "rowID": "Integer: 取得する行のID番号"
      }
    },
    "getRows": {
      "description": [
        "テーブルからすべての行を取得します。 <a href=\"#/p5.TableRow\">p5.TableRow</a>の配列が返されます。"
      ],
      "returns": "p5.TableRow[]: <a href=\"#/p5.TableRow\">p5.TableRow</a>の配列"
    },
    "findRow": {
      "description": [
        "提供された値を含む最初の行を見つけ、その行への参照を返します。複数の行が可能な場合でも、最初にマッチした行のみが返されます。検索する列は、IDまたはタイトルで指定できます。"
      ],
      "returns": "p5.TableRow:",
      "params": {
        "value": "String: マッチする値",
        "column": "Integer|String: 検索する列のID番号またはタイトル"
      }
    },
    "findRows": {
      "description": [
        "提供された値を含む行をテーブルから検索し、これらの行への参照を返します。配列が返されるため、上記の例のようにforループを使用してすべての行を反復処理する必要があります。検索する列は、IDまたはタイトルで指定できます。"
      ],
      "returns": "p5.TableRow[]: <a href=\"#/p5.TableRow\">p5.TableRow</a>オブジェクトの配列",
      "params": {
        "value": "String: マッチする値",
        "column": "Integer|String: 検索する列のID番号またはタイトル"
      }
    },
    "matchRow": {
      "description": [
        "提供された正規表現に一致する最初の行をテーブルから検索し、その行への参照を返します。複数の行が可能な場合でも、最初にマッチした行のみが返されます。検索する列は、IDまたはタイトルで指定できます。"
      ],
      "returns": "p5.TableRow: TableRowオブジェクト",
      "params": {
        "regexp": "String|RegExp: 一致する正規表現",
        "column": "String|Integer:  列ID（数字）またはタイトル（文字列）"
      }
    },
    "matchRows": {
      "description": [
        "提供された正規表現に一致する行をテーブルから検索し、これらの行への参照を返します。配列が返されるため、上記の例のようにforループを使用してすべての行を反復処理する必要があります。検索する列は、IDまたはタイトルで指定できます。"
      ],
      "returns": "p5.TableRow[]: <a href=\"#/p5.TableRow\">p5.TableRow</a>オブジェクトの配列",
      "params": {
        "regexp": "String: 一致する正規表現",
        "column": "String|Integer:  (オプション) 列ID（数字）またはタイトル（文字列）"
      }
    },
    "getColumn": {
      "description": [
        "指定した列内のすべての値を取得し、それらを配列として返します。列は、IDまたはタイトルで指定できます。"
      ],
      "returns": "Array:  列値の配列",
      "params": {
        "column": "String|Number: 列の文字列または数値"
      }
    },
    "clearRows": {
      "description": [
        "テーブルからすべての行を削除します。すべての行が削除されますが、列と列のタイトルは維持されます。"
      ]
    },
    "addColumn": {
      "description": [
        "<a href=\"#/p5.Table\">Table</a>オブジェクトに新しい列を追加するには、<a href=\"#/p5/addColumn\">addColumn()</a>を使用します。通常、列を名前で簡単に参照できるようにするために、タイトルを指定する必要があります。（タイトルが指定されていない場合、新しい列のタイトルはnullになります。）"
      ],
      "params": {
        "title": "String: (オプション) 列のタイトル"
      }
    },
    "getColumnCount": {
      "description": [
        "Tableの列数を返します。"
      ],
      "returns": "Integer: このTableに含まれる列数"
    },
    "getRowCount": {
      "description": [
        "Tableの行数を返します。"
      ],
      "returns": "Integer: このTableに含まれる行数"
    },
    "removeTokens": {
      "description": [
        "指定された文字（または\"tokens\"）を削除します。",
        "列が指定されていない場合、すべての列と行の値が処理されます。特定の列は、IDまたはタイトルのいずれかで参照できます。"
      ],
      "params": {
        "chars": "String: 削除する文字をリストアップした文字列",
        "column": "String|Integer: (オプション) 列のID（数字）または名前（文字列）"
      }
    },
    "trim": {
      "description": [
        "Stringの表の値から、先頭および末尾の空白（スペースやタブなど）をトリムします。列が指定されていない場合、すべての列と行の値がトリムされます。特定の列は、IDまたはタイトルのいずれかで参照できます。"
      ],
      "params": {
        "column": "String|Integer: (オプション) 列のID（数字）または名前（文字列）"
      }
    },
    "removeColumn": {
      "description": [
        "既存のTableオブジェクトから列を削除するには、<a href=\"#/p5/removeColumn\">removeColumn()</a>を使用します。削除する列は、そのタイトル（文字列）またはインデックス値（整数）で識別できます。removeColumn(0)は最初の列を、removeColumn(1)は2番目の列を削除します。"
      ],
      "params": {
        "column": "String|Integer: columnName（文字列）またはID（数字）"
      }
    },
    "set": {
      "description": [
        "Tableの指定された行と列に値を格納します。行はIDで指定され、列はIDまたはタイトルのいずれかで指定できます。"
      ],
      "params": {
        "row": "Integer: 行のID",
        "column": "String|Integer: 列のID（数字）またはタイトル（文字列）",
        "value": "String|Number: 割り当てる値"
      }
    },
    "setNum": {
      "description": [
        "Tableの指定された行と列にFloat値を格納します。行はIDで指定され、列はIDまたはタイトルのいずれかで指定できます。"
      ],
      "params": {
        "row": "Integer: 行のID",
        "column": "String|Integer: 列のID（数字）またはタイトル（文字列）",
        "value": "Number: 割り当てる値"
      }
    },
    "setString": {
      "description": [
        "Tableの指定された行と列にString値を格納します。行はIDで指定され、列はIDまたはタイトルのいずれかで指定できます。"
      ],
      "params": {
        "row": "Integer: 行のID",
        "column": "String|Integer: 列のID（数字）またはタイトル（文字列）",
        "value": "String: 割り当てる値"
      }
    },
    "get": {
      "description": [
        "指定したテーブルの特定の行と列から値を取得します。行はIDで指定され、列はIDまたはタイトルで指定することができます。"
      ],
      "returns": "String|Number:",
      "params": {
        "row": "Integer: 行ID",
        "column": "String|Integer: 列名 (string) または ID (number)"
      }
    },
    "getNum": {
      "description": [
        "指定したテーブルの特定の行と列からFloat値を取得します。行はIDで指定され、列はIDまたはタイトルで指定することができます。"
      ],
      "returns": "Number:",
      "params": {
        "row": "Integer: 行ID",
        "column": "String|Integer: 列名 (string) または ID (number)"
      }
    },
    "getString": {
      "description": [
        "指定したテーブルの特定の行と列から文字列を取得します。行はIDで指定され、列はIDまたはタイトルで指定することができます。"
      ],
      "returns": "String:",
      "params": {
        "row": "Integer: 行ID",
        "column": "String|Integer: 列名 (string) または ID (number)"
      }
    },
    "getObject": {
      "description": [
        "テーブルのすべてのデータを取得し、オブジェクトとして返します。列名が渡された場合、各行のオブジェクトはその属性をタイトルとして保存します。"
      ],
      "returns": "Object:",
      "params": {
        "headerColumn": "String: (オプション) 各行オブジェクトのタイトルとして使用する列の名前 (オプション)"
      }
    },
    "getArray": {
      "description": [
        "テーブルのすべてのデータを取得し、多次元配列として返します。"
      ],
      "returns": "Array:"
    }
  },
  "p5.TableRow": {
    "description": [
      "TableRowオブジェクトは、テーブルから列に格納された単一の行のデータ値を表します。",
      "Table Rowは、順序付けられた配列と、順不同のJSONオブジェクトの両方を含みます。"
    ],
    "params": {
      "str": "String: (オプション) オプション:separatorで区切られた値の文字列を使用して行を入力します",
      "separator": "String: (オプション) デフォルトではcsvのコンマ区切り値"
    },
    "set": {
      "description": [
        "TableRowの指定された列に値を格納します。列は、IDまたはタイトルのいずれかで指定できます。"
      ],
      "params": {
        "column": "String|Integer: 列ID（数値）またはタイトル（文字列）",
        "value": "String|Number: 格納する値"
      }
    },
    "setNum": {
      "description": [
        "TableRowの指定された列に浮動小数点値を格納します。列は、IDまたはタイトルのいずれかで指定できます。"
      ],
      "params": {
        "column": "String|Integer: 列ID（数値）またはタイトル（文字列）",
        "value": "Number|String: 浮動小数点数として格納する値"
      }
    },
    "setString": {
      "description": [
        "TableRowの指定された列に文字列値を格納します。列は、IDまたはタイトルのいずれかで指定できます。"
      ],
      "params": {
        "column": "String|Integer: 列ID（数値）またはタイトル（文字列）",
        "value": "String|Number|Boolean|Object: 文字列として格納する値"
      }
    },
    "get": {
      "description": [
        "TableRowの指定された列から値を取得します。列は、IDまたはタイトルのいずれかで指定できます。"
      ],
      "returns": "String|Number:",
      "params": {
        "column": "String|Integer: 列名（文字列）またはID（数値）"
      }
    },
    "getNum": {
      "description": [
        "TableRowの指定された列から浮動小数点値を取得します。列は、IDまたはタイトルのいずれかで指定できます。"
      ],
      "returns": "Number: 浮動小数点数",
      "params": {
        "column": "String|Integer: 列名（文字列）またはID（数値）"
      }
    },
    "getString": {
      "description": [
        "TableRowの指定された列から文字列値を取得します。列は、IDまたはタイトルのいずれらかで指定できます。"
      ],
      "returns": "String: 文字列",
      "params": {
        "column": "String|Integer: 列名（文字列）またはID（数値）"
      }
    }
  },
  "p5.XML": {
    "description": [
      "XMLはXMLオブジェクトの表現で、XMLコードをパースすることができます。外部のXMLファイルを読み込んでXMLオブジェクトを作成するには、<a href=\"#/p5/loadXML\">loadXML()</a>を使用してください。"
    ],
    "getParent": {
      "description": [
        "要素の親を取得し、別の<a href=\"#/p5.XML\">p5.XML</a>オブジェクトとして返します。"
      ],
      "returns": "p5.XML:要素の親"
    },
    "getName": {
      "description": [
        "要素の完全な名前を取得し、文字列として返します。"
      ],
      "returns": "String:ノードの名前"
    },
    "setName": {
      "description": [
        "要素の名前を設定します。文字列として指定します。"
      ],
      "params": {
        "the": "String:ノードの新しい名前"
      }
    },
    "hasChildren": {
      "description": [
        "要素に子要素があるかどうかをチェックし、ブール値として結果を返します。"
      ],
      "returns": "Boolean:"
    },
    "listChildren": {
      "description": [
        "要素のすべての子要素の名前を取得し、文字列の配列として返します。これは、各子要素に個別に<a href=\"#/p5.XML/getName\">getName()</a>を呼び出すことと同じです。"
      ],
      "returns": "String[]:要素の子要素の名前"
    },
    "getChildren": {
      "description": [
        "要素のすべての子要素を<a href=\"#/p5.XML\">p5.XML</a>オブジェクトの配列として返します。nameパラメータが指定された場合、その名前に一致するすべての子要素を返します。"
      ],
      "returns": "p5.XML[]:要素の子要素",
      "params": {
        "name": "String: (オプション)要素名"
      }
    },
    "getChild": {
      "description": [
        "名前パラメータまたは指定されたインデックスの子を一致する要素の最初のものを返します。一致する子が見つからない場合、undefinedを返します。"
      ],
      "returns": "p5.XML:",
      "params": {
        "name": "String|Integer:要素名またはインデックス"
      }
    },
    "addChild": {
      "description": [
        "要素に新しい子要素を追加します。子要素は、新しいタグの名前として使用されるString、または既存の<a href=\"#/p5.XML\">p5.XML</a>オブジェクトの参照で指定でき、新しく作成された子要素への参照が<a href=\"#/p5.XML\">p5.XML</a>オブジェクトとして返されます。"
      ],
      "params": {
        "node": "p5.XML:<a href=\"#/p5.XML\">p5.XML</a>オブジェクト。追加される子要素"
      }
    },
    "removeChild": {
      "description": [
        "名前またはインデックスで指定された要素を削除します。"
      ],
      "params": {
        "name": "String|Integer:要素名またはインデックス"
      }
    },
    "getAttributeCount": {
      "description": [
        "指定された要素の属性の数を数え、数値として返します。"
      ],
      "returns": "Integer:"
    },
    "listAttributes": {
      "description": [
        "指定された要素のすべての属性を取得し、文字列の配列として返します。"
      ],
      "returns": "String[]:属性の名前を含む文字列の配列"
    },
    "hasAttribute": {
      "description": [
        "指定された属性が要素に存在するかどうかをチェックします。"
      ],
      "returns": "Boolean:属性が見つかった場合はtrue、それ以外はfalse",
      "params": {
        "the": "String:チェックする属性"
      }
    },
    "getNum": {
      "description": [
        "要素の属性値をNumberとして返します。defaultValueパラメータが指定されており、属性が存在しない場合、defaultValueが返されます。defaultValueが指定されていなく、属性が存在しない場合、0が返されます。"
      ],
      "returns": "Number:",
      "params": {
        "name": "String: 属性のフルネーム（非null）",
        "defaultValue": "Number: (オプション) 属性のデフォルト値"
      }
    },
    "getString": {
      "description": [
        "要素の属性値をStringとして返します。defaultValueパラメータが指定されており、属性が存在しない場合、defaultValueが返されます。defaultValueが指定されておらず、属性が存在しない場合はnullが返されます。"
      ],
      "returns": "String:",
      "params": {
        "name": "String: 属性のフルネーム（非null）",
        "defaultValue": "Number: (オプション) 属性のデフォルト値"
      }
    },
    "setAttribute": {
      "description": [
        "要素の属性の内容を設定します。最初のパラメータは属性名を指定し、2番目のパラメータは新しい内容を指定します。"
      ],
      "params": {
        "name": "String: 属性のフルネーム",
        "value": "Number|String|Boolean: 属性の値"
      }
    },
    "getContent": {
      "description": [
        "要素の内容を返します。そのような内容がない場合、defaultValueが指定されている場合はdefaultValueが返され、それ以外の場合はnullが返されます。"
      ],
      "returns": "String:",
      "params": {
        "defaultValue": "String: (オプション) 内容が見つからない場合に返される値"
      }
    },
    "setContent": {
      "description": [
        "要素の内容を設定します。"
      ],
      "params": {
        "text": "String: 新しい内容"
      }
    },
    "serialize": {
      "description": [
        "要素を文字列にシリアライズします。この関数は、コンテンツをhttpリクエストに送信するか、ファイルに保存する準備をするために役立ちます。"
      ],
      "returns": "String: 要素のシリアル化された文字列"
    }
  },
  "p5.Vector": {
    "description": [
      "2次元または3次元ベクトルを記述するためのクラスです。ベクトルは大きさと方向を持つエンティティで、データ型はベクトルの成分 (<code>x</code> と <code>y</code> は2D、<code>x</code>、<code>y</code>、<code>z</code> は3D) を格納します。大きさと方向は、<a href=\"#/p5.Vector/mag\">p5.Vector.mag()</a> と <a href=\"#/p5.Vector/heading\">heading()</a> メソッドを介してアクセスできます。",
      "p5.jsの多くの例では、位置、速度、または加速度を表すために <a href=\"#/p5.Vector\">p5.Vector</a> が使用されます。例えば、画面上を移動する四角形を考えると、任意の瞬間にその位置（原点からその場所を指すベクトル）、速度（オブジェクトの位置が時間単位あたりにどのように変化するかを表すベクトル）、および加速度（オブジェクトの速度が時間単位あたりにどのように変化するかを表すベクトル）があります。",
      "ベクトルは値のグループを表すため、従来の加算/乗算などを単純に使用することはできません。代わりに、<a href=\"#/p5.Vector\">p5.Vector</a> クラス内のメソッドを使用する必要があります。"
    ],
    "params": {
      "x": "Number:  (オプション)ベクトルの x 成分",
      "y": "Number:  (オプション)ベクトルの y 成分",
      "z": "Number:  (オプション)ベクトルの z 成分"
    },
    "x": {
      "description": [
        "ベクトルの x 成分"
      ]
    },
    "y": {
      "description": [
        "ベクトルの y 成分"
      ]
    },
    "z": {
      "description": [
        "ベクトルの z 成分"
      ]
    },
    "toString": {
      "description": [
        "ベクトル <code>v</code> の文字列表現を、<code>String(v)</code> または <code>v.toString()</code> を呼び出して取得します。このメソッドは、コンソールにベクトルを記録するために役立ちます。"
      ],
      "returns": "String: ベクトルの文字列表現"
    },
    "set": {
      "description": [
        "2つまたは3つの別々の変数、<a href=\"#/p5.Vector\">p5.Vector</a> のデータ、またはfloat 配列の値を使用して、ベクトルの <code>x</code>、<code>y</code>、<code>z</code> 成分を設定します。"
      ],
      "params": {
        "x": "Number:  (オプション)ベクトルの x 成分",
        "y": "Number:  (オプション)ベクトルの y 成分",
        "z": "Number:  (オプション)ベクトルの z 成分",
        "value": "p5.Vector|Number[]: 設定するベクトル"
      }
    },
    "copy": {
      "description": [
        "ベクトルのコピーを取得し、<a href=\"#/p5.Vector\">p5.Vector</a> オブジェクトを返します。"
      ],
      "returns": "p5.Vector: <a href=\"#/p5.Vector\">p5.Vector</a> オブジェクトのコピー",
      "params": {
        "v": "p5.Vector: コピー元の<a href=\"#/p5.Vector\">p5.Vector</a>"
      }
    },
    "add": {
      "description": [
        "<code>x</code>、<code>y</code>、および <code>z</code> 成分をベクトルに加算したり、1つのベクトルを別のベクトルに加算したり、2つの独立したベクトルを合わせたりします。2つのベクトルを加算するメソッドのバージョンは静的メソッドで、<a href=\"#/p5.Vector\">p5.Vector</a> を返します。その他のバージョンは、ベクトルに直接作用します。また、このメソッドの引数に配列を指定することもできます。詳細については、例を参照してください。"
      ],
      "params": {
        "x": "Number: 加算するベクトルの x 成分",
        "y": "Number:  (オプション)加算するベクトルの y 成分",
        "z": "Number:  (オプション)加算するベクトルの z 成分",
        "value": "p5.Vector|Number[]: 加算するベクトル",
        "v1": "p5.Vector: 加算する<a href=\"#/p5.Vector\">p5.Vector</a>",
        "v2": "p5.Vector: 加算する<a href=\"#/p5.Vector\">p5.Vector</a>",
        "target": "p5.Vector:  (オプション)結果を受け取るベクトル"
      }
    },
    "rem": {
      "description": [
        "ベクトルを他のベクトルで割ったときの余りを返します。詳細については、例を参照してください。"
      ],
      "params": {
        "x": "Number: 除数ベクトルの x 成分",
        "y": "Number: 除数ベクトルの y 成分",
        "z": "Number: 除数ベクトルの z 成分",
        "value": "p5.Vector | Number[]: 除数ベクトル",
        "v1": "p5.Vector: 被除数 <a href=\"#/p5.Vector\">p5.Vector</a>",
        "v2": "p5.Vector: 除数 <a href=\"#/p5.Vector\">p5.Vector</a>"
      }
    },
    "sub": {
      "description": [
        "ベクトルから <code>x</code>、<code>y</code>、<code>z</code> 成分を引きます。また、1 つのベクトルから別のベクトルを引き、2 つの独立したベクトルを引くこともできます。2 つのベクトルを引くメソッドは静的メソッドで、<a href=\"#/p5.Vector\">p5.Vector</a> を返します。その他のメソッドはベクトルに直接作用します。このメソッドに引数を配列として提供することもできます。詳細については、例を参照してください。"
      ],
      "params": {
        "x": "Number: 引かれるベクトルの x 成分",
        "y": "Number: (オプション) 引かれるベクトルの y 成分",
        "z": "Number: (オプション) 引かれるベクトルの z 成分",
        "value": "p5.Vector|Number[]: 引かれるベクトル",
        "v1": "p5.Vector: 引かれる <a href=\"#/p5.Vector\">p5.Vector</a>",
        "v2": "p5.Vector: 引く <a href=\"#/p5.Vector\">p5.Vector</a>",
        "target": "p5.Vector: (オプション) 結果を受け取るベクトル"
      }
    },
    "mult": {
      "description": [
        "ベクトルをスカラーで乗算し、ベクトルの <code>x</code>、<code>y</code>、<code>z</code> 成分を乗算するか、2 つの独立したベクトルの <code>x</code>、<code>y</code>、<code>z</code> 成分を乗算します。ベクトルをスカラーで乗算する場合、ベクトルの <code>x</code>、<code>y</code>、<code>z</code> 成分はすべてスカラーで乗算されます。ベクトルを別のベクトルで乗算する場合、2 つのベクトルの <code>x</code>、<code>y</code>、<code>z</code> 成分を互いに乗算します（たとえば、2 つのベクトル <code>a</code> と <code>b</code> の場合:<code>a.x * b.x</code>、<code>a.y * b.y</code>、<code>a.z * b.z</code>）。このメソッドの静的バージョンは新しい <a href=\"#/p5.Vector\">p5.Vector</a> を作成し、非静的バージョンはベクトルに直接作用します。また、この関数に引数を配列として提供することもできます。詳細については、例を参照してください。"
      ],
      "params": {
        "n": "Number: ベクトルと乗算する数値",
        "x": "Number: ベクトルの x 成分と乗算する数値",
        "y": "Number: ベクトルの y 成分と乗算する数値",
        "z": "Number: (オプション) ベクトルの z 成分と乗算する数値",
        "arr": "Number[]: ベクトルの成分に乗算する配列",
        "v": "p5.Vector: 元のベクトルの成分と乗算するベクトル",
        "target": "p5.Vector: (オプション) 結果を受け取るベクトル",
        "v0": "p5.Vector",
        "v1": "p5.Vector"
      }
    },
    "div": {
      "description": [
        "ベクトルをスカラーで除算したり、ベクトルを<code>x</code>、<code>y</code>、<code>z</code>の各成分で除算したり、2つのベクトルの<code>x</code>、<code>y</code>、<code>z</code>成分同士を除算したりします。スカラーでベクトルを除算する場合、ベクトルの<code>x</code>、<code>y</code>、<code>z</code>成分がスカラーで除算されます。ベクトルでベクトルを除算する場合、ソースベクトルの<code>x</code>、<code>y</code>、<code>z</code>成分が被除数、引数の<code>x</code>、<code>y</code>、<code>z</code>成分が除数として扱われます。例えば、2つのベクトル<code>a</code>と<code>b</code>の場合、<code>a.x / b.x</code>、<code>a.y / b.y</code>、<code>a.z / b.z</code>のようになります。第2のベクトルのいずれかの成分が0の場合、除算0エラーがログに出力されます。ただし、両方のベクトルの<code>z</code>成分に0がある場合は、<code>x</code>と<code>y</code>成分のみが除算されます。このメソッドのstatic版は新しい<a href=\"#/p5.Vector\">p5.Vector</a>を作成し、non-static版はベクトル自体に作用します。このメソッドに引数を配列として提供することもできます。詳細については、例を参照してください。"
      ],
      "params": {
        "n": "Number: ベクトルを除算する数値",
        "x": "Number: ベクトルのx成分を除算する数値",
        "y": "Number: ベクトルのy成分を除算する数値",
        "z": "Number: (オプション) ベクトルのz成分を除算する数値",
        "arr": "Number[]: ベクトルの各成分を除算する配列",
        "v": "p5.Vector: 元のベクトルの各成分を除算するベクトル",
        "target": "p5.Vector: (オプション) 結果を受け取るベクトル",
        "v0": "p5.Vector",
        "v1": "p5.Vector"
      }
    },
    "mag": {
      "description": [
        "ベクトルの長さ（大きさ）を計算し、その結果を浮動小数点数で返します。これは単純に式<code>sqrt(xx + yy + zz)</code>です。"
      ],
      "returns": "Number: ベクトルの長さ",
      "params": {
        "vecT": "p5.Vector: 長さを返すベクトル"
      }
    },
    "magSq": {
      "description": [
        "ベクトルの長さの2乗を計算し、その結果を浮動小数点数で返します。これは単に式<code>xx + yy + zz</code>です。ベクトルを比較する場合など、実際の長さが必要ない場合には、より高速です。"
      ],
      "returns": "Number: ベクトルの長さの2乗",
      "params": {
        "vecT": "p5.Vector: 長さの2乗を返すベクトル"
      }
    },
    "dot": {
      "description": [
        "2つのベクトルの内積を計算します。2つの独立したベクトルの内積を計算するバージョンは、静的メソッドです。より詳細なコンテキストについては、例を参照してください。"
      ],
      "returns": "Number: 内積",
      "params": {
        "x": "Number: ベクトルのx成分",
        "y": "Number: (オプション) ベクトルのy成分",
        "z": "Number: (オプション) ベクトルのz成分",
        "value": "p5.Vector: ベクトルのvalue成分または<a href=\"#/p5.Vector\">p5.Vector</a>",
        "v1": "p5.Vector: 最初の<a href=\"#/p5.Vector\">p5.Vector</a>",
        "v2": "p5.Vector: 2番目の<a href=\"#/p5.Vector\">p5.Vector</a>"
      }
    },
    "cross": {
      "description": [
        "2つのベクトルの外積から構成されるベクトルを計算し、返します。静的および非静的メソッドの両方が新しい<a href=\"#/p5.Vector\">p5.Vector</a>を返します。より詳細なコンテキストについては、例を参照してください。"
      ],
      "returns": "p5.Vector: 外積から構成される<a href=\"#/p5.Vector\">p5.Vector</a>",
      "params": {
        "v": "p5.Vector: 外積を取る<a href=\"#/p5.Vector\">p5.Vector</a>",
        "v1": "p5.Vector: 最初の<a href=\"#/p5.Vector\">p5.Vector</a>",
        "v2": "p5.Vector: 2番目の<a href=\"#/p5.Vector\">p5.Vector</a>"
      }
    },
    "dist": {
      "description": [
        "2点間のユークリッド距離（点をベクトルオブジェクトとして扱う）を計算します。2点間の距離を計算する場合は<a href=\"#/p5/dist\">dist()</a>を使用してください。"
      ],
      "returns": "Number: 距離",
      "params": {
        "v": "p5.Vector: <a href=\"#/p5.Vector\">p5.Vector</a>のx, y, z座標",
        "v1": "p5.Vector: 最初の<a href=\"#/p5.Vector\">p5.Vector</a>",
        "v2": "p5.Vector: 2番目の<a href=\"#/p5.Vector\">p5.Vector</a>"
      }
    },
    "normalize": {
      "description": [
        "ベクトルの長さを1に正規化します。"
      ],
      "returns": "p5.Vector: 正規化された<a href=\"#/p5.Vector\">p5.Vector</a>",
      "params": {
        "v": "p5.Vector: 正規化するベクトル",
        "target": "p5.Vector: (オプション) 結果を受け取るベクトル"
      }
    },
    "limit": {
      "description": [
        "このベクトルの大きさを<code>max</code>パラメーターで指定された値に制限します。"
      ],
      "params": {
        "max": "Number: ベクトルの最大値",
        "v": "p5.Vector: 制限するベクトル",
        "target": "p5.Vector: (オプション) 結果を受け取るベクトル"
      }
    },
    "setMag": {
      "description": [
        "このベクトルの大きさを、<code>len</code>パラメーターで指定した値に設定します。"
      ],
      "params": {
        "len": "Number: このベクトルの新しい長さ",
        "v": "p5.Vector: 大きさを設定するベクトル",
        "target": "p5.Vector: (オプション) 結果を受け取るベクトル (オプション)"
      }
    },
    "heading": {
      "description": [
        "このベクトルの回転角度を計算します (2D ベクトルのみ)。 <a href=\"#/p5/createVector\">createVector()</a> で作成された p5.Vector は、現在の <a href=\"#/p5/angleMode\">angleMode()</a> を考慮して、ラジアンまたは度数で角度を返します。"
      ],
      "returns": "Number: 回転角度",
      "params": {
        "v": "p5.Vector: 回転角度を求めるベクトル"
      }
    },
    "setHeading": {
      "description": [
        "このベクトルを、特定の角度 (2D ベクトルのみ) に回転させます。大きさは変わりません。"
      ],
      "params": {
        "angle": "Number: 回転角度"
      }
    },
    "rotate": {
      "description": [
        "このベクトルを、指定された角度 (2D ベクトルのみ) で回転させます。大きさは変わりません。"
      ],
      "params": {
        "angle": "Number: 回転角度",
        "v": "p5.Vector",
        "target": "p5.Vector: (オプション) 結果を受け取るベクトル"
      }
    },
    "angleBetween": {
      "description": [
        "2つのベクトルの間の角度を計算して返します。現在の<a href=\"#/p5/angleMode\">angleMode</a>を考慮し、ラジアンまたは度数法で角度を返します。"
      ],
      "returns": "Number: 2つのベクトルの間の角度",
      "params": {
        "value": "p5.Vector: <a href=\"#/p5.Vector\">p5.Vector</a>のx、y、z成分。",
        "v1": "p5.Vector: 1つ目のベクトル。",
        "v2": "p5.Vector: 2つ目のベクトル。"
      }
    },
    "lerp": {
      "description": [
        "線形補間によってベクトルを別のベクトルに移動します。"
      ],
      "params": {
        "x": "Number: x成分。",
        "y": "Number: y成分。",
        "z": "Number: z成分。",
        "amt": "Number: 補間の割合。0.0（古いベクトル）から1.0（新しいベクトル）までの値。0.9は新しいベクトルに非常に近く、0.5は中間点にあります。",
        "v": "p5.Vector: 移動先の<a href=\"#/p5.Vector\">p5.Vector</a>。",
        "v1": "p5.Vector",
        "v2": "p5.Vector",
        "target": "p5.Vector: (オプション) 結果を受け取るベクトル。"
      }
    },
    "reflect": {
      "description": [
        "2Dの線の法線または3Dの平面の法線について、ベクトルを反射します。"
      ],
      "params": {
        "surfaceNormal": "p5.Vector: 反射の対象となる<a href=\"#/p5.Vector\">p5.Vector</a>。",
        "incidentVector": "p5.Vector: 反射させるベクトル。",
        "target": "p5.Vector: (オプション) 結果を受け取るベクトル。"
      }
    },
    "array": {
      "description": [
        "このベクトルを浮動小数点数配列として表します。これは一時的な使用のためのものです。他の用途に使用する場合は、自分自身のベクトルにコピーするために<b>p5.Vector.<a href=\"#/p5.Vector/copy\">copy()</a></b>メソッドを使用して、内容をコピーする必要があります。"
      ],
      "returns": "Number[]: 3つの値を持つ配列",
      "params": {
        "v": "p5.Vector: 配列に変換するベクトル。"
      }
    },
    "equals": {
      "description": [
        "<a href=\"#/p5.Vector\">p5.Vector</a>に対する等価性チェック。"
      ],
      "returns": "Boolean: ベクトルが等しい場合にtrue、そうでない場合にfalseを返します。",
      "params": {
        "x": "Number: (オプション) ベクトルのx成分",
        "y": "Number: (オプション) ベクトルのy成分",
        "z": "Number: (オプション) ベクトルのz成分",
        "value": "p5.Vector|Array: 比較するベクトル",
        "v1": "p5.Vector|Array: 比較する最初のベクトル",
        "v2": "p5.Vector|Array: 比較する2番目のベクトル"
      }
    },
    "fromAngle": {
      "description": [
        "指定した角度から2Dベクトルを作成します。"
      ],
      "returns": "p5.Vector: 新しい<a href=\"#/p5.Vector\">p5.Vector</a>オブジェクト",
      "params": {
        "angle": "Number: 角度（単位は弧度法、<a href=\"#/p5/angleMode\">angleMode</a>に影響されません）",
        "length": "Number: (オプション) 新しいベクトルの長さ（デフォルトは1）"
      }
    },
    "fromAngles": {
      "description": [
        "2つのISO球面角から新しい3Dベクトルを作成します。"
      ],
      "returns": "p5.Vector: 新しい<a href=\"#/p5.Vector\">p5.Vector</a>オブジェクト",
      "params": {
        "theta": "Number: 極角（単位は弧度法、上を0度とします）",
        "phi": "Number: 方位角（単位は弧度法、スクリーンから外側を0度とします）",
        "length": "Number: (オプション) 新しいベクトルの長さ（デフォルトは1）"
      }
    },
    "random2D": {
      "description": [
        "ランダムな角度から新しい2次元単位ベクトルを作成します。"
      ],
      "returns": "p5.Vector: 新しい<a href=\"#/p5.Vector\">p5.Vector</a>オブジェクト"
    },
    "random3D": {
      "description": [
        "新しいランダムな3次元単位ベクトルを作成します。"
      ],
      "returns": "p5.Vector: 新しい<a href=\"#/p5.Vector\">p5.Vector</a>オブジェクト"
    }
  },
  "p5.Font": {
    "description": [
      "フォントのベースクラス"
    ],
    "params": {
      "pInst": "P5: (オプション) p5インスタンスへのポインター"
    },
    "font": {
      "description": [
        "内部のオープンタイプフォント実装"
      ]
    },
    "textBounds": {
      "description": [
        "このフォントを使用して、指定されたテキスト文字列に対して、タイトな境界ボックスを返します。"
      ],
      "returns": "オブジェクト: x、y、w、hプロパティを持つ矩形オブジェクト",
      "params": {
        "line": "String: テキストの行",
        "x": "Number: x座標",
        "y": "Number: y座標",
        "fontSize": "Number: (オプション) 使用するフォントサイズ (デフォルトは12)",
        "options": "オブジェクト: (オプション) opentypeオプション (オプション) opentypeフォントにはalignmentとbaselineオプションが含まれています。デフォルトは'LEFT'と'alphabetic'"
      }
    },
    "textToPoints": {
      "description": [
        "指定されたテキストのパスに従って点の配列を計算します。"
      ],
      "returns": "Array:  x、y、alpha（パスの角度）を持つ各ポイントの配列",
      "params": {
        "txt": "String: テキストの行",
        "x": "Number: x座標",
        "y": "Number: y座標",
        "fontSize": "Number: 使用するフォントサイズ (オプション)",
        "options": "オブジェクト: (オプション) サンプルファクター - パスの長さとサンプル数の比率（デフォルト=.1）; 大きい値はより多くの点を生成し、より正確です simplifyThreshold - 非ゼロの値に設定する場合、共線性のあるポイントはポリゴンから削除されます。2つのエッジが共線であるかどうかを判断するときに使用する閾値角度を表します"
      }
    }
  },
  "p5.Camera": {
    "description": [
      "このクラスは、p5の<a href=\"https://github.com/processing/p5.js/wiki/Getting-started-with-WebGL-in-p5\">WebGLモード</a>で使用するためのカメラを記述します。3Dシーンをレンダリングするために必要な、カメラの位置、向き、投影情報を含みます。",
      "新しいp5.Cameraオブジェクトは<a href=\"#/p5/createCamera\">createCamera()</a>関数を使用して作成でき、以下に説明するメソッドを通じて制御できます。この方法で作成されたカメラは、シーン内のデフォルト位置とデフォルト透視投影を使用し、これらのプロパティが変更されるまで変更されません。複数のカメラを作成することもできます。この場合、現在のカメラは<a href=\"#/p5/setCamera\">setCamera()</a>メソッドを使用して設定できます。",
      "注意:以下のメソッドは2つの座標系で動作します。'world'座標系は、X、Y、Z軸に沿って原点との関係で位置を記述します。一方、カメラの'local'座標系は、左右、上下、前後の視点から位置を記述します。たとえば、<a href=\"#/p5.Camera/move\">move()</a>メソッドはカメラを自分自身の軸に沿って移動させますが、<a href=\"#/p5.Camera/setPosition\">setPosition()</a>メソッドは、ワールドスペース内のカメラの位置を設定します。",
      "カメラオブジェクトのプロパティ<code>eyeX, eyeY, eyeZ, centerX, centerY, centerZ, upX, upY, upZ</code>は、<a href=\"#/p5/createCamera\">createCamera()</a>を使用して生成されたカメラオブジェクトからもアクセスできます。"
    ],
    "params": {
      "rendererGL": "WebGLレンダラーのインスタンスであるRendererGL"
    },
    "eyeX": {
      "description": [
        "x軸上のカメラ位置値"
      ]
    },
    "eyeY": {
      "description": [
        "y軸上のカメラ位置値"
      ]
    },
    "eyeZ": {
      "description": [
        "z軸上のカメラ位置値"
      ]
    },
    "centerX": {
      "description": [
        "スケッチの中心を表すx座標"
      ]
    },
    "centerY": {
      "description": [
        "スケッチの中心を表すy座標"
      ]
    },
    "centerZ": {
      "description": [
        "スケッチの中心を表すz座標"
      ]
    },
    "upX": {
      "description": [
        "カメラから見た上方向のx成分"
      ]
    },
    "upY": {
      "description": [
        "カメラから見た上方向のy成分"
      ]
    },
    "upZ": {
      "description": [
        "カメラから見た上方向のz成分"
      ]
    },
    "perspective": {
      "description": [
        "透視投影を設定します。グローバルな<a href=\"#/p5/perspective\">perspective()</a>と同じパラメーターを受け取ります。この関数の詳細については、そちらで説明されています。"
      ]
    },
    "ortho": {
      "description": [
        "直交投影を設定します。グローバルな<a href=\"#/p5/ortho\">ortho()</a>と同じパラメーターを受け取ります。この関数の詳細については、そちらで説明されています。"
      ]
    },
    "frustum": {
      "description": [
        "カメラの視錐台を設定します。グローバルな<a href=\"#/p5/frustum\">frustum()</a>と同じパラメーターを受け取ります。この関数の詳細については、そちらで説明されています。"
      ]
    },
    "pan": {
      "description": [
        "パンは、カメラビューを左右に回転させます。"
      ],
      "params": {
        "angle": "Number: 現在の<a href=\"#/p5/angleMode\">angleMode</a>モード単位でカメラを回転する量。0より大きい値は反時計回りに回転（左）します。"
      }
    },
    "tilt": {
      "description": [
        "チルトは、カメラビューを上下に回転させます。"
      ],
      "params": {
        "angle": "Number: 現在の<a href=\"#/p5/angleMode\">angleMode</a>モード単位でカメラを回転する量。0より大きい値は反時計回りに回転（左）します。"
      }
    },
    "lookAt": {
      "description": [
        "ワールド空間の位置を見るようにカメラの向きを変更します。"
      ],
      "params": {
        "x": "Number: ワールド空間内の点のx座標",
        "y": "Number: ワールド空間内の点のy座標",
        "z": "Number: ワールド空間内の点のz座標"
      }
    },
    "camera": {
      "description": [
        "カメラの位置と向きを設定します。グローバルな<a href=\"#/p5/camera\">camera()</a>と同じパラメータを受け入れます。この関数に関する詳細は、そちらで確認できます。"
      ]
    },
    "move": {
      "description": [
        "現在のカメラの向きを保ったまま、ローカル座標系でカメラを移動させます。"
      ],
      "params": {
        "x": "Number: カメラの左右軸に沿って移動する量",
        "y": "Number: カメラの上下軸に沿って移動する量",
        "z": "Number: カメラの前後軸に沿って移動する量"
      }
    },
    "setPosition": {
      "description": [
        "現在のカメラの向きを保ったまま、ワールド空間内のカメラの位置を設定します。"
      ],
      "params": {
        "x": "Number: ワールド空間内の点のx座標",
        "y": "Number: ワールド空間内の点のy座標",
        "z": "Number: ワールド空間内の点のz座標"
      }
    }
  },
  "p5.Geometry": {
    "description": [
      "p5ジオメトリクラス"
    ],
    "params": {
      "detailX": "Integer: (オプション) x軸に沿った頂点数。",
      "detailY": "Integer: (オプション) y軸に沿った頂点数。",
      "callback": "Function: (オプション) オブジェクトのインスタンス化時に呼び出す関数。"
    },
    "computeFaces": {
      "description": [
        "ジオメトリオブジェクトの頂点に基づいて、面を計算します。"
      ]
    },
    "computeNormals": {
      "description": [
        "各頂点について、各面の平均としてスムーズな法線を計算します。"
      ]
    },
    "averageNormals": {
      "description": [
        "頂点の法線を平均化します。曲面で使用されます。"
      ]
    },
    "averagePoleNormals": {
      "description": [
        "極の法線を平均化します。球体のプリミティブで使用されます。"
      ]
    },
    "normalize": {
      "description": [
        "すべての頂点を-100から100の範囲内に中心に配置するように修正します。"
      ]
    }
  },
  "p5.Shader": {
    "description": [
        "WEBGLモード用のShaderクラスです。"
      ],
    "params": {
      "renderer": "p5.RendererGL: この新しいp5.ShaderにGLコンテキストを提供するp5.RendererGLのインスタンス",
      "vertSrc": "String: 頂点シェーダのソースコード（文字列形式）",
      "fragSrc": "String: フラグメントシェーダのソースコード（文字列形式）"
    },
    "setUniform": {
      "description": [
        "<a href=\"#/p5.Shader\">p5.Shader</a>オブジェクトのuniformを設定するために使用します。",
        "uniformは、GPUで実行されるシェーダプログラムにスケッチ（CPU上で実行される）から値を提供する方法として使用されます。"
      ],
      "params": {
        "uniformName": "String: uniformの名前。頂点シェーダおよびフラグメントシェーダで使用される名前と対応する必要があります。",
        "data": "Boolean|Number|Number[]|p5.Image|p5.Graphics|p5.MediaElement|p5.Texture: uniformに関連付けるデータ。データ型は、真偽値（true/false）、数値、数値の配列、または画像（p5.Image、p5.Graphics、p5.MediaElement、p5.Texture）のいずれかです。"
      }
    }
  },
  "p5.sound": {},
  "p5.SoundFile": {
    "description": [
      "指定されたファイルへのパスを持つSoundFileオブジェクトです。",
      "p5.SoundFileは、ファイル情報を非同期で読み込むため、すぐに利用可能になるとは限りません。",
      "ファイルがロードされた後すぐに何か処理をしたい場合は、2番目の引数に関数名を渡してください。",
      "ファイルパスは1つだけ必要ですが、オーディオファイルフォーマット（例:mp3、ogg、wav、m4a / aac）はすべてのWebブラウザでサポートされているわけではありません。互換性を確保する場合は、単一のファイルパスの代わりに、ファイルパスの配列を含めることができ、ブラウザは動作するフォーマットを選択します。"
    ],
    "params": {
      "path": "String|Array: サウンドファイルへのパス（String）。オプションで、複数のファイルフォーマットを配列で含めることもできます。また、HTML5 File APIからのオブジェクト、またはp5.Fileを受け取ることもできます。",
      "successCallback": "Function: (オプション) ファイルがロードされたときに呼び出す関数の名前",
      "errorCallback": "Function: (オプション) ファイルの読み込みに失敗した場合に呼び出す関数の名前。この関数は、エラーオブジェクトまたはXMLHttpRequestオブジェクトを受け取り、何が原因で失敗したかについての情報を提供します。",
      "whileLoadingCallback": "Function: (オプション) ファイルがロードされている間に呼び出す関数の名前。この関数は、ファイルのロードリクエストの進捗状況（0〜1の間）を第1パラメータとして受け取ります。この進捗状況には、オーディオデータのデコードに必要な追加時間は含まれません。"
    },
    "isLoaded": {
      "description": [
        "サウンドファイルが正常にロードされた場合はtrueを返します。"
      ],
      "returns": "Boolean:"
    },
    "play": {
      "description": [
        "p5.SoundFileを再生します。"
      ],
      "params": {
        "startTime": "Number: (オプション) 再生をスケジュールする時刻（現在時刻からの秒数）",
        "rate": "Number: (オプション) 再生速度",
        "amp": "Number: (オプション) 再生の音量",
        "cueStart": "Number: (オプション) キューの開始時刻（秒）",
        "duration": "Number: (オプション) 再生の長さ（秒）"
      }
    },
    "playMode": {
      "description": [
        "p5.SoundFileには2つの再生モードがあります:<code>restart</code> と <code>sustain</code>。再生モードは、p5.SoundFileが再生中にトリガーされた場合の動作を決定します。sustainモードでは、新しい再生と同時に再生が続行されます。restartモードでは、play（）は再生を停止して最初から再生します。untilDoneで、サウンドは再生中でない場合にのみ再生されます。sustainがデフォルトのモードです。"
      ],
      "params": {
        "str": "String: 'restart'または 'sustain'または 'untilDone'"
      }
    },
    "pause": {
      "description": [
        "現在再生中のファイルを一時停止します。ファイルが再生されていない場合は何も起こりません。",
        ".play（）は、一時停止した位置から再開されます。p5.SoundFileがループに設定されていた場合、一時停止する前に、.play（）による再生が継続され、.play（）で再開された後もループが続行されます。"
      ],
      "params": {
        "startTime": "Number: (オプション) イベントをスケジュールする時刻（現在時刻からの秒数）"
      }
    },
    "loop": {
      "description": [
        "p5.SoundFileをループ再生します。再生レート、再生音量、ループ開始地点、ループ終了地点をオプションで設定できます。"
      ],
      "params": {
        "startTime": "Number: (オプション) 何秒後にイベントを予約するか指定します。",
        "rate": "Number: (オプション) 再生レートを指定します。",
        "amp": "Number: (オプション) 再生音量を指定します。",
        "cueLoopStart": "Number: (オプション) ループの開始地点を秒単位で指定します。",
        "duration": "Number: (オプション) ループの長さを秒単位で指定します。"
      }
    },
    "setLoop": {
      "description": [
        "p5.SoundFileのループフラグをtrueまたはfalseに設定します。再生中の場合、現在の再生が終了した時点でこの変更が反映されます。"
      ],
      "params": {
        "Boolean": "Boolean: ループをtrueまたはfalseに設定します。"
      }
    },
    "isLooping": {
      "description": [
        "p5.SoundFileが現在ループ再生中である場合は'true'、そうでない場合は'false'を返します。"
      ],
      "returns": "Boolean:"
    },
    "isPlaying": {
      "description": [
        "p5.SoundFileが再生中である場合はtrue、一時停止中または停止中である場合はfalseを返します。"
      ],
      "returns": "Boolean:"
    },
    "isPaused": {
      "description": [
        "p5.SoundFileが一時停止中である場合はtrue、再生中または停止中である場合はfalseを返します。"
      ],
      "returns": "Boolean:"
    },
    "stop": {
      "description": [
        "p5.SoundFileの再生を停止します。"
      ],
      "params": {
        "startTime": "Number: (オプション) 何秒後にイベントを予約するか指定します。"
      }
    },
    "pan": {
      "description": [
        "p5.soundオブジェクトのステレオパンニングを、-1.0（左）から1.0（右）までの浮動小数点数で設定します。デフォルトは0.0（中央）です。"
      ],
      "params": {
        "panValue": "Number:  (オプション)ステレオパンニングを設定します。",
        "timeFromNow": "Number:  (オプション)このイベントが発生するまでの秒数を指定します。"
      }
    },
    "getPan": {
      "description": [
        "現在のステレオパン位置（-1.0から1.0）を返します。"
      ],
      "returns": "Number: Oscillatorの現在のステレオパン設定を、-1.0（左）から1.0（右）までの数値で返します。デフォルトは0.0（中央）です。"
    },
    "rate": {
      "description": [
        "サウンドファイルの再生速度を設定します。速度とピッチが変化します。0未満の値はオーディオバッファを逆方向に再生します。"
      ],
      "params": {
        "playbackRate": "Number:  (オプション)再生速度を設定します。1.0は通常の速度、0.5は半分の速度、2.0は2倍の速度です。0未満の値は逆再生します。"
      }
    },
    "setVolume": {
      "description": [
        "サウンドファイルの出力音量（振幅）を0.0（無音）から1.0（最大音量）の間で乗算します。1.0はデジタルサウンドの最大振幅です。1.0より大きい値で乗算するとデジタル歪みが発生する可能性があります。フェードイン/アウトする場合は、<code>rampTime</code>パラメータを指定してください。より複雑なフェードについては、Envelopeクラスを参照してください。",
        "また、オーディオシグナルで振幅を調整するために、オシレーターなどのシグナルソースを渡すこともできます。"
      ],
      "params": {
        "volume": "Number|Object: 振幅の値（0.0から1.0）またはモジュレーションシグナル/オシレーター",
        "rampTime": "Number:  (オプション)t秒でフェードします。",
        "timeFromNow": "Number:  (オプション)t秒後にこのイベントをスケジュールします。"
      }
    },
    "duration": {
      "description": [
        "サウンドファイルの再生時間を秒単位で返します。"
      ],
      "returns": "Number: サウンドファイルの再生時間（秒単位）を返します。"
    },
    "currentTime": {
      "description": [
        "p5.SoundFileの再生ヘッドの現在位置を秒単位で返します。時間は通常のバッファの方向に相対的であり、<code>reverseBuffer</code>が呼び出された場合、currentTimeは逆方向にカウントされます。"
      ],
      "returns": "Number: サウンドファイルのcurrentTime（秒単位）を返します。"
    },
    "jump": {
      "description": [
        "再生中のサウンドファイルの再生位置と再生時間を秒数で指定して移動します。何も指定されていない場合は、ファイルの再生位置を先頭に戻し、最後まで再生します。再生中でないサウンドファイルの位置を設定するには、<code>play</code>または<code>loop</code>メソッドを使用してください。"
      ],
      "params": {
        "cueTime": "Number: サウンドファイルのキュータイム（秒単位）",
        "duration": "Number: 再生時間（秒単位）"
      }
    },
    "channels": {
      "description": [
        "サウンドファイルのチャンネル数を返します。例えば、モノラルなら1、ステレオなら2です。"
      ],
      "returns": "Number: [channels]"
    },
    "sampleRate": {
      "description": [
        "サウンドファイルのサンプルレートを返します。"
      ],
      "returns": "Number: [sampleRate]"
    },
    "frames": {
      "description": [
        "サウンドファイルのサンプル数を返します。サンプル数は、サンプルレートと再生時間の積です。"
      ],
      "returns": "Number: [sampleCount]"
    },
    "getPeaks": {
      "description": [
        "静的な波形を描画するために使用できる、p5.SoundFileの振幅ピークの配列を返します。p5.SoundFileのオーディオバッファをスキャンして最大振幅を探します。'length'という1つのパラメータを受け取り、配列のサイズを決定します。大きな配列はより精密な波形可視化を提供します。",
        "Wavesurfer.jsに着想を得ています。"
      ],
      "returns": "Float32Array: peaksの配列",
      "params": {
        "length": "Number: (オプション) 配列のサイズを指定します。より大きなサイズは、より正確な波形可視化を提供します。デフォルトはブラウザウィンドウの幅の5倍です。"
      }
    },
    "reverseBuffer": {
      "description": [
        "p5.SoundFileのバッファソースを逆再生します。再生は別途処理する必要があります（例を参照）。"
      ]
    },
    "onended": {
      "description": [
        "サウンドファイルが再生を終了したときに実行されるイベントをスケジュールします。サウンドファイルが1回だけ再生される場合、終了時に呼び出されます。ループ再生されている場合は、stopが呼び出されたときに呼び出されます。"
      ],
      "params": {
        "callback": "Function: サウンドファイルが終了したときに実行される関数"
      }
    },
    "connect": {
      "description": [
        "p5soundオブジェクトの出力を他のp5.soundオブジェクトの入力に接続します。例えば、p5.SoundFileをFFTやエフェクトに接続できます。パラメータが指定されていない場合、メイン出力に接続されます。ほとんどのp5soundオブジェクトは、作成時にマスター出力に接続されます。"
      ],
      "params": {
        "object": "Object: (オプション) 入力を受け入れるオーディオオブジェクト"
      }
    },
    "disconnect": {
      "description": [
        "このp5soundオブジェクトの出力を切断します。"
      ]
    },
    "setPath": {
      "description": [
        "このSoundFileのソースを新しいパス（URL）にリセットします。"
      ],
      "params": {
        "path": "String: オーディオファイルのパス",
        "callback": "Function: コールバック"
      }
    },
    "setBuffer": {
      "description": [
        "現在のオーディオバッファを新しいバッファに置き換えます。"
      ],
      "params": {
        "buf": "Array: Float32Arrayの配列。2つのFloat32Arrayがある場合、ステレオソースが作成されます。1つだけある場合はモノラルソースが作成されます。"
      }
    },
    "addCue": {
      "description": [
        "メディアエレメント（オーディオ/ビデオ）が再生キューポイントに達するたびにトリガーするイベントをスケジュールします。",
        "コールバック関数、コールバックがトリガーされる時間（秒単位）、およびコールバックのパラメータのオプションがあります。",
        "時間は、最初のパラメータとしてコールバック関数に渡され、パラメータは2番目のパラメータとして渡されます。"
      ],
      "returns": "Number: cueのID。removeCue（id）に便利です。",
      "params": {
        "time": "Number: メディアエレメントの再生に相対的な時間（秒単位）。たとえば、再生が2秒に到達するたびにイベントをトリガーするには、数値2を渡します。これは、コールバック関数に最初のパラメータとして渡されます。",
        "callback": "Function: 指定された時間に呼び出される関数の名前。コールバックは、timeと（必要に応じて）paramを2つのパラメータとして受け取ります。",
        "value": "Object: (オプション) コールバック関数に渡される2番目のパラメータとして使用されるオブジェクト。"
      }
    },
    "removeCue": {
      "description": [
        "IDに基づいてコールバックを削除します。IDはaddCueメソッドによって返されます。"
      ],
      "params": {
        "id": "Number: cueのID。addCueで返された値です。"
      }
    },
    "clearCues": {
      "description": [
        "最初にaddCueメソッドを使用してスケジュールされたすべてのコールバックを削除します。"
      ]
    },
    "save": {
      "description": [
        "p5.SoundFileを.wavファイルとして保存します。ブラウザは、ユーザーにファイルをダウンロードするように促します。ファイルをサーバーにアップロードするには、<a href=\"/reference/#/p5.SoundFile/getBlob\">getBlob</a>を参照してください。"
      ],
      "params": {
        "fileName": "String: (オプション) 生成される.wavファイルの名前"
      }
    },
    "getBlob": {
      "description": [
        "サーバーに送信するために、p5.SoundFileをBlobとして取得します。Blobは、ファイルのようなデータオブジェクトで、<a href=\"/reference/#/p5/httpDo\">http</a>リクエストでサーバーにアップロードできます。このメソッドを使用して、次のような特定のオプションを指定してPOSTリクエストを送信します:<code>multipart/form-data</code>でリクエストをエンコードし、<code>FormData</code>を使用してblobをフォーム値の1つとして添付します。"
      ],
      "returns": "Blob: ファイルのようなデータオブジェクト"
    }
  },
  "p5.Amplitude": {
    "description": [
      "Amplitudeは音量を0.0〜1.0の範囲で測定します。デフォルトではすべてのp5soundを監視しますが、setInput()を使用して特定の音源を監視することもできます。オプションのスムージング値を受け入れ、デフォルト値は0です。"
    ],
    "params": {
      "smoothing": "Number: (オプション)音量読み取りのスムージング値。0をデフォルトとします。範囲は0.0から.999までです。"
    },
    "setInput": {
      "description": [
        "デフォルトでp5soundインスタンス（メイン出力）に接続します。オプションで、特定のソース（例えば、サウンドファイル）を渡すこともできます。"
      ],
      "params": {
        "snd": "SoundObject|undefined: (オプション)音源を設定します。デフォルトはメイン出力です。",
        "smoothing": "Number|undefined: (オプション)音量読み取りのスムージングを0.0から1.0の範囲で設定します。"
      }
    },
    "getLevel": {
      "description": [
        "呼び出された瞬間の単一のAmplitude読み取り値を返します。連続した読み取りを行う場合は、drawループで実行します。"
      ],
      "returns": "Number: 0.0から1.0の範囲内のAmplitude",
      "params": {
        "channel": "Number: (オプション)チャンネル0（左）または1（右）だけを返すようにオプションで指定できます。"
      }
    },
    "toggleNormalize": {
      "description": [
        "Amplitude.process()の結果を正規化するかどうかを切り替えます。正規化を行う場合、Amplitudeは処理した中で最も大きな音量の読み取り値と1.0の最大振幅の差を見つけます。Amplitudeは、この差をすべての値に加算して、常に0.0〜1.0の範囲で信頼できる結果を生成します。ただし、より大きな音量の瞬間が発生すると、Normalizeがすべての値に追加する量が変化します。真偽値パラメータ (true または false) を受け取ります。デフォルトでは、正規化はオフになっています。"
      ],
      "params": {
        "boolean": "Boolean: (オプション) 正規化を true (1) または false (0) に設定します。"
      }
    },
    "smooth": {
      "description": [
        "直近の解析フレームと平均化することで、Amplitude解析をスムーズにします。デフォルトではオフになっています。"
      ],
      "params": {
        "set": "Number: スムージングを0.0から1.0の範囲で設定します。"
      }
    }
  },
  "p5.FFT": {
    "description": [
      "FFT (高速フーリエ変換)は、波形内の個々の<a href=\"https://en.wikipedia.org/wiki/Audio_frequency\">オーディオ周波数</a>を分離する解析アルゴリズムです。",
      "p5.FFTオブジェクトをインスタンス化すると、2種類の解析に基づく配列を返すことができます。• <code>FFT.waveform()</code>は、時間領域に沿った振幅値を計算します。配列のインデックスは時間上の短い瞬間に対応しています。各値は、そのサンプルの時刻における波形の振幅を表します。 • <code>FFT.analyze() </code>は、周波数領域に沿った振幅値を計算します。配列のインデックスは、人間が聴くことができる最低から最高の周波数（つまり、ピッチ）に対応しています。各値は、その周波数スペクトルのスライスにおける振幅を表します。<code>getEnergy()</code>と共に使用して、特定の周波数、または周波数範囲内の振幅を測定します。",
      "FFTは、サンプルバッファと呼ばれる非常に短い音声スナップショットを解析します。配列はデフォルトで1024ビンの振幅測定値を返します。ビンの配列の長さを変更できますが、FFTアルゴリズムが正常に動作するためには、16から1024の間で2の累乗である必要があります。FFTバッファの実際のサイズは、ビンの数の2倍であり、標準的なサンプリングレートを考慮すると、バッファの長さは2048/44100秒です。"
    ],
    "params": {
      "smoothing": "Number: (オプション)周波数スペクトルの結果をスムージングします。 0.0 < smoothing < 1.0。デフォルトは0.8です。",
      "bins": "Number: (オプション)結果の配列の長さ。 16から1024の間で2の累乗である必要があります。デフォルトは1024です。"
    },
    "setInput": {
      "description": [
        "FFT解析の入力ソースを設定します。ソースが提供されない場合、FFTはスケッチ内のすべての音声を解析します。"
      ],
      "params": {
        "source": "Object: (オプション) p5.soundオブジェクト（またはWebオーディオAPIソースノード）"
      }
    },
    "waveform": {
      "description": [
        "単一のバッファ内の振幅読み取りのスナップショットを表す、-1.0から+1.0の振幅値の配列を返します。 長さはbinsに等しく（デフォルトは1024）。音響信号の波形を描画するために使用することができます。"
      ],
      "returns": "Array: 時間にわたる振幅値の配列（-1から1）。配列の長さはbinsです。",
      "params": {
        "bins": "Number: (オプション) 16から1024の間で2の累乗である必要があります。デフォルトは1024です。",
        "precision": "String: (オプション)値が提供されている場合、通常の配列よりも正確なFloat32 Arrayで結果を返します。"
      }
    },
    "analyze": {
      "description": [
        "周波数スペクトル全体にわたる、0から255までの振幅値の配列を返します。長さはFFT bins（デフォルトでは1024）に等しく、配列のインデックスは、人間が聴くことができる最低から最高の周波数（つまり、ピッチ）に対応しています。各値は、その周波数スペクトルのスライスにおける振幅を表します。 <code>getEnergy()</code>を使用する前に呼び出す必要があります。"
      ],
      "returns": "Array: 周波数スペクトル全体にわたるエネルギー（振幅/音量）値の配列。最低エネルギー（無音）= 0、最大エネルギーは255です。",
      "params": {
        "bins": "Number: (オプション) 16から1024の間で2の累乗である必要があります。デフォルトは1024です。",
        "scale": "Number: (オプション) \"dB\"の場合、-140から0（最大）のデシベル浮動小数点測定値が返されます。それ以外の場合は、0から255までの整数が返されます。"
      }
    },
    "getEnergy": {
      "description": [
        "特定の<a href=\"https://en.wikipedia.org/wiki/Audio_frequency\" target=\"_blank\">周波数</a>のエネルギー（音量）または2つの周波数の間の平均エネルギー量を返します。周波数（Hz）に対応する数値または周波数範囲を示す\"文字列\"を受け入れます（\"bass\"、\"lowMid\"、\"mid\"、\"highMid\"、\"treble\"）。値は0（その周波数でのエネルギー/音量なし）から255（最大エネルギー）の範囲です。 <em>注意:getEnergy()を使用する前にanalyze()を呼び出す必要があります。analyze()は、FFTに周波数データを解析するように指示し、getEnergy()はその結果を使用して特定の周波数または周波数範囲の値を決定します。</em>"
      ],
      "returns": "Number: エネルギー。0から255までの値。",
      "params": {
        "frequency1": "Number|String: この周波数でのエネルギーを表す値が返されます。また、\"bass\"、\"lowMid\"、\"mid\"、\"highMid\"、\"treble\"の文字列を指定すると、事前に定義された周波数範囲が返されます。",
        "frequency2": "Number: (オプション) 2番目の周波数が指定された場合、2つの周波数の間に存在するエネルギーの平均量が返されます。"
      }
    },
    "getCentroid": {
      "description": [
        "入力シグナルの<a href=\"http://en.wikipedia.org/wiki/Spectral_centroid\" target=\"_blank\"> スペクトル重心</a>を返します。 <em>注意:getCentroid()の前にanalyze()を呼び出す必要があります。analyze()はFFTに周波数データの分析を行うように指示し、getCentroid()はその結果を使用してスペクトル重心を決定します。</em>"
      ],
      "returns": "Number: スペクトル重心の周波数（Hz単位）"
    },
    "smooth": {
      "description": [
        "前回の解析フレームと平均化してFFT解析をスムージングします。"
      ],
      "params": {
        "smoothing": "Number: 0.0 < smoothing < 1.0.  デフォルトは0.8。"
      }
    },
    "linAverages": {
      "description": [
        "与えられた同数の周波数バンドに分割された平均振幅値の配列を返します。Nのデフォルト値は16です。 <em>注意:linAverages()の前にanalyze()を呼び出す必要があります。analyze()はFFTに周波数データの分析を行うように指示し、linAverages()はその結果を使用して周波数データをグループ化して平均値を算出します。</em>"
      ],
      "returns": "Array: linearAverages 各グループの平均振幅値の配列",
      "params": {
        "N": "Number: 返される周波数グループの数"
      }
    },
    "logAverages": {
      "description": [
        "指定された<a href=\"https://en.wikipedia.org/wiki/Octave_band\" target=\"_blank\"> オクターブ帯域</a>セットのスペクトルの平均振幅値の配列を返します。 <em>注意:logAverages()の前にanalyze()を呼び出す必要があります。analyze()はFFTに周波数データの分析を行うように指示し、logAverages()はその結果を使用して周波数データをグループ化して平均値を算出します。</em>"
      ],
      "returns": "Array: logAverages 各グループの平均振幅値の配列",
      "params": {
        "octaveBands": "Array: グループ化するオクターブバンドのオブジェクトの配列"
      }
    },
    "getOctaveBands": {
      "description": [
        "1/Nオクターブバンドを計算して返します。Nのデフォルト値は3で、最小中心周波数は15.625Hzです。(1/3オクターブバンド ~= 31周波数バンド) fCtr0をより高いオクターブの中心値に設定すると、低いバンドを無視して、より少ない周波数グループを生成します。"
      ],
      "returns": "Array: octaveBands オクターブバンドオブジェクトの配列",
      "params": {
        "N": "Number: 生成されたオクターブバンドのタイプを1/Nで指定します。",
        "fCtr0": "Number: 最低バンドの中心周波数を指定します。"
      }
    }
  },
  "p5.Oscillator": {
    "description": [
      "p5.Oscillatorは、-1.0から1.0の間を振動するシグナルを生成します。デフォルトでは、振動は正弦波の形（ 'sine' ）をとります。追加のタイプには、 'triangle' 、 'sawtooth' 、および 'square' があります。周波数は、秒間440回の振動（440Hz、 'A'音のピッチと同じ）がデフォルトです。",
      "setType（）で振動のタイプを設定するか、特定の発振器をインスタンス化することで設定できます:<a href=\"/reference/#/p5.SinOsc\">p5.SinOsc</a>、<a href=\"/reference/#/p5.TriOsc\">p5.TriOsc</a>、<a href=\"/reference/#/p5.SqrOsc\">p5.SqrOsc</a>、または<a href=\"/reference/#/p5.SawOsc\">p5.SawOsc</a>。"
    ],
    "params": {
      "freq": "Number: (オプション)周波数。デフォルトは440Hzです。",
      "type": "String: (オプション)発振器の種類。オプション: 'sine'（デフォルト）、 'triangle'、 'sawtooth'、 'square'。"
    },
    "start": {
      "description": [
        "発振器を開始します。",
        "ユーザージェスチャーで発振器を開始すると、Chromeや多くのモバイルデバイスを含む厳格な自動再生ポリシーを持つブラウザでオーディオが有効になります。参照:<code>userStartAudio()</code>。"
      ],
      "params": {
        "time": "Number: (オプション)現在からの開始時間（秒単位）。",
        "frequency": "Number: (オプション)周波数（Hz）。"
      }
    },
    "stop": {
      "description": [
        "発振器を停止します。発振器が停止するまでの時間（秒単位）を決定するためのオプションパラメーターを受け付けます。"
      ],
      "params": {
        "secondsFromNow": "Number:現在からの秒数。"
      }
    },
    "amp": {
      "description": [
        "振幅を0から1.0の間で設定します。また、オーディオ信号で振幅を変調するようなオシレーターなどのオブジェクトを渡すこともできます。"
      ],
      "returns": "AudioParam: gain。値が指定されていない場合、このオシレーターのgain/amplitude/volumeを制御するWebオーディオAPIのAudioParamを返します。",
      "params": {
        "vol": "Number | Object:0から1.0の間またはモジュレーション信号/オシレーター",
        "rampTime": "Number: (オプション)rampTimeに続くフェードを作成します",
        "timeFromNow": "Number: (オプション)このイベントが発生する時間を現在から秒単位でスケジュールします"
      }
    },
    "getAmp": {
      "description": [
        "出力ゲインの値を返します。"
      ],
      "returns": "Number:0.0から1.0までの振幅値。"
    },
    "freq": {
      "description": [
        "オシレーターの周波数を設定します。また、オーディオ信号で周波数を変調するようなオシレーターなどのオブジェクトを渡すこともできます。"
      ],
      "returns": "AudioParam:周波数。値が指定されていない場合、このオシレーターの周波数を制御するWebオーディオAPIのAudioParamを返します。",
      "params": {
        "Frequency": "Number | Object: Hzでの周波数またはモジュレーション信号/オシレーター",
        "rampTime": "Number: (オプション)ramp time（秒単位）",
        "timeFromNow": "Number: (オプション)x秒後にこのイベントが発生するようスケジュールします"
      }
    },
    "getFreq": {
      "description": [
        "オシレーターの周波数の値を返します。"
      ],
      "returns": "Number: Hzでのオシレーターの周波数。"
    },
    "setType": {
      "description": [
        "'sine'、 'triangle'、 'sawtooth'、または 'square'にタイプを設定します。"
      ],
      "params": {
        "type": "String: 'sine'、 'triangle'、 'sawtooth'、または 'square'。"
      }
    },
    "getType": {
      "description": [
        "現在のオシレーターのタイプを返します。例: 'sine'、 'triangle'、 'sawtooth'、 'square'。"
      ],
      "returns": "String: オシレーターのタイプ。例: 'sine'、 'triangle'、 'sawtooth'、 'square'。"
    },
    "connect": {
      "description": [
        "p5.sound / Web Audioオブジェクトに接続します。"
      ],
      "params": {
        "unit": "Object: p5.soundまたはWeb Audioオブジェクト"
      }
    },
    "disconnect": {
      "description": [
        "すべての出力を切断します。"
      ]
    },
    "pan": {
      "description": [
        "左（-1）から右（1）までの間でパンを設定します。"
      ],
      "params": {
        "panning": "Number: -1から1までの数値",
        "timeFromNow": "Number: 現在からx秒後にこのイベントが発生するようスケジュールします"
      }
    },
    "getPan": {
      "description": [
        "現在のパン位置の値を返します。左（-1）から右（1）までの間です。"
      ],
      "returns": "Number: オシレーターのパン位置。左（-1）から右（1）までの間です。"
    },
    "phase": {
      "description": [
        "オシレーターの位相を0.0から1.0の間に設定します。この実装では、位相はオシレーターの現在の周波数に基づく遅延時間です。"
      ],
      "params": {
        "phase": "Number: 0.0から1.0までの浮動小数点数"
      }
    },
    "add": {
      "description": [
        "p5.Oscillatorの出力振幅に値を加え、オシレーターを返します。このメソッドを再度呼び出すと、最初のadd（）を新しい値で上書きします。"
      ],
      "returns": "p5.Oscillator: オシレーター。スケールされた出力を持つこのオシレーターを返します。",
      "params": {
        "number": "Number: 追加する定数"
      }
    },
    "mult": {
      "description": [
        "p5.Oscillatorの出力振幅を固定値で乗算します（つまり、上げます！）。このメソッドを再度呼び出すと、最初のmult（）を新しい値で上書きします。"
      ],
      "returns": "p5.Oscillator: オシレーター。乗算された出力を持つこのオシレーターを返します。",
      "params": {
        "number": "Number: 乗算する定数"
      }
    },
    "scale": {
      "description": [
        "このオシレーターの振幅値を指定された範囲にスケーリングし、オシレーターを返します。このメソッドを再度呼び出すと、最初のscale（）を新しい値で上書きします。"
      ],
      "returns": "p5.Oscillator:オシレーター。スケールされた出力を持つこのオシレーターを返します。",
      "params": {
        "inMin": "Number: 入力範囲の最小値",
        "inMax": "Number: 入力範囲の最大値",
        "outMin": "Number: 出力範囲の最小値",
        "outMax": "Number: 出力範囲の最大値"
      }
    }
  },
  "p5.SinOsc": {
    "description": [
      "コンストラクタ： <code>new p5.SinOsc()</code>。これは正弦波発振器を作成します。これは<code> new p5.Oscillator('sine') </code>と同等であり、p5.Oscillatorを作成し、そのメソッド<code>setType('sine')</code>を呼び出すこともできます。詳細はp5.Oscillatorを参照してください。"
    ],
    "params": {
      "freq": "Number:(オプション)周波数を設定します"
    }
  },
  "p5.TriOsc": {
    "description": [
      "コンストラクター: <code>new p5.TriOsc()</code>。これは三角波オシレーターを作成し、<code>new p5.Oscillator('triangle')</code> または p5.Oscillatorを作成してそのメソッド<code>setType('triangle')</code>を呼び出すことと同等です。メソッドについてはp5.Oscillatorを参照してください。"
    ],
    "params": {
      "freq": "Number: (オプション)周波数を設定します。"
    }
  },
  "p5.SawOsc": {
    "description": [
      "コンストラクタ: <code>new p5.SawOsc()</code>。これはSawTooth波オシレータを作成するものであり、<code>new p5.Oscillator('sawtooth')</code>と同等であり、また、p5.Oscillatorを作成してそのメソッド<code>setType('sawtooth')</code>を呼び出すこともできます。メソッドについては、p5.Oscillatorを参照してください。"
    ],
    "params": {
      "freq": "Number: (オプション) 周波数を設定します"
    }
  },
  "p5.SqrOsc": {
    "description": [
      "コンストラクタ: <code>new p5.SqrOsc()</code>。これはSquare波オシレータを作成するものであり、<code>new p5.Oscillator('square')</code>と同等であり、また、p5.Oscillatorを作成してそのメソッド<code>setType('square')</code>を呼び出すこともできます。メソッドについては、p5.Oscillatorを参照してください。"
    ],
    "params": {
      "freq": "Number: (オプション) 周波数を設定します"
    }
  },
  "p5.Envelope": {
    "description": [
      "エンベロープは、時間にわたる事前定義された振幅分布です。通常、エンベロープは、オブジェクトの出力音量を制御するために使用されます。Attack、Decay、Sustain、Release（<a href=\"https://upload.wikimedia.org/wikipedia/commons/e/ea/ADSR_parameter.svg\">ADSR</a>）と呼ばれるフェードのシリーズとして言及されます。エンベロープは、他のWeb Audioパラメーターを制御することもできます。例えば、p5.Envelopeは以下のようにしてOscillatorの周波数を制御できます。<code>osc.freq(env)</code>。",
      "Attack/Releaseのレベルを変更するには、<code><a href=\"#/p5.Envelope/setRange\">setRange</a></code>を使用します。attackTime、decayTime、sustainPercent、およびreleaseTimeを変更するには、<code><a href=\"#/p5.Envelope/setADSR\">setADSR</a></code>を使用します。",
      "エンベロープ全体を再生するには<code><a href=\"#/p5.Envelope/play\">play</a></code>メソッドを使用し、pingableトリガー用に<code><a href=\"#/p5.Envelope/ramp\">ramp</a></code>メソッドを使用します。また、<code><a href=\"#/p5.Envelope/triggerAttack\">triggerAttack</a></code>/<code><a href=\"#/p5.Envelope/triggerRelease\">triggerRelease</a></code>を使用してnoteOn/noteOffをトリガーできます。"
    ],
    "attackTime": {
      "description": [
        "エンベロープがattackLevelに到達するまでの時間です。"
      ]
    },
    "attackLevel": {
      "description": [
        "attackが完了した後のレベルです。"
      ]
    },
    "decayTime": {
      "description": [
        "エンベロープがdecayLevelに到達するまでの時間です。"
      ]
    },
    "decayLevel": {
      "description": [
        "decay後のレベルです。エンベロープはここで維持され、リリースされるまで持続します。"
      ]
    },
    "releaseTime": {
      "description": [
        "リリース部分の継続時間です。"
      ]
    },
    "releaseLevel": {
      "description": [
        "リリースの終わりにあるレベルです。"
      ]
    },
    "set": {
      "description": [
        "一連の時間/値ペアでエンベロープをリセットします。"
      ],
      "params": {
        "attackTime": "Number: 攻撃レベルに到達するまでの時間（秒単位）",
        "attackLevel": "Number: 0.0から1.0の範囲内の通常の振幅",
        "decayTime": "Number: 時間",
        "decayLevel": "Number: 振幅（標準的なADSRエンベロープの場合、decayLevel = sustainLevel）",
        "releaseTime": "Number: リリース時間（秒単位）",
        "releaseLevel": "Number: 振幅"
      }
    },
    "setADSR": {
      "description": [
        "従来の<a href=\"https://en.wikipedia.org/wiki/Synthesizer#/media/File:ADSR_parameter.svg\">ADSRエンベロープ</a>のように値を設定します。"
      ],
      "params": {
        "attackTime": "Number: 攻撃レベルに到達するまでの時間（秒単位）",
        "decayTime": "Number: (オプション)ディケイ/サステインレベルに到達するまでの時間（秒単位）",
        "susRatio": "Number: (オプション)0から1のスケールでのattackLevelとreleaseLevelの比率で、1.0 = attackLevel、0.0 = releaseLevelです。susRatioはdecayLevelとエンベロープのsustain部分が維持されるレベルを決定します。たとえば、attackLevelが0.4、releaseLevelが0で、susAmtが0.5の場合、decayLevelは0.2になります。<code>setRange</code>を使用してattackLevelを1.0に増やすと、decayLevelも比例して増加して0.5になります。",
        "releaseTime": "Number: (オプション)今から何秒後にリリースするか（デフォルトは0）"
      }
    },
    "setRange": {
      "description": [
        "エンベロープの最大（attackLevel）と最小（releaseLevel）を設定します。"
      ],
      "params": {
        "aLevel": "Number: 攻撃レベル（デフォルトは1）",
        "rLevel": "Number: リリースレベル（デフォルトは0）"
      }
    },
    "setInput": {
      "description": [
        "このエンベロープによって制御されるパラメーターを割り当てます。p5.Soundオブジェクトが指定された場合、p5.Envelopeはその出力ゲインを制御します。複数の入力が指定された場合、envはそれらすべてを制御します。"
      ],
      "params": {
        "inputs": "Object: (オプション)p5.soundオブジェクトまたはWeb Audio Param。"
      }
    },
    "setExp": {
      "description": [
        "エンベロープのランプが線形（デフォルト）または指数関数であるかを設定します。振幅と周波数は対数的に認識されるため、指数関数のランプは有用です。"
      ],
      "params": {
        "isExp": "Boolean: trueは指数関数、falseは線形です"
      }
    },
    "play": {
      "description": [
        "Playは、指定された入力に作用し始めるようにエンベロープに指示します。入力がp5.soundオブジェクト（つまり、AudioIn、Oscillator、SoundFileなど）である場合、Envelopeはその出力音量を制御します。エンベロープはまた、任意の<a href=\"http://docs.webplatform.org/wiki/apis/webaudio/AudioParam\">Web Audio Audio Param</a>を制御するために使用できます。"
      ],
      "params": {
        "unit": "Object: p5.soundオブジェクトまたはWeb Audio Param。",
        "startTime": "Number: (オプション)再生する時間（秒単位）。",
        "sustainTime": "Number: (オプション)エンベロープを解除する前に保持する時間"
      }
    },
    "triggerAttack": {
      "description": [
        "AttackとDecayの部分をトリガーします。ピアノのキーを押し続けるのと似ていますが、解放するまでサステインレベルを保持します。入力は、p5.soundオブジェクトまたは<a href=\"http://docs.webplatform.org/wiki/apis/webaudio/AudioParam\">Web Audio Param</a>のいずれかです。"
      ],
      "params": {
        "unit": "Object: p5.soundオブジェクトまたはWeb Audio Param",
        "secondsFromNow": "Number: 今から何秒後にトリガーするか（秒単位）"
      }
    },
    "triggerRelease": {
      "description": [
        "エンベロープのリリースをトリガーします。これは、ピアノのキーを解放して、リリースレベルとリリース時間に従って音がフェードアウトするのと似ています。"
      ],
      "params": {
        "unit": "Object: p5.soundオブジェクトまたはWeb Audio Param",
        "secondsFromNow": "Number: リリースをトリガーする時間"
      }
    },
    "ramp": {
      "description": [
        "最初の2つの値を使用して指数関数的に値を増加または減少させる。<code><a href=\"#/p5.Envelope/setADSR\">setADSR(attackTime, decayTime)</a></code> から時間定数を取得する。現在の値よりも高い場合はattackTimeを、低い場合はdecayTimeを使用する。簡単な指数関数的なランプに対して<a href=\"https://en.wikipedia.org/wiki/RC_time_constant\">RC時間定数</a>が使用される。"
      ],
      "params": {
        "unit": "Object: p5.soundオブジェクトまたはWeb Audio Paramオブジェクト",
        "secondsFromNow": "Number: ランプを開始する時間（現在時刻からの経過秒数）",
        "v": "Number: 目標値",
        "v2": "Number: (オプション)2番目の目標値"
      }
    },
    "add": {
      "description": [
        "p5.Oscillatorの出力振幅に値を追加し、Oscillatorを返します。このメソッドを再度呼び出すと、最初のadd（）が新しい値で上書きされます。"
      ],
      "returns": "p5.Envelope: スケーリングされた出力を持つEnvelopeを返します。",
      "params": {
        "number": "Number: 追加する定数"
      }
    },
    "mult": {
      "description": [
        "p5.Envelopeの出力振幅を固定値で乗算します。このメソッドを再度呼び出すと、最初のmult（）が新しい値で上書きされます。"
      ],
      "returns": "p5.Envelope: スケーリングされた出力を持つEnvelopeを返します。",
      "params": {
        "number": "Number: 乗算する定数"
      }
    },
    "scale": {
      "description": [
        "このエンベロープの振幅値を指定された範囲にスケールし、エンベロープを返します。このメソッドを再度呼び出すと、最初のscale（）が新しい値で上書きされます。"
      ],
      "returns": "p5.Envelope: スケーリングされた出力を持つEnvelopeを返します。",
      "params": {
        "inMin": "Number: 入力範囲の最小値",
        "inMax": "Number: 入力範囲の最大値",
        "outMin": "Number: 出力範囲の最小値",
        "outMax": "Number: 出力範囲の最大値"
      }
    }
  },
  "p5.Noise": {
    "description": [
      "Noiseはランダムな値を生成するタイプの発振器です。"
      ],
    "params": {
      "type": "String: ノイズのタイプを指定します。'white' (デフォルト値), 'brown' もしくは 'pink' が指定できます。"
    },
    "setType": {
      "description": [
        "ノイズのタイプを 'white', 'pink', 'brown' のいずれかに設定します。デフォルトは 'white' です。"
      ],
      "params": {
        "type": "String: (オプション) 'white', 'pink', 'brown' のいずれかを指定します。"
      }
    }
  },
  "p5.Pulse": {
    "description": [
      "Pulseオブジェクトを作成します。Pulseオブジェクトは、パルス幅変調を実装するオシレーターです。このオブジェクトは、2つのオシレーターを使用して作成されます。周波数のパラメータを受け取り、パルス間の幅を設定できます。全てのメソッドのリストについては<a href=\"http://p5js.org/reference/#/p5.Oscillator\"> <code>p5.Oscillator</code>を参照してください。</a>"
    ],
    "params": {
      "freq": "Number: (Optional) 周波数（Hz）(省略可能)",
      "w": "Number: (Optional) パルス間の幅 (0から1.0まで、デフォルトは0)"
    },
    "width": {
      "description": [
        "Pulseオブジェクトの幅を設定します。"
      ],
      "params": {
        "width": "Number: (Optional) パルス間の幅 (0から1.0まで、デフォルトは0)"
      }
    }
  },
  "p5.AudioIn": {
    "description": [
      "p5.AudioIn を使うと、コンピュータのマイクなどの音声入力を取得できます。",
      "start() メソッドと stop() メソッドを使って、マイクのオン／オフを切り替えることができます。マイクがオンになっていると、getLevel メソッドや FFT オブジェクトを接続することで、音量を測定できます。",
      "AudioIn を聴くには、.connect() メソッドを使って接続する必要があります。フィードバックを防止するため、AudioIn はデフォルトで p5.sound の出力に接続されません。",
      "<em>注: これには<a href=\"http://caniuse.com/stream\">getUserMedia/ Stream</a> API が使用されており、一部のブラウザでサポートされていません。 Chrome ブラウザでのアクセスは、localhost と https に限定されていますが、http 経由でのアクセスも制限される場合があります。</em>"
    ],
    "params": {
      "errorCallback": "Function: (オプション) AudioIn にアクセスできなかった場合に呼び出す関数。たとえば、Safari や iOS デバイスでは、現在のところマイクのアクセスが許可されていません。"
    },
    "input": {},
    "output": {},
    "stream": {},
    "mediaStream": {},
    "currentSource": {},
    "enabled": {
      "description": [
        "クライアントがブラウザにマイク/オーディオ入力ソースへのアクセスを許可する必要があります。デフォルト値は false です。クライアントがアクセスを許可すると true になります。"
      ]
    },
    "amplitude": {
      "description": [
        "入力振幅。デフォルトではマスター出力には接続されていますが、接続されていません。"
      ]
    },
    "start": {
      "description": [
        "オーディオ入力処理を開始します。これにより、getLevel() などの他の AudioIn メソッドを使用できるようになります。デフォルトでは、AudioIn は p5.sound の出力に接続されていないため、connect() メソッドを使用しない限り、何も聞こえません。<br/>",
        "一部のブラウザは、ユーザーのマイクへのアクセスを制限しています。たとえば、Chrome では localhost と https からのアクセスのみ許可されています。このため、mic アクセスが提供されない場合に呼び出される errorCallback（関数）を含めた方が良い場合があります。"
      ],
      "params": {
        "successCallback": "Function: (オプション) 成功時に呼び出す関数の名前。",
        "errorCallback": "Function: (オプション) エラーが発生した場合に呼び出す関数の名前。たとえば、一部のブラウザは getUserMedia をサポートしていないため、この関数が呼び出される場合があります。"
      }
    },
    "stop": {
      "description": [
        "AudioIn をオフにします。AudioIn が停止している場合は、getLevel() を使用できません。再開する場合は、ユーザーにアクセス許可を求めることがあります。"
      ]
    },
    "connect": {
      "description": [
        "オーディオユニットに接続します。パラメータが提供されない場合は、メイン出力（スピーカー）に接続します。<br/>"
      ],
      "params": {
        "unit": "Object: (オプション) FFT など、オーディオ入力を受け入れるオブジェクト"
      }
    },
    "disconnect": {
      "description": [
        "AudioIn をすべてのオーディオユニットから切断します。たとえば、connect() が呼び出されていた場合、disconnect() を呼び出すことでスピーカーに信号を送信するのを停止します。<br/>"
      ]
    },
    "getLevel": {
      "description": [
        "AudioIn の Amplitude（音量レベル）を読み取ります。AudioIn クラスには、マイクの音量レベルを簡単に取得するための Amplitude クラスのインスタンスが含まれています。オプションのスムージング値（0.0 < 1.0）を受け取ります。<em>注意: AudioIn は .start() 後に .getLevel() を使用する必要があります。</em><br/>"
      ],
      "returns": "Number: 音量レベル（0.0 から 1.0 の間）",
      "params": {
        "smoothing": "Number: (オプション) スムージングはデフォルトで 0.0 です。以前の値に基づいて値を平滑化します。"
      }
    },
    "amp": {
      "description": [
        "マイク入力の振幅（音量）を 0 から 1.0 の範囲で設定します。 <br/>"
      ],
      "params": {
        "vol": "Number:0 から 1.0 の間の値",
        "time": "Number: (オプション) ランプ時間(オプション)"
      }
    },
    "getSources": {
      "description": [
        "利用可能な入力ソースのリストを返します。これは <a href=\"https://developer.mozilla.org/ en-US/docs/Web/API/MediaDevices/enumerateDevices\" target=\"_blank\">MediaDevices.enumerateDevices() - Web APIs | MDN</a> のラッパーで、Promise を返します。"
      ],
      "returns": "Promise: コールバックの代わりに使用できる Promise が返されます。enumerateDevices() メソッドと同様です",
      "params": {
        "successCallback": "Function: (オプション) デバイスリスト配列を唯一の引数として受け取るコールバック関数。",
        "errorCallback": "Function: (オプション) エラーメッセージを受け取るオプションのコールバック関数。"
      }
    },
    "setSource": {
      "description": [
        "入力ソースを設定します。getSources() が返す配列内の位置を表す数値を受け入れます。これは、<a href=\"https://developer.mozilla.org/ en-US/docs/Web/API/MediaDevices/enumerateDevices\" target=\"_blank\">navigator.mediaDevices.enumerateDevices()</a> をサポートしているブラウザでのみ利用可能です。"
      ],
      "params": {
        "num": "Number: 配列内の入力ソースの位置"
      }
    }
  },
  "p5.Effect": {
    "description": [
      "Effectは、p5.jsにおけるオーディオエフェクトの基本クラスです。このモジュールは、現在および将来のエフェクトに共通で有用なノードとメソッドを処理します。",
      "このクラスは、<a href=\"/reference/#/p5.Distortion\">p5.Distortion</a>、<a href=\"/reference/#/p5.Compressor\">p5.Compressor</a>、<a href=\"/reference/#/p5.Delay\">p5.Delay</a>、<a href=\"/reference/#/p5.Filter\">p5.Filter</a>、<a href=\"/reference/#/p5.Reverb\">p5.Reverb</a>によって拡張されます。"
    ],
    "params": {
      "ac": "Object: (オプション) p5オブジェクトのオーディオコンテキストへの参照",
      "input": "AudioNode: (オプション) Gain Nodeエフェクトのラッパー",
      "output": "AudioNode: (オプション) Gain Nodeエフェクトのラッパー",
      "_drywet": "Object: (オプション) Tone.JS CrossFadeノード (デフォルト値: 1)",
      "wet": "AudioNode: (オプション) このクラスを拡張するエフェクトは、ドライ信号とウェット信号を適切にミックスするために、このゲインノードにウェット信号を接続する必要があります。"
    },
    "amp": {
      "description": [
        "フィルターの出力音量を設定します。"
      ],
      "params": {
        "vol": "Number: (オプション) 0から1.0の振幅",
        "rampTime": "Number: (オプション) rampTimeまで続くフェードを作成します",
        "tFromNow": "Number: (オプション) このイベントがtFromNow秒後に発生するようにスケジュールします"
      }
    },
    "chain": {
      "description": [
        "エフェクトをチェーンで接続します。使用例: filter.chain(reverb, delay, panner); 任意の数の引数で使用できます"
      ],
      "params": {
        "arguments": "Object: (オプション) 複数の音声オブジェクトをチェーンで接続します"
      }
    },
    "drywet": {
      "description": [
        "ドライ/ウェット値を調整します。"
      ],
      "params": {
        "fade": "Number: (オプション) 指定されたドライ/ウェット値（0〜1.0）"
      }
    },
    "connect": {
      "description": [
        "出力をp5.js-sound、Webオーディオノードに送信したり、信号を使用してAudioParamを制御したりします。"
      ],
      "params": {
        "unit": "Object"
      }
    },
    "disconnect": {
      "description": [
        "すべての出力を切断します。"
      ]
    }
  },
  "p5.Filter": {
    "description": [
      "p5.Filterは、入力ソースの周波数応答をフィルタリングするためにWeb Audio Biquad Filterを使用します。サブクラスには以下が含まれます： <a href=\"/reference/#/p5.LowPass\"><code>p5.LowPass</code></a>: カットオフ周波数以下の周波数を通過させ、カットオフ周波数以上の周波数を減衰させます。<br/> <a href=\"/reference/#/p5.HighPass\"><code>p5.HighPass</code></a>: ローパスフィルターの反対です。 <br/> <a href=\"/reference/#/p5.BandPass\"><code>p5.BandPass</code></a>: 一定の周波数範囲を通過させ、この周波数範囲より低い周波数と高い周波数を減衰させます。<br/>",
      "<code>.res()</code>メソッドは、バンドパスの幅または低/高周波数の共鳴を制御します。",
      "このクラスは<a href=\"/reference/#/p5.Effect\">p5.Effect</a>を拡張しています。メソッド<a href=\"/reference/#/p5.Effect/amp\">amp()</a>、<a href=\"/reference/#/p5.Effect/chain\">chain()</a>、<a href=\"/reference/#/p5.Effect/drywet\">drywet()</a>、<a href=\"/reference/#/p5.Effect/connect\">connect()</a>、<a href=\"/reference/#/p5.Effect/disconnect\">disconnect()</a>が利用可能です。"
    ],
    "params": {
      "type": "String: (オプション) 'lowpass' (デフォルト)、'highpass'、'bandpass'"
    },
    "biquadFilter": {
      "description": [
        "p5.Filterは<a href=\"http://www.w3.org/TR/webaudio/#BiquadFilterNode\">Web Audio BiquadFilter Node</a>を使用して構築されます。"
      ]
    },
    "process": {
      "description": [
        "一連のフィルタパラメーターに基づいてオーディオ信号をフィルタリングします。"
      ],
      "params": {
        "Signal": "Object: オーディオを出力するオブジェクト",
        "freq": "Number: (オプション) 10から22050Hzまでの周波数",
        "res": "Number: (オプション) 0.001から1000までのフィルタ周波数の共鳴/幅"
      }
    },
    "set": {
      "description": [
        "フィルタの周波数と共鳴を設定します。"
      ],
      "params": {
        "freq": "Number: (オプション) 10から22050Hzまでの周波数",
        "res": "Number: (オプション) 0.001から1000までの共鳴率（Q）",
        "timeFromNow": "Number: (オプション) このイベントを何秒後に予定するか"
      }
    },
    "freq": {
      "description": [
        "フィルタの周波数を設定します。周波数は10から22050Hzの範囲で設定できます（人間の聴覚範囲の範囲ですが、実際には多くの人がより狭い範囲で聞くことができます）。"
      ],
      "returns": "Number: 現在の周波数値を返します",
      "params": {
        "freq": "Number: フィルタ周波数",
        "timeFromNow": "Number: (オプション) このイベントを何秒後に予定するか"
      }
    },
    "res": {
      "description": [
        "バンドパス周波数の幅または低/高通過周波数の共鳴を制御します。"
      ],
      "returns": "Number: 現在のres値を返します",
      "params": {
        "res": "Number: フィルタ周波数の共鳴/幅、0.001から1000まで",
        "timeFromNow": "Number: (オプション) このイベントを何秒後に予定するか"
      }
    },
    "gain": {
      "description": [
        "Biquadフィルターのゲイン属性を制御します。これはp5.Effectから継承される.amp()とは異なります。.amp()は出力ゲインノードを介して音量を制御し、p5.Filter.gain()はBiquadフィルターノードのゲインパラメーターを制御します。"
      ],
      "returns": "Number: 現在のまたは更新されたゲイン値を返します",
      "params": {
        "gain": "Number"
      }
    },
    "toggle": {
      "description": [
        "トグル関数。指定されたタイプとオールパスの間を切り替えます。"
      ],
      "returns": "Boolean: [トグル値]"
    },
    "setType": {
      "description": [
        "p5.Filterのタイプを設定します。可能なタイプには、「lowpass」（デフォルト）、 「highpass」、「bandpass」、「lowshelf」、「highshelf」、「peaking」、「notch」、「allpass」があります。"
      ],
      "params": {
        "t": "String"
      }
    }
  },
  "p5.LowPass": {
    "description": [
      "コンストラクタ: <code>new p5.LowPass()</code> フィルター。これは p5.Filter を作成してからそのメソッド <code>setType('lowpass')</code> を呼び出すのと同じです。メソッドについては p5.Filter を参照してください。"
    ]
  },
  "p5.HighPass": {
    "description": [
      "コンストラクタ: <code>new p5.HighPass()</code> フィルター。これは p5.Filter を作成してからそのメソッド <code>setType('highpass')</code> を呼び出すのと同じです。メソッドについては p5.Filter を参照してください。"
    ]
  },
  "p5.BandPass": {
    "description": [
      "コンストラクタ: <code>new p5.BandPass()</code> フィルター。これは p5.Filter を作成してからそのメソッド <code>setType('bandpass')</code> を呼び出すのと同じです。メソッドについては p5.Filter を参照してください。"
    ]
  },
  "p5.EQ": {
    "description": [
      "p5.EQ は、マルチバンドオーディオイコライザーの機能を実行するオーディオエフェクトです。イコライゼーションは、オーディオ信号の周波数成分のバランスを調整するために使用されます。このプロセスは、サウンドプロダクションや録音で、サウンド出力デバイスに到達する前に波形を変更するために一般的に使用されます。EQ は、スペクトルの一部をフィルタリングすることによって興味深い歪みを作成するためのオーディオエフェクトとしても使用できます。p5.EQ は、Web Audio Biquad Filter Nodes のチェーンを使用して構築され、3 または 8 バンドでインスタンス化できます。EQ からバンドを追加または削除するには、p5.EQ.bands（フィルターを格納する配列）を直接変更します。",
      "このクラスは <a href = \"/reference/#/p5.Effect\">p5.Effect</a> を拡張します。メソッド <a href = \"/reference/#/p5.Effect/amp\">amp()</a>、<a href = \"/reference/#/p5.Effect/chain\">chain()</a>、<a href = \"/reference/#/p5.Effect/drywet\">drywet()</a>、<a href = \"/reference/#/p5.Effect/connect\">connect()</a>、および <a href=\"/reference/#/p5.Effect/disconnect\">disconnect()</a> が使用可能です。"
    ],
    "returns": "Object: p5.EQ オブジェクト",
    "params": {
      "_eqsize": "Number: (オプション) 3 または 8 を受け付けるコンストラクタ。デフォルトは 3 です。"
    },
    "bands": {
      "description": [
        "p5.EQ は、抽象化された p5.Filter オブジェクトで構築されています。バンドを変更するには、<a href=\"/reference/#/p5.Filter\" title=\"p5.Filter reference\"> p5.Filter</a> API のメソッド、特に <code>gain</code> および <code>freq</code> を使用します。バンドは、0 から 3、または 0 から 7 のインデックスで配列に格納されます。"
      ]
    },
    "process": {
      "description": [
        "入力を EQ に接続して処理します。"
      ],
      "params": {
        "src": "Object: オーディオソース"
      }
    }
  },
  "p5.Panner3D": {
    "description": [
      "Panner3Dは<a title=\"Web Audio Panner docs\" href= \"https://developer.mozilla.org/en-US/docs/Web/API/PannerNode\"> Web Audio Spatial Panner Node</a>に基づいています。このパナーは、音声を3D空間に配置および方向付けするための空間処理ノードです。",
      "位置は<a title=\"Web Audio Listener docs\" href= \"https://developer.mozilla.org/en-US/docs/Web/API/AudioListener\">Audio Context Listener</a>に相対的で、<code>p5.soundOut.audiocontext.listener</code>によってアクセスできます。"
    ],
    "panner": {
      "description": [
        "<a title=\"Web Audio Panner docs\" href= \"https://developer.mozilla.org/en-US/docs/Web/API/PannerNode\"> Web Audio Spatial Panner Node</a>",
        "プロパティには<a href=\"https://www.w3.org/TR/webaudio/#idl-def-PanningModelType\">Panning Model</a>: \"equal power\"または\"HRTF\"、<a href=\"https://www.w3.org/TR/webaudio/#idl-def-DistanceModelType\">DistanceModel</a>: \"linear\"、\"inverse\"、または\"exponential\"が含まれます。"
      ]
    },
    "process": {
      "description": [
        "オーディオソースを接続します。"
      ],
      "params": {
        "src": "Object: 入力ソース"
      }
    },
    "set": {
      "description": [
        "パナーのX、Y、Z座標を設定します。"
      ],
      "returns": "Array: 更新されたx、y、z値を配列として返します。",
      "params": {
        "xVal": "Number",
        "yVal": "Number",
        "zVal": "Number",
        "time": "Number"
      }
    },
    "positionX": {
      "description": [
        "座標のゲッターとセッターメソッドです。"
      ],
      "returns": "Number: 更新された座標値を返します。"
    },
    "positionY": {
      "description": [
        "座標のゲッターとセッターメソッドです。"
      ],
      "returns": "Number: 更新された座標値を返します。"
    },
    "positionZ": {
      "description": [
        "座標のゲッターとセッターメソッドです。"
      ],
      "returns": "Number: 更新された座標値を返します。"
    },
    "orient": {
      "description": [
        "パナーのX、Y、Z座標を設定します。"
      ],
      "returns": "Array: 更新されたx、y、z値を配列として返します。",
      "params": {
        "xVal": "Number",
        "yVal": "Number",
        "zVal": "Number",
        "time": "Number"
      }
    },
    "orientX": {
      "description": [
        "方向座標のゲッターとセッターメソッドです。"
      ],
      "returns": "Number: 更新された座標値を返します。"
    },
    "orientY": {
      "description": [
        "方向座標のゲッターとセッターメソッドです。"
      ],
      "returns": "Number: 更新された座標値を返します。"
    },
    "orientZ": {
      "description": [
        "方向座標のゲッターとセッターメソッドです。"
      ],
      "returns": "Number: 更新された座標値を返します。"
    },
    "setFalloff": {
      "description": [
        "減衰率と最大距離を設定します。"
      ],
      "params": {
        "maxDistance": "Number (オプション)",
        "rolloffFactor": "Number (オプション)"
      }
    },
    "maxDist": {
      "description": [
        "音源とリスナー間の最大距離"
      ],
      "returns": "Number: 更新された値",
      "params": {
        "maxDistance": "Number"
      }
    },
    "rollof": {
      "description": [
        "音源がリスナーから遠ざかるにつれて音量がどのように減衰するかを示す値です。"
      ],
      "returns": "Number: 更新された値",
      "params": {
        "rolloffFactor": "Number"
      }
    }
  },
  "p5.Delay": {
    "description": [
      "Delayはエコー効果を持つエフェクトです。既存の音源を処理し、その音源の遅延バージョンを出力します。p5.DelayはdelayTime、feedback、filter、typeによって異なる効果を生み出すことができます。以下の例では、フィードバック0.5（デフォルト値）でループする遅延が作成され、各繰り返しで音量が50％ずつ減少します。フィルターは高周波をカットするため、遅延が元の音源と同様に刺すような音になりません。",
      "このクラスは<a href = \"/reference/#/p5.Effect\">p5.Effect</a>を拡張しています。メソッド<a href = \"/reference/#/p5.Effect/amp\">amp()</a>、<a href = \"/reference/#/p5.Effect/chain\">chain()</a>、<a href = \"/reference/#/p5.Effect/drywet\">drywet()</a>、<a href = \"/reference/#/p5.Effect/connect\">connect()</a>、<a href = \"/reference/#/p5.Effect/disconnect\">disconnect()</a>が使用可能です。"
    ],
    "leftDelay": {
      "description": [
        "p5.Delayは2つのWeb Audio Delay Nodesを使用して構築されており、各ステレオチャンネル用に1つずつあります。"
      ]
    },
    "rightDelay": {
      "description": [
        "p5.Delayは2つのWeb Audio Delay Nodesを使用して構築されており、各ステレオチャンネル用に1つずつあります。"
      ]
    },
    "process": {
      "description": [
        "設定した遅延パラメータに応じてオーディオ信号に遅延を追加します。"
      ],
      "params": {
        "Signal": "Object: オーディオを出力するオブジェクト",
        "delayTime": "Number: (オプション)遅延/エコーの時間（秒）。一部のブラウザはdelayTimeを1秒に制限しています。",
        "feedback": "Number: (オプション)ループ内で遅延を自己に送信し、各繰り返しで音量が低下します。",
        "lowPass": "Number: (オプション)カットオフ周波数。lowPass以下の周波数のみが遅延の一部になります。"
      }
    },
    "delayTime": {
      "description": [
        "エコーの遅延時間を秒単位で設定します。通常、この値は0.0から1.0の間の浮動小数点数になります。"
      ],
      "params": {
        "delayTime": "Number: エコーの遅延時間（秒単位）"
      }
    },
    "feedback": {
      "description": [
        "遅延が自己にループバックすると、フィードバックが発生します。フィードバック量は、ループを通るたびに送信する信号の量を決定します。フィードバックが1.0を超えると、全体の出力がループを通るたびに増加し、無限のフィードバックループが作成されます。デフォルト値は0.5です。"
      ],
      "returns": "Number: フィードバック値",
      "params": {
        "feedback": "Number|Object: 0.0から1.0までの値、またはこのパラメータを変調するために使用できるオシレーターなどのオブジェクト"
      }
    },
    "filter": {
      "description": [
        "遅延用のローパスフィルター周波数を設定します。ローパスフィルターは、フィルター周波数より高い周波数をカットオフします。"
      ],
      "params": {
        "cutoffFreq": "Number|Object: フィルター周波数より高い周波数をカットオフするローパスフィルター。",
        "res": "Number|Object: フィルター周波数の共鳴、またはこのパラメータを変調するために使用できるオブジェクト（例：p5.Oscillator）"
      }
    },
    "setType": {
      "description": [
        "遅延のプリセットタイプを選択します。'pingPong'は、信号を左から右のチャンネルに跳ね返してステレオ効果を生成します。それ以外のパラメーターは、デフォルトの遅延設定に戻ります。"
      ],
      "params": {
        "type": "String|Number: 'pingPong' (1) または 'default' (0)"
      }
    },
    "amp": {
      "description": [
        "遅延効果の出力レベルを設定します。"
      ],
      "params": {
        "volume": "Number: 0から1.0の振幅",
        "rampTime": "Number: (オプション)rampTimeが持続するフェードを作成します",
        "timeFromNow": "Number: (オプション)このイベントが何秒後に発生するようにスケジュールするか"
      }
    },
    "connect": {
      "description": [
        "出力をp5.soundまたはWeb Audioオブジェクトに送信します。"
      ],
      "params": {
        "unit": "Object"
      }
    },
    "disconnect": {
      "description": [
        "すべての出力を切断します。"
      ]
    }
  },
  "p5.Reverb": {
    "description": [
      "p5.Reverbは、多数の減衰するエコーを通じて音に深みを与えます。それにより、音が物理的な空間で発生しているという知覚を生み出します。p5.Reverbには、.set()や.process()メソッドで設定できるTime(リバーブの持続時間)やdecayRate(各エコーで音がどの程度減衰するか)のパラメータがあります。p5.Convolverはp5.Reverbを拡張し、畳み込みによって実際の物理的な空間の音を再現することができます。",
      "このクラスは<a href=\"/reference/#/p5.Effect\">p5.Effect</a>を拡張しています。メソッド<a href=\"/reference/#/p5.Effect/amp\">amp()</a>、<a href=\"/reference/#/p5.Effect/chain\">chain()</a>、<a href=\"/reference/#/p5.Effect/drywet\">drywet()</a>、<a href=\"/reference/#/p5.Effect/connect\">connect()</a>、<a href=\"/reference/#/p5.Effect/disconnect\">disconnect()</a>が使用可能です。"
    ],
    "process": {
      "description": [
        "ソースをリバーブに接続し、リバーブのパラメータを割り当てます。"
      ],
      "params": {
        "src": "Object: p5.sound / Web Audioオブジェクト（サウンド出力）。",
        "seconds": "Number: (オプション)リバーブの持続時間（秒単位）。最小値：0、最大値：10。デフォルトは3。",
        "decayRate": "Number: (オプション)各エコーでの減衰の割合。最小値：0、最大値：100。デフォルトは2。",
        "reverse": "Boolean: (オプション)リバーブを逆再生または順再生するかどうか。"
      }
    },
    "set": {
      "description": [
        "リバーブの設定を設定します。.process()と似ていますが、新しい入力を割り当てません。"
      ],
      "params": {
        "seconds": "Number: (オプション)リバーブの持続時間（秒単位）。最小値：0、最大値：10。デフォルトは3。",
        "decayRate": "Number: (オプション)各エコーでの減衰の割合。最小値：0、最大値：100。デフォルトは2。",
        "reverse": "Boolean:(オプション)リバーブを逆再生または順再生するかどうか。"
      }
    },
    "amp": {
      "description": [
        "リバーブ効果の出力レベルを設定します。"
      ],
      "params": {
        "volume": "Number: 0から1.0の振幅",
        "rampTime": "Number: (オプション)rampTime秒続くフェードを作成します。",
        "timeFromNow": "Number: (オプション)このイベントを、timeFromNow秒後にスケジュールします。"
      }
    },
    "connect": {
      "description": [
        "出力をp5.soundまたはWebオーディオオブジェクトに送信します。"
      ],
      "params": {
        "unit": "Object"
      }
    },
    "disconnect": {
      "description": [
        "すべての出力を切断します。"
      ]
    }
  },
  "p5.Convolver": {
    "description": [
      "p5.Convolverは、p5.Reverbを拡張したものです。これは、<a href=\" https://en.wikipedia.org/wiki/Convolution_reverb#Real_space_simulation\"> 畳み込み</a>と呼ばれるプロセスを通じて、現実の物理空間の音を模擬することができます。",
      "畳み込みは、任意のオーディオ入力を「インパルス応答」と呼ばれるもので乗算することによって、音が時間的にどのように分散するかをシミュレートします。インパルス応答は、提供したオーディオファイルから生成されます。インパルス応答を生成する方法の一つは、残響のある空間で風船を割ってエコーを録音することです。畳み込みは音の実験にも使用できます。",
      "<code>createConvolution(path)</code>メソッドを使用して、インパルス応答オーディオファイルへのパスを指定してp5.Convolverをインスタンス化します。"
    ],
    "params": {
      "path": "String: サウンドファイルへのパス",
      "callback": "Function: （オプション）ロードが成功した場合に呼び出す関数",
      "errorCallback": "Function: （オプション）ロードに失敗した場合に呼び出す関数。この関数はエラーまたはXMLHttpRequestオブジェクトを受け取り、何が問題だったかに関する情報が含まれます。"
    },
    "convolverNode": {
      "description": [
        "内部的に、p5.Convolverは<a href=\"http://www.w3.org/TR/webaudio/#ConvolverNode\"> Web Audio Convolver Node</a>を使用しています。"
      ]
    },
    "impulses": {
      "description": [
        "複数のインパルスファイルを.addImpulseメソッドを使用してロードすると、これらはオブジェクトとしてこの配列内に保存されます。<code>toggleImpulse(id)</code>メソッドを使用して、これらのオブジェクトの間を切り替えることができます。"
      ]
    },
    "process": {
      "description": [
        "ソースをコンボリューションに接続します。"
      ],
      "params": {
        "src": "Object: 音声出力を持つp5.sound / Web Audioオブジェクト。"
      }
    },
    "addImpulse": {
      "description": [
        "新しいインパルス応答をロードして割り当てます。インパルスは<code>.impulses</code>配列に追加され、<code>.toggleImpulse(id)</code>メソッドを使用して前のインパルスに切り替えることができます。"
      ],
      "params": {
        "path": "String: サウンドファイルへのパス",
        "callback": "Function: 関数（オプション）",
        "errorCallback": "Function: 関数（オプション）"
      }
    },
    "resetImpulse": {
      "description": [
        ".addImpulseと似ていますが、メモリを節約するために<code>.impulses</code>配列がリセットされます。新しい<code>.impulses</code>配列が作成され、このインパルスが唯一の項目として保存されます。"
      ],
      "params": {
        "path": "String: サウンドファイルへのパス",
        "callback": "Function: 関数（オプション）",
        "errorCallback": "Function: 関数（オプション）"
      }
    },
    "toggleImpulse": {
      "description": [
        "<code>.addImpulse()</code>を使用して、複数のインパルスをp5.Convolverに追加した場合は、このメソッドを使用して<code>.impulses</code>配列内の項目を切り替えることができます。使用するインパルスを識別するためにパラメータを受け取ります。インパルスは、元のファイル名（文字列）または<code>.impulses</code>配列内の位置（番号）で識別できます。<br/> .impulses配列内のオブジェクトに直接アクセスできます。各オブジェクトには2つの属性があります。1つは<a href=\"http://webaudio.github.io/web-audio-api/#the-audiobuffer-interface\">WebオーディオのAudioBuffer</a>型の<code>.audioBuffer</code>で、もう1つは、元のファイル名に対応する文字列の<code>.name</code>です。"
      ],
      "params": {
        "id": "String|Number: インパルスを元のファイル名（文字列）または<code>.impulses</code>配列内の位置（数値）で識別します。"
      }
    }
  },
  "p5.Phrase": {
    "description": [
      "フレーズとは、音符や休符の系列で構成される時間的な音楽的イベントのパターンです。",
      "フレーズはp5.Partに追加して再生する必要があり、各パートで同時に複数のフレーズを再生できます。たとえば、1つのフレーズがキックドラムであり、別のフレーズがスネア、もう1つがベースラインである可能性があります。",
      "最初のパラメータは、フレーズを後で変更または削除できるように名前を指定するためのものです。コールバックは、このフレーズがステップごとに呼び出す関数です。たとえば、<code>playNote(value){}</code>と呼ばれるかもしれません。配列は、フレーズの各ステップでコールバックに渡される値を決定します。数値、複数の数値を持つオブジェクト、または0（休符）を表すことができます。"
    ],
    "params": {
      "name": "String: フレーズにアクセスするための名前。",
      "callback": "Function: このフレーズが呼び出す関数の名前。通常、サウンドを再生し、2つのパラメーター（サウンドを再生する時間（現在からの秒数）とシーケンス配列からの値）を受け入れます。正確さを保証するために、play()またはstart()メソッドに時間を渡す必要があります。",
      "sequence": "Array: フレーズの各ステップでコールバックに渡す値の配列。"
    },
    "sequence": {
      "description": [
        "フレーズの各ステップでコールバックに渡される値の配列。コールバック関数の要件に応じて、これらの値は数値、文字列、または複数のパラメーターを持つオブジェクトである場合があります。 0は休符を表します。"
      ]
    }
  },
  "p5.Part": {
    "description": [
      "p5.Partは、1つ以上のp5.Phraseを再生します。ステップとtatumsを使用してパートをインスタンス化します。デフォルトでは、各ステップは1/16拍子を表します。",
      "音楽のタイミングについては、p5.Phraseを参照してください。"
    ],
    "params": {
      "steps": "Number: (オプション) パート内のステップ数",
      "tatums": "Number: (オプション) 1拍子の分割数。例えば、四分音符の場合は1/4または0.25を使用します（デフォルトは1/16、16分音符）"
    },
    "setBPM": {
      "description": [
        "このパートのテンポを、BPM（分速）で設定します。"
      ],
      "params": {
        "BPM": "Number: Beats Per Minute",
        "rampTime": "Number: (オプション) 現在からの秒数"
      }
    },
    "getBPM": {
      "description": [
        "このパートのテンポ（BPM）を返します。"
      ],
      "returns": "Number:"
    },
    "start": {
      "description": [
        "このパートの再生を開始します。setBPMで決定された速度で、全てのフレーズを再生します。"
      ],
      "params": {
        "time": "Number: (オプション) 現在からの秒数"
      }
    },
    "loop": {
      "description": [
        "このパートの再生をループさせます。setBPMで決定された速度で、全てのフレーズをループ再生します。"
      ],
      "params": {
        "time": "Number: (オプション) 現在からの秒数"
      }
    },
    "noLoop": {
      "description": [
        "このパートのループ再生を停止します。"
      ]
    },
    "stop": {
      "description": [
        "このパートを停止し、ステップ0に戻します。再生は、パートが再度再生されたときに最初から再開されます。"
      ],
      "params": {
        "time": "Number: (オプション) 現在からの秒数"
      }
    },
    "pause": {
      "description": [
        "このパートを一時停止します。再生は現在のステップから再開されます。"
      ],
      "params": {
        "time": "Number: 現在からの秒数"
      }
    },
    "addPhrase": {
      "description": [
        "p5.Phraseをこのパートに追加します。"
      ],
      "params": {
        "phrase": "p5.Phrase: p5.Phraseへの参照"
      }
    },
    "removePhrase": {
      "description": [
        "名前が与えられたフレーズをこのパートから削除します。"
      ],
      "params": {
        "phraseName": "String"
      }
    },
    "getPhrase": {
      "description": [
        "名前が与えられたフレーズを、このパートから取得します。これにより、フレーズの配列を修正できます。"
      ],
      "params": {
        "phraseName": "String"
      }
    },
    "replaceSequence": {
      "description": [
        "指定された名前を持つすべてのシーケンスを検索し、そのパターンを指定された配列で置き換えます。"
      ],
      "params": {
        "phraseName": "String",
        "sequence": "Array: フレーズの各ステップでコールバックに渡す値の配列。"
      }
    },
    "onStep": {
      "description": [
        "各ステップで呼び出される関数を設定します。これにより、前の関数がクリアされます。"
      ],
      "params": {
        "callback": "Function: 各拍/分割で発火させたいコールバックの名前。"
      }
    }
  },
  "p5.Score": {
    "description": [
      "スコアは複数のパートから構成されます。パートは順番に再生されます。例えば、Aパート、Bパート、Cパートがあったとして、それらをこの順番で再生できます：<code>new p5.Score(a, a, b, a, c)</code>"
    ],
    "params": {
      "parts": "p5.Part: (オプション) 一つまたは複数のパート。順番に再生されます。"
    },
    "start": {
      "description": [
        "スコアの再生を開始します。"
      ]
    },
    "stop": {
      "description": [
        "スコアの再生を停止します。"
      ]
    },
    "pause": {
      "description": [
        "スコアの再生を一時停止します。"
      ]
    },
    "loop": {
      "description": [
        "スコアの再生をループします。"
      ]
    },
    "noLoop": {
      "description": [
        "スコアのループ再生を停止します。現在再生中の場合、再生が完了した後に効果が発揮されます。"
      ]
    },
    "setBPM": {
      "description": [
        "スコア内の全てのパートのテンポを設定します。"
      ],
      "params": {
        "BPM": "Number: 一分間あたりのビート数",
        "rampTime": "Number: 現在からの秒数"
      }
    }
  },
  "p5.SoundLoop": {
    "description": [
      "SoundLoop"
    ],
    "params": {
      "callback": "Function: ループの各反復で呼び出されるコールバック関数",
      "interval": "Number|String: (オプション) ループの各反復の時間 (数値の場合) または拍子 (文字列の場合は、<a href = \"https://github.com/Tonejs/Tone.js/wiki/Time\">Tone.Time</a> の規則に従う)。デフォルトは1秒。"
    },
    "bpm": {
      "description": [
        "値を設定すると、クロックの周波数が変更され、次のコールバックが呼ばれるまで反映されます。ビート数/分（デフォルトは60）"
      ]
    },
    "timeSignature": {
      "description": [
        "小節の4分音符の数（デフォルトは4）"
      ]
    },
    "interval": {
      "description": [
        "ループの間隔の長さ"
      ]
    },
    "iterations": {
      "description": [
        "コールバックがこれまでに呼び出された回数"
      ]
    },
    "musicalTimeMode": {
      "description": [
        "<a href = \"https://github.com/Tonejs/Tone.js/wiki/Time\">Tone.Time</a> の規則に従った曲の時間表現を使用する場合は true。数値を使用する場合は false。"
      ]
    },
    "maxIterations": {
      "description": [
        "ループを再生する回数の上限を設定します。デフォルトは無限大。"
      ]
    },
    "start": {
      "description": [
        "ループを開始します"
      ],
      "params": {
        "timeFromNow": "Number: (オプション) 開始時間をスケジュールします"
      }
    },
    "stop": {
      "description": [
        "ループを停止します"
      ],
      "params": {
        "timeFromNow": "Number: (オプション) 停止時間をスケジュールします"
      }
    },
    "pause": {
      "description": [
        "ループを一時停止します"
      ],
      "params": {
        "timeFromNow": "Number: (オプション) 一時停止時間をスケジュールします"
      }
    },
    "syncedStart": {
      "description": [
        "複数のループを同期させます。2つ以上のループを同期して開始する場合、またはすでに再生されているループと同期してループを開始する場合に、このメソッドを使用します。このメソッドは、暗黙的なループを明示的なマスターループと同期してスケジュールします。すなわち、loopToStart.syncedStart(loopToSyncWith)。"
      ],
      "params": {
        "otherLoop": "Object: 同期させる p5.SoundLoop オブジェクト",
        "timeFromNow": "Number: (オプション) timeFromNow 秒後にループを同期して開始します"
      }
    }
  },
  "p5.Compressor": {
    "description": [
      "Compressorは、音声入力ソースに対してダイナミックなコンプレッションを実行するオーディオエフェクトクラスです。これは音楽や音声制作に非常に一般的に使用される技術です。コンプレッションは、ラウドな音を下げ、ソフトな音を上げることにより、全体的により大きく、豊かで、フルな音を作り出します。コンプレッションは、音量のピークによる音の歪みであるクリッピングを避けるために使用され、特に多くの音が同時に再生される場合に特に有用です。コンプレッションは、メイン出力に加えて、個々の音源にも使用できます。",
      "このクラスは、<a href=\"/reference/#/p5.Effect\">p5.Effect</a>を拡張します。メソッド<a href=\"/reference/#/p5.Effect/amp\">amp()</a>、<a href=\"/reference/#/p5.Effect/chain\">chain()</a>、<a href=\"/reference/#/p5.Effect/drywet\">drywet()</a>、<a href=\"/reference/#/p5.Effect/connect\">connect()</a>、および<a href=\"/reference/#/p5.Effect/disconnect\">disconnect()</a>が使用可能です。"
    ],
    "compressor": {
      "description": [
        "p5.Compressorは、<a href=\"https://www.w3.org/TR/webaudio/#the-dynamicscompressornode-interface\"  target=\"_blank\" title=\"W3 spec for Dynamics Compressor Node\">Web Audio Dynamics Compressor Node</a>で構築されています。"
      ]
    },
    "process": {
      "description": [
        "connectと同じ機能を実行しますが、コンプレッサーのaudioParamsを設定するためのオプションパラメーターを受け取ることもできます。"
      ],
      "params": {
        "src": "Object: 接続するサウンドソース",
        "attack": "Number: (オプション) ゲインを10dB減少させる時間（秒単位）、デフォルトは.003、範囲は0-1",
        "knee": "Number: (オプション) しきい値よりも上の範囲を表すデシベル値で、カーブが「ratio」部分に滑らかに移行する範囲を表します。デフォルトは30、範囲は0-40",
        "ratio": "Number: (オプション) 出力の1dBの変化に対して入力が変化するdBの量を表します デフォルトは12、範囲は1-20",
        "threshold": "Number: (オプション) コンプレッションが効果を発揮し始めるしきい値以上のデシベル値。デフォルトは-24、範囲は-100〜0",
        "release": "Number: (オプション) ゲインを10dB増加させる時間（秒単位）。デフォルトは.25、範囲は0-1"
      }
    },
    "set": {
      "description": [
        "コンプレッサーのパラメーターを設定します。"
      ],
      "params": {
        "attack": "Number: ゲインを10dB減少させる時間（秒単位）、デフォルトは.003、範囲は0-1",
        "knee": "Number: しきい値よりも上の範囲を表すデシベル値で、カーブが「ratio」部分に滑らかに移行する範囲を表します。デフォルトは30、範囲は0-40",
        "ratio": "Number: 出力の1dBの変化に対して入力が変化するdBの量を表します。デフォルトは12、範囲は1-20",
        "threshold": "Number: コンプレッションが効果を発揮し始めるしきい値以上のデシベル値。デフォルトは-24、範囲は-100〜0",
        "release": "Number: ゲインを10dB増加させる時間（秒単位）。デフォルトは.25、範囲は0-1"
      }
    },
    "attack": {
      "description": [
        "現在のattackを取得するか、時間ランプを使用して値を設定します。"
      ],
      "params": {
        "attack": "Number: (オプション) ゲインを10dB減少させる時間（秒単位）、デフォルトは.003、範囲は0-1",
        "time": "Number: (オプション) 値の変更をスケジュールするための時間値を指定します。"
      }
    },
    "knee": {
      "description": [
        "現在のkneeを取得するか、時間ランプを使用して値を設定します。"
      ],
      "params": {
        "knee": "Number: (オプション) しきい値よりも上の範囲を表すデシベル値で、カーブが「ratio」部分に滑らかに移行する範囲を表します。デフォルトは30、範囲は0-40",
        "time": "Number: (オプション) 値の変更をスケジュールするための時間値を指定します。"
      }
    },
    "ratio": {
      "description": [
        "現在のratioを取得するか、時間ランプを使用して値を設定します。"
      ],
      "params": {
        "ratio": "Number: (オプション) 出力の1dBの変化に対して入力が変化するdBの量を表します。デフォルトは12、範囲は1-20",
        "time": "Number: (オプション) 値の変更をスケジュールするための時間値を指定します。"
      }
    },
    "threshold": {
      "description": [
        "現在のthresholdを取得するか、時間ランプを使用して値を設定します。"
      ],
      "params": {
        "threshold": "Number: コンプレッションが効果を発揮し始めるしきい値以上のデシベル値。デフォルトは-24、範囲は-100〜0",
        "time": "Number: (オプション) 値の変更をスケジュールするための時間値を指定します。"
      }
    },
    "release": {
      "description": [
        "現在のreleaseを取得するか、時間ランプを使用して値を設定します。"
      ],
      "params": {
        "release": "Number: ゲインを10dB増加させる時間（秒単位）。デフォルトは.25、範囲は0-1",
        "time": "Number: (オプション) 値の変更をスケジュールするための時間値を指定します。"
      }
    },
    "reduction": {
      "description": [
        "現在のreduction値を返します。"
      ],
      "returns": "Number: シグナルに適用される減衰量の量の値。"
    }
  },
  "p5.PeakDetect": {
    "description": [
      "PeakDetectは、p5.FFTと連携して、周波数スペクトルの一部またはすべてでオンセットを検出します。",
      "p5.PeakDetectを使用するには、描画ループで<code>update</code>を呼び出し、p5.FFTオブジェクトを渡します。",
      "<code>freq1</code>と<code>freq2</code>の範囲を設定することで、周波数スペクトルの特定の部分を聴取できます。",
      "<code>threshold</code>はピークを検出するための閾値で、0から1までの範囲でスケールされます。対数的であり、0.1は1.0の半分の音量に相当します。",
      "<code>update</code>メソッドは、描画ループで実行されることを想定しており、<b>frames</b>は別のピークを検出する前に経過する必要のあるループ数を決定します。たとえば、frameRate() = 60の場合、次の式で120ビート/分の曲のビートを検出できます： <code> framesPerPeak = 60 / (estimatedBPM / 60 );</code>",
      "@b2rengerによるサンプルコードと、<a href=\"http://www.airtightinteractive.com/2013/10/making-audio-reactive-visuals/\" target=\"_blank\">Felix Turner</a>によるシンプルなビート検出の説明をもとにしています。"
    ],
    "params": {
      "freq1": "Number: (オプション) 低周波数 - デフォルトは20Hz",
      "freq2": "Number: (オプション) 高周波数 - デフォルトは20000 Hz",
      "threshold": "Number: (オプション) ログスケールで0から1の範囲で表されるビートを検出するための閾値。0.1は1.0の半分の大きさに相当します。デフォルトは0.35。",
      "framesPerPeak": "Number: (オプション) デフォルトは20。"
    },
    "isDetected": {
      "description": [
        "ピークが検出された場合、<code>isDetected</code>はtrueに設定されます。"
      ]
    },
    "update": {
      "description": [
        "<code>update</code>メソッドは描画ループで実行されます。",
        "FFTオブジェクトを受け入れます。ピーク検出には完了したFFT解析が必要なため、FFTオブジェクトで<code>.analyze()</code>を呼び出す必要があります。"
      ],
      "params": {
        "fftObject": "p5.FFT: p5.FFTオブジェクト"
      }
    },
    "onPeak": {
      "description": [
        "<code>onPeak</code>は2つの引数を受け取ります。ピークが検出されたときに呼び出される関数と、0.0から1.0の間のピークの値がコールバックに渡されます。"
      ],
      "params": {
        "callback": "Function: ピークが検出されたときに呼び出される関数の名前",
        "val": "Object: (オプション) ピークが検出されたときに関数に渡されるオプションの値"
      }
    }
  },
  "p5.SoundRecorder": {
    "description": [
      "再生用に録音したり、.wav ファイルとして保存するために音を記録します。p5.SoundRecorder はスケッチから出力される全ての音を記録するか、setInput() メソッドで特定のソースを割り当てることができます。",
      "record() メソッドは、p5.SoundFile をパラメーターとして受け取ります。再生が停止すると（指定された時間が経過するか、stop() メソッドで停止した後）、p5.SoundRecorder はその録音をその p5.SoundFile に送信し、再生用に利用できるようになります。"
    ],
    "setInput": {
      "description": [
        "p5.SoundRecorder に特定のデバイスを接続します。パラメーターが与えられない場合、p5.SoundRecorder はスケッチから出力されるすべての音を記録します。"
      ],
      "params": {
        "unit": "Object: (オプション) p5.sound オブジェクトまたは音を出力する Web Audio ユニット"
      }
    },
    "record": {
      "description": [
        "録音を開始します。録音した内容にアクセスするには、最初のパラメーターとして p5.SoundFile を提供してください。録音が完了したら、p5.SoundRecorder はその録音を p5.SoundFile に送信し、再生用に利用できるようにします。オプションのパラメーターには、録音の時間（秒単位）と、完了後に呼び出されるコールバック関数があります。"
      ],
      "params": {
        "soundFile": "p5.SoundFile: p5.SoundFile",
        "duration": "Number: (オプション) 時間（秒単位）",
        "callback": "Function: (オプション) 録音が完了した時に呼び出される関数の名前"
      }
    },
    "stop": {
      "description": [
        "録音を停止します。録音が停止すると、結果は .record() で指定された p5.SoundFile に送信され、record() でコールバック関数が指定された場合は、その関数が呼び出されます。"
      ]
    }
  },
  "p5.Distortion": {
    "description": [
      "Web Audio WaveShaper Nodeを使用した歪み効果。効果は、<a href=\"http://stackoverflow.com/questions/22312841/waveshaper-node-in-webaudio-how-to-emulate-distortion\">Kevin Ennis</a>によって開発された手法を採用しています。",
      "このクラスは<a href = \"/reference/#/p5.Effect\">p5.Effect</a>を拡張します。メソッド<a href = \"/reference/#/p5.Effect/amp\">amp()</a>、<a href = \"/reference/#/p5.Effect/chain\">chain()</a>、<a href = \"/reference/#/p5.Effect/drywet\">drywet()</a>、<a href = \"/reference/#/p5.Effect/connect\">connect()</a>、および<a href = \"/reference/#/p5.Effect/disconnect\">disconnect()</a>が使用できます。"
    ],
    "params": {
      "amount": "Number: (オプション) 歪みの量。通常、値は0-1の範囲内です。",
      "oversample": "String: (オプション) 'none'、'2x'、または'4x'。"
    },
    "WaveShaperNode": {
      "description": [
        "p5.Distortionは、<a href=\"http://www.w3.org/TR/webaudio/#WaveShaperNode\">Web Audio WaveShaper Node</a>を使用して構築されています。"
      ]
    },
    "process": {
      "description": [
        "音源を処理し、オプションで量とoversample値を指定します。"
      ],
      "params": {
        "amount": "Number: (オプション) 歪みの量。通常、値は0-1の範囲内です。",
        "oversample": "String: (オプション) 'none'、'2x'、または'4x'。"
      }
    },
    "set": {
      "description": [
        "waveshaper歪みの量とoversampleを設定します。"
      ],
      "params": {
        "amount": "Number: (オプション) 歪みの量。通常、値は0-1の範囲内です。",
        "oversample": "String: (オプション) 'none'、'2x'、または'4x'。"
      }
    },
    "getAmount": {
      "description": [
        "歪みの量を返します。通常、値は0-1の範囲内です。"
      ],
      "returns": "Number: 歪みの量。通常、値は0-1の範囲内です。"
    },
    "getOversample": {
      "description": [
        "oversamplingを返します。"
      ],
      "returns": "String: oversampleは'none'、'2x'、または'4x'のいずれかです。"
    }
  },
  "p5.Gain": {
    "description": [
      "ゲインノードは、音量の相対的な設定に使用されます。通常、ミキサーの構築に使用されます。"
    ],
    "setInput": {
      "description": [
        "ソースをゲインノードに接続します。"
      ],
      "params": {
        "src": "Object: p5.sound / Web Audio オブジェクト (音声出力がある)"
      }
    },
    "connect": {
      "description": [
        "出力を p5.sound または Web Audio オブジェクトに送信します。"
      ],
      "params": {
        "unit": "Object"
      }
    },
    "disconnect": {
      "description": [
        "すべての出力を切断します。"
      ]
    },
    "amp": {
      "description": [
        "ゲインノードの出力レベルを設定します。"
      ],
      "params": {
        "volume": "Number: 0 から 1.0 の振幅値",
        "rampTime": "Number: (オプション) rampTime 秒間のフェードを作成します。",
        "timeFromNow": "Number: (オプション) このイベントを、現在から timeFromNow 秒後に予約します。"
      }
    }
  },
  "p5.AudioVoice": {
    "description": [
      "モノフォニックシンセサイザーのための基底クラスです。このクラスの拡張は、p5.PolySynth()との互換性を維持するために、以下のメソッドを実装し、APIに従う必要があります。"
    ],
    "connect": {
      "description": [
        "p5オブジェクトやWeb Audioノードに接続します。"
      ],
      "params": {
        "unit": "オブジェクト"
      }
    },
    "disconnect": {
      "description": [
        "soundOutから切断します。"
      ]
    }
  },
  "p5.MonoSynth": {
    "description": [
      "MonoSynthは音声合成の単一の声として使用されます。このクラスはPolySynthクラスと一緒に使用することが想定されています。カスタムシンセサイザーは、このクラスを継承して構築する必要があります。"
    ],
    "attack": {
      "description": [
        "ゲッターとセッター"
      ]
    },
    "decay": {},
    "sustain": {},
    "release": {},
    "play": {
      "description": [
        "play()メソッドは、MonoSynthに指定した音符を演奏するよう指示します。このメソッドは、.triggerAttackと.triggerReleaseの呼び出しをスケジュールします。"
      ],
      "params": {
        "note": "String | Number: 演奏する音符を指定します。周波数をヘルツ数で指定する場合は数値、またはNote/Octave形式でMIDI値を指定する場合は(\"C4\", \"Eb3\"...など)。デフォルト値は440 Hzです。",
        "velocity": "Number: (オプション) 演奏する音符のベロシティ (0～1の範囲)。",
        "secondsFromNow": "Number: (オプション) 何秒後に演奏を開始するかを指定します。",
        "sustainTime": "Number: (オプション) エンベロープのリリースをトリガーする前に継続する時間を指定します。デフォルト値は0.15秒です。"
      }
    },
    "triggerAttack": {
      "description": [
        "triggerAttack()メソッドは、エンベロープのAttackとDecay部分をトリガーします。ピアノのキーを押し続けるのに似ていますが、リリースするまでサステインレベルを保持します。"
      ],
      "params": {
        "note": "String | Number: 演奏する音符を指定します。周波数をヘルツ数で指定する場合は数値、またはNote/Octave形式でMIDI値を指定する場合は(\"C4\", \"Eb3\"...など)。デフォルト値は440 Hzです。",
        "velocity": "Number: (オプション) 演奏する音符のベロシティ (0～1の範囲)。",
        "secondsFromNow": "Number: (オプション) 何秒後に演奏を開始するかを指定します。"
      }
    },
    "triggerRelease": {
      "description": [
        "triggerRelease()メソッドは、エンベロープのリリースをトリガーします。ピアノのキーを離して、リリースレベルとリリースタイムに従って音をフェードアウトさせます。"
      ],
      "params": {
        "secondsFromNow": "Number: リリースをトリガーするまでの時間 (単位は秒)"
      }
    },
    "setADSR": {
      "description": [
        "setADSR()メソッドは、<a href=\"https://en.wikipedia.org/wiki/Synthesizer#/media/File:ADSR_parameter.svg\"> ADSRエンベロープ </a>のような値を設定します。"
      ],
      "params": {
        "attackTime": "Number: エンベロープがアタックレベルに到達するまでの時間（単位は秒）",
        "decayTime": "Number: (オプション) エンベロープがディケイ/サステインレベルに到達するまでの時間（単位は秒）",
        "susRatio": "Number: (オプション) アタックレベルとリリースレベルの比率を、0から1のスケールで指定します。1.0 = アタックレベル、0.0 = リリースレベルです。susRatioはディケイレベルと、エンベロープのサステイン部分が継続するレベルを決定します。たとえば、attackLevelが0.4で、releaseLevelが0で、susRatioが0.5の場合、decayLevelは0.2になります。attackLevelをsetRangeを使用して1.0に増やすと、decayLevelは比例して増加し、0.5になります。",
        "releaseTime": "Number: (オプション) 指定された秒数後にリリースする時間 (デフォルト値は0秒)"
      }
    },
    "amp": {
      "description": [
        "MonoSynthの音量を設定します。"
      ],
      "returns": "Number: 新しいボリューム値",
      "params": {
        "vol": "Number: 設定する音量",
        "rampTime": "Number: (オプション) 新しい音量に到達するまでの時間"
      }
    },
    "connect": {
      "description": [
        "p5.sound / Web Audioオブジェクトに接続します。"
      ],
      "params": {
        "unit": "Object: p5.soundまたはWeb Audioオブジェクト"
      }
    },
    "disconnect": {
      "description": [
        "すべての出力を切断します。"
      ]
    },
    "dispose": {
      "description": [
        "MonoSynthを破棄し、そのリソース/メモリを解放します。"
      ]
    }
  },
  "p5.OnsetDetect": {
    "description": [
      "指定された周波数範囲内のオンセット（音量の急激な上昇）を検出します。"
    ],
    "params": {
      "freqLow": "Number: 低周波数",
      "freqHigh": "Number: 高周波数",
      "threshold": "Number: 0（エネルギーなし）から1（最大値）までの振幅閾値",
      "callback": "Function: オンセットが検出されたときに呼び出す関数"
    }
  },
  "p5.PolySynth": {
    "description": [
      "AudioVoiceは、音響合成において単一の音声として使用されます。PolySynthクラスは、AudioVoiceの配列を保持し、音声の割り当て、再生される音符の設定、パラメータの設定を行います。"
    ],
    "params": {
      "synthVoice": "Number: (オプション) AudioVoiceクラスを継承したモノフォニックシンセサイザーの数値。デフォルトはp5.MonoSynthです。",
      "maxVoices": "Number: (オプション) 音声の数。デフォルトは8です。"
    },
    "notes": {
      "description": [
        "再生された音符と現在再生されている音符の情報を保持するオブジェクト。新しい音符は動的にキーとして追加されます。音符がアタックされた状態である間、キーの値はその音を生成しているAudioVoiceです。音符がリリースされると、キーの値はundefinedになります。"
      ]
    },
    "polyvalue": {
      "description": [
        "PolySynthには最低1つの音声が必要です。デフォルトは8です。"
      ]
    },
    "AudioVoice": {
      "description": [
        "各トリガーされた音符の音を生成するモノシンセサイザー。p5.PolySynthはデフォルトでp5.MonoSynthを音声として使用します。"
      ]
    },
    "play": {
      "description": [
        "音符を再生し、サステイン時間を持つnoteAttackとnoteReleaseをトリガーします。"
      ],
      "params": {
        "note": "Number: (オプション) 再生するMIDIノート（0から127の範囲、60は中央のC音です）。",
        "velocity": "Number: (オプション) 再生する音符のベロシティ（0から1の範囲）。",
        "secondsFromNow": "Number: (オプション) 再生する時間（秒単位）。",
        "sustainTime": "Number: (オプション) エンベロープを解除する前にサステインする時間（秒単位）。"
      }
    },
    "noteADSR": {
      "description": [
        "トリガーされた特定の音符に対してエンベロープを設定します。このメソッドを使用すると、希望する音を再生するのに使用されるAudioVoiceのエンベロープが変更されます。変更されたエンベロープが他の音符に使用されることとなるのを防ぐために、noteReleaseが呼び出される前にエンベロープをリセットする必要があります。"
      ],
      "params": {
        "note": "Number: (オプション) ADSRを設定するMIDIノート。",
        "attackTime": "Number: (オプション) エンベロープがAttack Levelに到達するまでの時間（秒単位）。",
        "decayTime": "Number: (オプション) エンベロープがDecay / Sustain Levelに到達するまでの時間（秒単位）。",
        "susRatio": "Number: (オプション) 0から1のスケールで、attackLevelとreleaseLevelの比率。1.0はattackLevelを、0.0はreleaseLevelを表します。susRatioは、decayLevelとエンベロープのサステイン部分が維持されるレベルを決定します。例えば、attackLevelが0.4でreleaseLevelが0で、susRatioが0.5の場合、decayLevelは0.2になります。attackLevelがsetRangeを使用して1.0に増加すると、decayLevelは比例的に増加して0.5になります。",
        "releaseTime": "Number: (オプション) 今から数秒後の時間（デフォルトは0秒）"
      }
    },
    "setADSR": {
      "description": [
        "PolySynthのグローバルエンベロープを設定します。このメソッドを使用すると、各モノシンセサイザーのエンベロープが変更され、すべての音がこのエンベロープで再生されます。"
      ],
      "params": {
        "attackTime": "Number: (オプション) エンベロープがAttack Levelに到達するまでの時間（秒単位）。",
        "decayTime": "Number: (オプション) エンベロープがDecay / Sustain Levelに到達するまでの時間（秒単位）。",
        "susRatio": "Number: (オプション) 0から1のスケールで、attackLevelとreleaseLevelの比率。1.0はattackLevelを、0.0はreleaseLevelを表します。susRatioは、decayLevelとエンベロープのサステイン部分が維持されるレベルを決定します。例えば、attackLevelが0.4でreleaseLevelが0で、susRatioが0.5の場合、decayLevelは0.2になります。attackLevelがsetRangeを使用して1.0に増加すると、decayLevelは比例的に増加して0.5になります。",
        "releaseTime": "Number: (オプション) 今から数秒後の時間（デフォルトは0秒）"
      }
    },
    "noteAttack": {
      "description": [
        "モノシンセのAttackとDecay部分をトリガーします。ピアノのキーを押し続けるのに似ていますが、リリースするまでサステインレベルを保持します。"
      ],
      "params": {
        "note": "Number: (オプション) AttackをトリガーするMIDIノート。",
        "velocity": "Number: (オプション) 再生する音符のベロシティ（0から1の範囲）。",
        "secondsFromNow": "Number: (オプション) 今から数秒後の時間（秒単位）"
      }
    },
    "noteRelease": {
      "description": [
        "AudioVoiceの音符のリリースをトリガーします。これは、ピアノのキーを離して、リリースレベルとリリース時間に応じて音がフェードアウトするのに似ています。"
      ],
      "params": {
        "note": "Number: (オプション) リリースをトリガーするMIDIノート。値が提供されない場合、すべての音符がリリースされます。",
        "secondsFromNow": "Number: (オプション) リリースをトリガーするまでの時間（秒単位）"
      }
    },
    "connect": {
      "description": [
        "p5.sound / Web Audioオブジェクトに接続します。"
      ],
      "params": {
        "unit": "Object: p5.soundまたはWeb Audioオブジェクト"
      }
    },
    "disconnect": {
      "description": [
        "すべての出力を切断します。"
      ]
    },
    "dispose": {
      "description": [
        "MonoSynthを取り除き、そのリソース/メモリを解放します。"
      ]
    }
  }
}